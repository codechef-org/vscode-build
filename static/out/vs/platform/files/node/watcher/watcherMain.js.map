{"version":3,"sources":["out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/arraysFind.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/collections.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/base/common/vs/base/common/iterator.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/file:/root/vscode/src/vs/nls.messages.ts","out-vscode-reh-web/vs/file:/root/vscode/src/vs/nls.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/types.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/symbols.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/decorators.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/marshalling.ts","out-vscode-reh-web/vs/base/parts/ipc/common/file:/root/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode-reh-web/vs/base/parts/ipc/node/file:/root/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode-reh-web/vs/base/node/file:/root/vscode/src/vs/base/node/processes.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/processes.ts","out-vscode-reh-web/vs/base/node/file:/root/vscode/src/vs/base/node/pfs.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/normalization.ts","out-vscode-reh-web/vs/base/parts/sandbox/node/file:/root/vscode/src/vs/base/parts/sandbox/node/electronTypes.ts","out-vscode-reh-web/vs/base/parts/ipc/node/file:/root/vscode/src/vs/base/parts/ipc/node/ipc.mp.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/ternarySearchTree.ts","out-vscode-reh-web/vs/platform/instantiation/common/file:/root/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/platform/files/common/vs/platform/files/common/files.ts","out-vscode-reh-web/vs/platform/files/common/file:/root/vscode/src/vs/platform/files/common/watcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/parcel/file:/root/vscode/src/vs/platform/files/node/watcher/parcel/parcelWatcher.ts","out-vscode-reh-web/vs/base/common/vs/base/common/errorMessage.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/root/vscode/src/vs/platform/files/node/watcher/baseWatcher.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/hash.ts","out-vscode-reh-web/vs/base/node/file:/root/vscode/src/vs/base/node/extpath.ts","out-vscode-reh-web/vs/platform/files/node/watcher/nodejs/file:/root/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcherLib.ts","out-vscode-reh-web/vs/platform/files/node/watcher/nodejs/file:/root/vscode/src/vs/platform/files/node/watcher/nodejs/nodejsWatcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/root/vscode/src/vs/platform/files/node/watcher/watcherStats.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/root/vscode/src/vs/platform/files/node/watcher/watcher.ts","out-vscode-reh-web/vs/platform/files/node/watcher/file:/root/vscode/src/vs/platform/files/node/watcher/watcherMain.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Comparator } from './arrays.js';\n\nexport function findLast<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findLastIdx(array, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn array[idx];\n}\n\nexport function findLastIdx<T>(array: readonly T[], predicate: (item: T) => boolean, fromIndex = array.length - 1): number {\n\tfor (let i = fromIndex; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (predicate(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findLastIdxMonotonous(array, predicate);\n\treturn idx === -1 ? undefined : array[idx];\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\ti = k + 1;\n\t\t} else {\n\t\t\tj = k;\n\t\t}\n\t}\n\treturn i - 1;\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n\treturn idx === array.length ? undefined : array[idx];\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\tj = k;\n\t\t} else {\n\t\t\ti = k + 1;\n\t\t}\n\t}\n\treturn i;\n}\n\nexport function findFirstIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate, startIdx, endIdxEx);\n\treturn idx === array.length ? -1 : idx;\n}\n\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray<T> {\n\tpublic static assertInvariants = false;\n\n\tprivate _findLastMonotonousLastIdx = 0;\n\tprivate _prevFindLastPredicate: ((item: T) => boolean) | undefined;\n\n\tconstructor(private readonly _array: readonly T[]) {\n\t}\n\n\t/**\n\t * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n\t * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n\t */\n\tfindLastMonotonous(predicate: (item: T) => boolean): T | undefined {\n\t\tif (MonotonousArray.assertInvariants) {\n\t\t\tif (this._prevFindLastPredicate) {\n\t\t\t\tfor (const item of this._array) {\n\t\t\t\t\tif (this._prevFindLastPredicate(item) && !predicate(item)) {\n\t\t\t\t\t\tthrow new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prevFindLastPredicate = predicate;\n\t\t}\n\n\t\tconst idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n\t\tthis._findLastMonotonousLastIdx = idx + 1;\n\t\treturn idx === -1 ? undefined : this._array[idx];\n\t}\n}\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findFirstMax(array, (a, b) => -comparator(a, b));\n}\n\nexport function findMaxIdx<T>(array: readonly T[], comparator: Comparator<T>): number {\n\tif (array.length === 0) {\n\t\treturn -1;\n\t}\n\n\tlet maxIdx = 0;\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, array[maxIdx]) > 0) {\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\treturn maxIdx;\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst<T, R>(items: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of items) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\n/** @skipMangle */\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\n/**\n * Returns if the error is a SIGPIPE error. SIGPIPE errors should generally be\n * logged at most once, to avoid a loop.\n *\n * @see https://github.com/microsoft/vscode-remote-release/issues/6481\n */\nexport function isSigPipeError(e: unknown): e is Error {\n\tif (!e || typeof e !== 'object') {\n\t\treturn false;\n\t}\n\n\tconst cast = e as Record<string, string | undefined>;\n\treturn cast.code === 'EPIPE' && cast.syscall?.toUpperCase() === 'WRITE';\n}\n\n/**\n * This function should only be called with errors that indicate a bug in the product.\n * E.g. buggy extensions/invalid user-input/network issues should not be able to trigger this code path.\n * If they are, this indicates there is also a bug in the product.\n*/\nexport function onBugIndicatingError(e: any): undefined {\n\terrorHandler.onUnexpectedError(e);\n\treturn undefined;\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nexport function transformErrorFromSerialization(data: SerializedError): Error {\n\tlet error: Error;\n\tif (data.noTelemetry) {\n\t\terror = new ErrorNoTelemetry();\n\t} else {\n\t\terror = new Error();\n\t\terror.name = data.name;\n\t}\n\terror.message = data.message;\n\terror.stack = data.stack;\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): unknown;\n\tgetTypeName(): string | null;\n\tgetFunction(): Function | undefined;\n\tgetFunctionName(): string | null;\n\tgetMethodName(): string | null;\n\tgetFileName(): string | null;\n\tgetLineNumber(): number | null;\n\tgetColumnNumber(): number | null;\n\tgetEvalOrigin(): string | undefined;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport class ReadonlyError extends TypeError {\n\tconstructor(name?: string) {\n\t\tsuper(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n\t}\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// debugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nimport { CancellationToken } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { ISplice } from './sequence.js';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T | undefined {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy<T>(items: Iterable<T>, shouldBeGrouped: (item1: T, item2: T) => boolean): Iterable<T[]> {\n\tlet currentGroup: T[] | undefined;\n\tlet last: T | undefined;\n\tfor (const item of items) {\n\t\tif (last !== undefined && shouldBeGrouped(last, item)) {\n\t\t\tcurrentGroup!.push(item);\n\t\t} else {\n\t\t\tif (currentGroup) {\n\t\t\t\tyield currentGroup;\n\t\t\t}\n\t\t\tcurrentGroup = [item];\n\t\t}\n\t\tlast = item;\n\t}\n\tif (currentGroup) {\n\t\tyield currentGroup;\n\t}\n}\n\nexport function forEachAdjacent<T>(arr: T[], f: (item1: T | undefined, item2: T | undefined) => void): void {\n\tfor (let i = 0; i <= arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n\t}\n}\n\nexport function forEachWithNeighbors<T>(arr: T[], f: (before: T | undefined, element: T, after: T | undefined) => void): void {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn array.filter((e): e is T => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): asserts array is Array<T> {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: unknown[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => unknown = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tlet result = array.splice(index, deleteCount);\n\tif (result === undefined) {\n\t\t// see https://bugs.webkit.org/show_bug.cgi?id=261140\n\t\tresult = [];\n\t}\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isLessThanOrEqual(result: CompareResult): boolean {\n\t\treturn result <= 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\nexport const booleanComparator: Comparator<boolean> = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\n\nexport function reverseOrder<TItem>(comparator: Comparator<TItem>): Comparator<TItem> {\n\treturn (a, b) => -comparator(a, b);\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n\tconstructor(private readonly _indexMap: readonly number[]) { }\n\n\t/**\n\t * Returns a permutation that sorts the given array according to the given compare function.\n\t */\n\tpublic static createSortPermutation<T>(arr: readonly T[], compareFn: (a: T, b: T) => number): Permutation {\n\t\tconst sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n\t\treturn new Permutation(sortIndices);\n\t}\n\n\t/**\n\t * Returns a new array with the elements of the given array re-arranged according to this permutation.\n\t */\n\tapply<T>(arr: readonly T[]): T[] {\n\t\treturn arr.map((_, index) => arr[this._indexMap[index]]);\n\t}\n\n\t/**\n\t * Returns a new permutation that undoes the re-arrangement of this permutation.\n\t*/\n\tinverse(): Permutation {\n\t\tconst inverseIndexMap = this._indexMap.slice();\n\t\tfor (let i = 0; i < this._indexMap.length; i++) {\n\t\t\tinverseIndexMap[this._indexMap[i]] = i;\n\t\t}\n\t\treturn new Permutation(inverseIndexMap);\n\t}\n}\n\n/**\n * Asynchronous variant of `Array.find()`, returning the first element in\n * the array for which the predicate returns true.\n *\n * This implementation does not bail early and waits for all promises to\n * resolve before returning.\n */\nexport async function findAsync<T>(array: readonly T[], predicate: (element: T, index: number) => Promise<boolean>): Promise<T | undefined> {\n\tconst results = await Promise.all(array.map(\n\t\tasync (element, index) => ({ element, ok: await predicate(element, index) })\n\t));\n\n\treturn results.find(r => r.ok)?.element;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<K extends string | number | symbol, V>(data: V[], groupFn: (element: V) => K): Record<K, V[]> {\n\tconst result: Record<K, V[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function diffSets<T>(before: ReadonlySet<T>, after: ReadonlySet<T>): { removed: T[]; added: T[] } {\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\tfor (const element of before) {\n\t\tif (!after.has(element)) {\n\t\t\tremoved.push(element);\n\t\t}\n\t}\n\tfor (const element of after) {\n\t\tif (!before.has(element)) {\n\t\t\tadded.push(element);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n\tconst removed: V[] = [];\n\tconst added: V[] = [];\n\tfor (const [index, value] of before) {\n\t\tif (!after.has(index)) {\n\t\t\tremoved.push(value);\n\t\t}\n\t}\n\tfor (const [index, value] of after) {\n\t\tif (!before.has(index)) {\n\t\t\tadded.push(value);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection<T>(setA: Set<T>, setB: Iterable<T>): Set<T> {\n\tconst result = new Set<T>();\n\tfor (const elem of setB) {\n\t\tif (setA.has(elem)) {\n\t\t\tresult.add(elem);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class SetWithKey<T> implements Set<T> {\n\tprivate _map = new Map<any, T>();\n\n\tconstructor(values: T[], private toKey: (t: T) => unknown) {\n\t\tfor (const value of values) {\n\t\t\tthis.add(value);\n\t\t}\n\t}\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: T): this {\n\t\tconst key = this.toKey(value);\n\t\tthis._map.set(key, value);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\treturn this._map.delete(this.toKey(value));\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this._map.has(this.toKey(value));\n\t}\n\n\t*entries(): IterableIterator<[T, T]> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield [entry, entry];\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield entry;\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void {\n\t\tthis._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n\t}\n\n\t[Symbol.iterator](): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t[Symbol.toStringTag]: string = 'SetWithKey';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from './uri.js';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nfunction isEntries<T>(arg: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[] | undefined): arg is readonly (readonly [URI, T])[] {\n\treturn Array.isArray(arg);\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(entries?: readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn);\n\n\tconstructor(arg?: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn) {\n\t\tif (arg instanceof ResourceMap) {\n\t\t\tthis.map = new Map(arg.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else if (isEntries(arg)) {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\n\t\t\tfor (const [resource, value] of arg) {\n\t\t\t\tthis.set(resource, value);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = arg ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprotected trimNew(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._tail;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.previous;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._tail = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.next = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nabstract class Cache<K, V> extends LinkedMap<K, V> {\n\n\tprotected _limit: number;\n\tprotected _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\treturn this;\n\t}\n\n\tprotected checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n\n\tprotected abstract trim(newSize: number): void;\n}\n\nexport class LRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimOld(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n}\n\nexport class MRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimNew(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tif (this._limit <= this.size && !this.has(key)) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio) - 1);\n\t\t}\n\n\t\tsuper.set(key, value);\n\t\treturn this;\n\t}\n}\n\nexport class CounterSet<T> {\n\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap<K, V> {\n\n\tprivate readonly _m1 = new Map<K, V>();\n\tprivate readonly _m2 = new Map<V, K>();\n\n\tconstructor(entries?: readonly (readonly [K, V])[]) {\n\t\tif (entries) {\n\t\t\tfor (const [key, value] of entries) {\n\t\t\t\tthis.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._m1.clear();\n\t\tthis._m2.clear();\n\t}\n\n\tset(key: K, value: V): void {\n\t\tthis._m1.set(key, value);\n\t\tthis._m2.set(value, key);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._m1.get(key);\n\t}\n\n\tgetKey(value: V): K | undefined {\n\t\treturn this._m2.get(value);\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst value = this._m1.get(key);\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._m1.delete(key);\n\t\tthis._m2.delete(value);\n\t\treturn true;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: BidirectionalMap<K, V>) => void, thisArg?: any): void {\n\t\tthis._m1.forEach((value, key) => {\n\t\t\tcallbackfn.call(thisArg, value, key, this);\n\t\t});\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._m1.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._m1.values();\n\t}\n}\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n\n\tget(key: K): ReadonlySet<V> {\n\t\tconst values = this.map.get(key);\n\t\tif (!values) {\n\t\t\treturn new Set<V>();\n\t\t}\n\t\treturn values;\n\t}\n}\n\nexport function mapsStrictEqualIgnoreOrder(a: Map<unknown, unknown>, b: Map<unknown, unknown>): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.size !== b.size) {\n\t\treturn false;\n\t}\n\n\tfor (const [key, value] of a) {\n\t\tif (!b.has(key) || b.get(key) !== value) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (const [key] of b) {\n\t\tif (!a.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * A map that is addressable with 2 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n\tprivate _data: { [key: string | number]: { [key: string | number]: TValue | undefined } | undefined } = {};\n\n\tpublic set(first: TFirst, second: TSecond, value: TValue): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = {};\n\t\t}\n\t\tthis._data[first as string | number]![second] = value;\n\t}\n\n\tpublic get(first: TFirst, second: TSecond): TValue | undefined {\n\t\treturn this._data[first as string | number]?.[second];\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const second in this._data[first]) {\n\t\t\t\tconst value = this._data[first]![second];\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 3 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class ThreeKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TValue> {\n\tprivate _data: { [key: string | number]: TwoKeyMap<TSecond, TThird, TValue> | undefined } = {};\n\n\tpublic set(first: TFirst, second: TSecond, third: TThird, value: TValue): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = new TwoKeyMap();\n\t\t}\n\t\tthis._data[first as string | number]!.set(second, third, value);\n\t}\n\n\tpublic get(first: TFirst, second: TSecond, third: TThird): TValue | undefined {\n\t\treturn this._data[first as string | number]?.get(second, third);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const value of this._data[first]!.values()) {\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 4 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n\tprivate _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n\tpublic set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n\t\tif (!this._data.get(first, second)) {\n\t\t\tthis._data.set(first, second, new TwoKeyMap());\n\t\t}\n\t\tthis._data.get(first, second)!.set(third, fourth, value);\n\t}\n\n\tpublic get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n\t\treturn this._data.get(first, second)?.get(third, fourth);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction<T extends Function>(this: unknown, fn: T, fnDidRunCallback?: () => void): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tif (fnDidRunCallback) {\n\t\t\ttry {\n\t\t\t\tresult = fn.apply(_this, arguments);\n\t\t\t} finally {\n\t\t\t\tfnDidRunCallback();\n\t\t\t}\n\t\t} else {\n\t\t\tresult = fn.apply(_this, arguments);\n\t\t}\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is Iterable<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function wrap<T>(iterableOrElement: Iterable<T> | T): Iterable<T> {\n\t\tif (is(iterableOrElement)) {\n\t\t\treturn iterableOrElement;\n\t\t} else {\n\t\t\treturn single(iterableOrElement);\n\t\t}\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function* reverse<T>(array: Array<T>): Iterable<T> {\n\t\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\t\tyield array[i];\n\t\t}\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element, i++)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): R | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* flatMap<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => Iterable<R>): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield* fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tyield* iterable;\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\texport async function asyncToArray<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is Iterable<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function wrap<T>(iterableOrElement: Iterable<T> | T): Iterable<T> {\n\t\tif (is(iterableOrElement)) {\n\t\t\treturn iterableOrElement;\n\t\t} else {\n\t\t\treturn single(iterableOrElement);\n\t\t}\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function* reverse<T>(array: Array<T>): Iterable<T> {\n\t\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\t\tyield array[i];\n\t\t}\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element, i++)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): R | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* flatMap<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => Iterable<R>): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield* fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tyield* iterable;\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\texport async function asyncToArray<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n\n// #region Disposable Tracking\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport interface DisposableInfo {\n\tvalue: IDisposable;\n\tsource: string | null;\n\tparent: IDisposable | null;\n\tisSingleton: boolean;\n\tidx: number;\n}\n\nexport class DisposableTracker implements IDisposableTracker {\n\tprivate static idx = 0;\n\n\tprivate readonly livingDisposables = new Map<IDisposable, DisposableInfo>();\n\n\tprivate getDisposableData(d: IDisposable): DisposableInfo {\n\t\tlet val = this.livingDisposables.get(d);\n\t\tif (!val) {\n\t\t\tval = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n\t\t\tthis.livingDisposables.set(d, val);\n\t\t}\n\t\treturn val;\n\t}\n\n\ttrackDisposable(d: IDisposable): void {\n\t\tconst data = this.getDisposableData(d);\n\t\tif (!data.source) {\n\t\t\tdata.source =\n\t\t\t\tnew Error().stack!;\n\t\t}\n\t}\n\n\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\tconst data = this.getDisposableData(child);\n\t\tdata.parent = parent;\n\t}\n\n\tmarkAsDisposed(x: IDisposable): void {\n\t\tthis.livingDisposables.delete(x);\n\t}\n\n\tmarkAsSingleton(disposable: IDisposable): void {\n\t\tthis.getDisposableData(disposable).isSingleton = true;\n\t}\n\n\tprivate getRootParent(data: DisposableInfo, cache: Map<DisposableInfo, DisposableInfo>): DisposableInfo {\n\t\tconst cacheValue = cache.get(data);\n\t\tif (cacheValue) {\n\t\t\treturn cacheValue;\n\t\t}\n\n\t\tconst result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n\t\tcache.set(data, result);\n\t\treturn result;\n\t}\n\n\tgetTrackedDisposables(): IDisposable[] {\n\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\tconst leaking = [...this.livingDisposables.entries()]\n\t\t\t.filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n\t\t\t.flatMap(([k]) => k);\n\n\t\treturn leaking;\n\t}\n\n\tcomputeLeakingDisposables(maxReported = 10, preComputedLeaks?: DisposableInfo[]): { leaks: DisposableInfo[]; details: string } | undefined {\n\t\tlet uncoveredLeakingObjs: DisposableInfo[] | undefined;\n\t\tif (preComputedLeaks) {\n\t\t\tuncoveredLeakingObjs = preComputedLeaks;\n\t\t} else {\n\t\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\t\tconst leakingObjects = [...this.livingDisposables.values()]\n\t\t\t\t.filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n\n\t\t\tif (leakingObjects.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst leakingObjsSet = new Set(leakingObjects.map(o => o.value));\n\n\t\t\t// Remove all objects that are a child of other leaking objects. Assumes there are no cycles.\n\t\t\tuncoveredLeakingObjs = leakingObjects.filter(l => {\n\t\t\t\treturn !(l.parent && leakingObjsSet.has(l.parent));\n\t\t\t});\n\n\t\t\tif (uncoveredLeakingObjs.length === 0) {\n\t\t\t\tthrow new Error('There are cyclic diposable chains!');\n\t\t\t}\n\t\t}\n\n\t\tif (!uncoveredLeakingObjs) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfunction getStackTracePath(leaking: DisposableInfo): string[] {\n\t\t\tfunction removePrefix(array: string[], linesToRemove: (string | RegExp)[]) {\n\t\t\t\twhile (array.length > 0 && linesToRemove.some(regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp))) {\n\t\t\t\t\tarray.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lines = leaking.source!.split('\\n').map(p => p.trim().replace('at ', '')).filter(l => l !== '');\n\t\t\tremovePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n\t\t\treturn lines.reverse();\n\t\t}\n\n\t\tconst stackTraceStarts = new SetMap<string, DisposableInfo>();\n\t\tfor (const leaking of uncoveredLeakingObjs) {\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tfor (let i = 0; i <= stackTracePath.length; i++) {\n\t\t\t\tstackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n\t\t\t}\n\t\t}\n\n\t\t// Put earlier leaks first\n\t\tuncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n\n\t\tlet message = '';\n\n\t\tlet i = 0;\n\t\tfor (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n\t\t\ti++;\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tconst stackTraceFormattedLines = [];\n\n\t\t\tfor (let i = 0; i < stackTracePath.length; i++) {\n\t\t\t\tlet line = stackTracePath[i];\n\t\t\t\tconst starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n\t\t\t\tline = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n\n\t\t\t\tconst prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n\t\t\t\tconst continuations = groupBy([...prevStarts].map(d => getStackTracePath(d)[i]), v => v);\n\t\t\t\tdelete continuations[stackTracePath[i]];\n\t\t\t\tfor (const [cont, set] of Object.entries(continuations)) {\n\t\t\t\t\tstackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n\t\t\t\t}\n\n\t\t\t\tstackTraceFormattedLines.unshift(line);\n\t\t\t}\n\n\t\t\tmessage += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n\t\t}\n\n\t\tif (uncoveredLeakingObjs.length > maxReported) {\n\t\t\tmessage += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n\t\t}\n\n\t\treturn { leaks: uncoveredLeakingObjs, details: message };\n\t}\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nexport function markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\n// #endregion\n\n/**\n * An object that performs a cleanup operation when `.dispose()` is called.\n *\n * Some examples of how disposables are used:\n *\n * - An event listener that removes itself when `.dispose()` is called.\n * - A resource such as a file system watcher that cleans up the resource when `.dispose()` is called.\n * - The return value from registering a provider. When `.dispose()` is called, the provider is unregistered.\n */\nexport interface IDisposable {\n\tdispose(): void;\n}\n\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable<E extends any>(thing: E): thing is E & IDisposable {\n\treturn typeof thing === 'object' && thing !== null && typeof (<IDisposable><any>thing).dispose === 'function' && (<IDisposable><any>thing).dispose.length === 0;\n}\n\n/**\n * Disposes of the value(s) passed in.\n */\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends Iterable<T> = Iterable<T>>(disposables: A): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | Iterable<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: createSingleCallFunction(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate readonly _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * @return `true` if this object has been disposed of.\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tif (this._toDispose.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._toDispose);\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Add a new {@link IDisposable disposable} to the collection.\n\t */\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\t/**\n\t * Deletes a disposable from store and disposes of it. This will not throw or warn and proceed to dispose the\n\t * disposable even when the disposable is not part in the store.\n\t */\n\tpublic delete<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot dispose a disposable on itself!');\n\t\t}\n\t\tthis._toDispose.delete(o);\n\t\to.dispose();\n\t}\n\n\t/**\n\t * Deletes the value from the store, but does not dispose it.\n\t */\n\tpublic deleteAndLeak<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._toDispose.has(o)) {\n\t\t\tthis._toDispose.delete(o);\n\t\t\tsetParentOfDisposable(o, null);\n\t\t}\n\t}\n}\n\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport abstract class Disposable implements IDisposable {\n\n\t/**\n\t * A disposable that does nothing when it is disposed of.\n\t *\n\t * TODO: This should not be a static property.\n\t */\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\t/**\n\t * Adds `o` to the collection of disposables managed by this object.\n\t */\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * Resets the stored value and disposed of the previously stored value.\n\t */\n\tclear(): void {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed like {@link MutableDisposable}, but the value must\n * exist and cannot be undefined.\n */\nexport class MandatoryMutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate readonly _disposable = new MutableDisposable<T>();\n\tprivate _isDisposed = false;\n\n\tconstructor(initialValue: T) {\n\t\tthis._disposable.value = initialValue;\n\t}\n\n\tget value(): T {\n\t\treturn this._disposable.value!;\n\t}\n\n\tset value(value: T) {\n\t\tif (this._isDisposed || value === this._disposable.value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposable.value = value;\n\t}\n\n\tdispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._disposable.dispose();\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = createSingleCallFunction(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap<K, V extends IDisposable = IDisposable> implements IDisposable {\n\n\tprivate readonly _store = new Map<K, V>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Disposes of all stored values and mark this object as disposed.\n\t *\n\t * Trying to use this object after it has been disposed of is an error.\n\t */\n\tdispose(): void {\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clearAndDisposeAll();\n\t}\n\n\t/**\n\t * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n\t */\n\tclearAndDisposeAll(): void {\n\t\tif (!this._store.size) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._store.values());\n\t\t} finally {\n\t\t\tthis._store.clear();\n\t\t}\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._store.has(key);\n\t}\n\n\tget size(): number {\n\t\treturn this._store.size;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._store.get(key);\n\t}\n\n\tset(key: K, value: V, skipDisposeOnOverwrite = false): void {\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n\t\t}\n\n\t\tif (!skipDisposeOnOverwrite) {\n\t\t\tthis._store.get(key)?.dispose();\n\t\t}\n\n\t\tthis._store.set(key, value);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map and also dispose of it.\n\t */\n\tdeleteAndDispose(key: K): void {\n\t\tthis._store.get(key)?.dispose();\n\t\tthis._store.delete(key);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map but return it. The caller is\n\t * responsible for disposing of the value.\n\t */\n\tdeleteAndLeak(key: K): V | undefined {\n\t\tconst value = this._store.get(key);\n\t\tthis._store.delete(key);\n\t\treturn value;\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._store.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._store.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this._store[Symbol.iterator]();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// fake definition so that the valid layers check won't trip on this\ndeclare const globalThis: { performance?: { now(): number } };\n\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tprivate readonly _now: () => number;\n\n\tpublic static create(highResolution?: boolean): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution?: boolean) {\n\t\tthis._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance!.now.bind(globalThis.performance);\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from './cancellation.js';\nimport { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableMap, DisposableStore, IDisposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { IObservable, IObserver } from './observable.js';\nimport { StopWatch } from './stopwatch.js';\nimport { MicrotaskDelay } from './symbols.js';\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a listener is GC'ed without having been disposed. This is a LEAK.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableListenerGCedWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n/**\n * An event with zero or one parameters that can be subscribed to. The event is a function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onDidAddListener: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onDidAddListener = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n\t * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n\t * result of merging events and to try prevent race conditions that could arise when using related deferred and\n\t * non-deferred events.\n\t *\n\t * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n\t * (eg. latency of keypress to text rendered).\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function defer(event: Event<unknown>, disposable?: DisposableStore): Event<void> {\n\t\treturn debounce<unknown, void>(event, () => void 0, 0, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once, and only when the condition is met.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function onceIf<T>(event: Event<T>, condition: (e: T) => boolean): Event<T> {\n\t\treturn Event.once(Event.filter(event, condition));\n\t}\n\n\t/**\n\t * Maps an event of one type into an event of another type using a mapping function, similar to how\n\t * `Array.prototype.map` works.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param map The mapping function.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that performs some function on the event object before firing.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param each The function to perform on the event object.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that fires only when some condition is met.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param filter The filter function that defines the condition. The event will fire for the object if this function\n\t * returns true.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\tconst disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n\t\t\treturn addAndReturnDisposable(disposable, disposables);\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Adds the IDisposable to the store if it's set, and returns it. Useful to\n\t * Event function implementation.\n\t */\n\tfunction addAndReturnDisposable<T extends IDisposable>(d: T, store: DisposableStore | IDisposable[] | undefined): T {\n\t\tif (store instanceof Array) {\n\t\t\tstore.push(d);\n\t\t} else if (store) {\n\t\t\tstore.add(d);\n\t\t}\n\t\treturn d;\n\t}\n\n\t/**\n\t * Given an event, creates a new emitter that event that will debounce events based on {@link delay} and give an\n\t * array event object of all events that fired.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The original event to debounce.\n\t * @param merge A function that reduces all events into a single event.\n\t * @param delay The number of milliseconds to debounce.\n\t * @param leading Whether to fire a leading event without debouncing.\n\t * @param flushOnListenerRemove Whether to fire all debounced events when a listener is removed. If this is not\n\t * specified, some events could go missing. Use this if it's important that all events are processed, even if the\n\t * listener gets disposed before the debounced event fires.\n\t * @param leakWarningThreshold See {@link EmitterOptions.leakWarningThreshold}.\n\t * @param disposable A disposable store to register the debounce emitter to.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number | typeof MicrotaskDelay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\t\tlet doFire: (() => void) | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tdoFire = () => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof delay === 'number') {\n\t\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\t\thandle = setTimeout(doFire, delay);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (handle === undefined) {\n\t\t\t\t\t\t\thandle = 0;\n\t\t\t\t\t\t\tqueueMicrotask(doFire);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonWillRemoveListener() {\n\t\t\t\tif (flushOnListenerRemove && numDebouncedCalls > 0) {\n\t\t\t\t\tdoFire?.();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tdoFire = undefined;\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function accumulate<T>(event: Event<T>, delay: number = 0, disposable?: DisposableStore): Event<T[]> {\n\t\treturn Event.debounce<T, T[]>(event, (last, e) => {\n\t\t\tif (!last) {\n\t\t\t\treturn [e];\n\t\t\t}\n\t\t\tlast.push(e);\n\t\t\treturn last;\n\t\t}, delay, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n\t * event objects from different sources do not fire the same event object.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param equals The equality condition.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t *\n\t * @example\n\t * ```\n\t * // Fire only one time when a single window is opened or focused\n\t * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n\t * ```\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @example\n\t * ```\n\t * const event = new EventEmitter<number | undefined>().event;\n\t * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n\t * ```\n\t *\n\t * @param event The event source for the new event.\n\t * @param isT A function that determines what event is of the first type.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * Buffers an event until it has a listener attached.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n\t * `setTimeout` when the first event listener is added.\n\t * @param _buffer Internal: A source event array used for tests.\n\t *\n\t * @example\n\t * ```\n\t * // Start accumulating events, when the first listener is attached, flush\n\t * // the event after a timeout such that multiple listeners attached before\n\t * // the timeout would receive the event\n\t * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = [], disposable?: DisposableStore): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(listener);\n\t\t}\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t\tif (disposable) {\n\t\t\t\t\t\tdisposable.add(listener);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidAddFirstListener() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(emitter);\n\t\t}\n\n\t\treturn emitter.event;\n\t}\n\t/**\n\t * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n\t *\n\t * @example\n\t * ```\n\t * // Normal\n\t * const onEnterPressNormal = Event.filter(\n\t *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n\t *   e.keyCode === KeyCode.Enter\n\t * ).event;\n\t *\n\t * // Using chain\n\t * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n\t *   .map(e => new StandardKeyboardEvent(e))\n\t *   .filter(e => e.keyCode === KeyCode.Enter)\n\t * );\n\t * ```\n\t */\n\texport function chain<T, R>(event: Event<T>, sythensize: ($: IChainableSythensis<T>) => IChainableSythensis<R>): Event<R> {\n\t\tconst fn: Event<R> = (listener, thisArgs, disposables) => {\n\t\t\tconst cs = sythensize(new ChainableSynthesis()) as ChainableSynthesis;\n\t\t\treturn event(function (value) {\n\t\t\t\tconst result = cs.evaluate(value);\n\t\t\t\tif (result !== HaltChainable) {\n\t\t\t\t\tlistener.call(thisArgs, result);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\n\t\treturn fn;\n\t}\n\n\tconst HaltChainable = Symbol('HaltChainable');\n\n\tclass ChainableSynthesis implements IChainableSythensis<any> {\n\t\tprivate readonly steps: ((input: any) => unknown)[] = [];\n\n\t\tmap<O>(fn: (i: any) => O): this {\n\t\t\tthis.steps.push(fn);\n\t\t\treturn this;\n\t\t}\n\n\t\tforEach(fn: (i: any) => void): this {\n\t\t\tthis.steps.push(v => {\n\t\t\t\tfn(v);\n\t\t\t\treturn v;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tfilter(fn: (e: any) => boolean): this {\n\t\t\tthis.steps.push(v => fn(v) ? v : HaltChainable);\n\t\t\treturn this;\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: any) => R, initial?: R | undefined): this {\n\t\t\tlet last = initial;\n\t\t\tthis.steps.push(v => {\n\t\t\t\tlast = merge(last, v);\n\t\t\t\treturn last;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tlatch(equals: (a: any, b: any) => boolean = (a, b) => a === b): ChainableSynthesis {\n\t\t\tlet firstCall = true;\n\t\t\tlet cache: any;\n\t\t\tthis.steps.push(value => {\n\t\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\t\tfirstCall = false;\n\t\t\t\tcache = value;\n\t\t\t\treturn shouldEmit ? value : HaltChainable;\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tpublic evaluate(value: any) {\n\t\t\tfor (const step of this.steps) {\n\t\t\t\tvalue = step(value);\n\t\t\t\tif (value === HaltChainable) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t}\n\n\texport interface IChainableSythensis<T> {\n\t\tmap<O>(fn: (i: T) => O): IChainableSythensis<O>;\n\t\tforEach(fn: (i: T) => void): IChainableSythensis<T>;\n\t\tfilter<R extends T>(fn: (e: T) => e is R): IChainableSythensis<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableSythensis<T>;\n\t\treduce<R>(merge: (last: R, event: T) => R, initial: R): IChainableSythensis<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R): IChainableSythensis<R>;\n\t\tlatch(equals?: (a: T, b: T) => boolean): IChainableSythensis<T>;\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a node event emitter.\n\t */\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a DOM event emitter.\n\t */\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\t/**\n\t * Creates a promise out of an event, using the {@link Event.once} helper.\n\t */\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\t/**\n\t * Creates an event out of a promise that fires once when the promise is\n\t * resolved with the result of the promise or `undefined`.\n\t */\n\texport function fromPromise<T>(promise: Promise<T>): Event<T | undefined> {\n\t\tconst result = new Emitter<T | undefined>();\n\n\t\tpromise.then(res => {\n\t\t\tresult.fire(res);\n\t\t}, () => {\n\t\t\tresult.fire(undefined);\n\t\t}).finally(() => {\n\t\t\tresult.dispose();\n\t\t});\n\n\t\treturn result.event;\n\t}\n\n\t/**\n\t * A convenience function for forwarding an event to another emitter which\n\t * improves readability.\n\t *\n\t * This is similar to {@link Relay} but allows instantiating and forwarding\n\t * on a single line and also allows for multiple source events.\n\t * @param from The event to forward.\n\t * @param to The emitter to forward the event to.\n\t * @example\n\t * Event.forward(event, emitter);\n\t * // equivalent to\n\t * event(e => emitter.fire(e));\n\t * // equivalent to\n\t * event(emitter.fire, emitter);\n\t */\n\texport function forward<T>(from: Event<T>, to: Emitter<T>): IDisposable {\n\t\treturn from(e => to.fire(e));\n\t}\n\n\t/**\n\t * Adds a listener to an event and calls the listener immediately with undefined as the event object.\n\t *\n\t * @example\n\t * ```\n\t * // Initialize the UI and update it when dataChangeEvent fires\n\t * runAndSubscribe(dataChangeEvent, () => this._updateUI());\n\t * ```\n\t */\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T) => unknown, initial: T): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown, initial?: T): IDisposable {\n\t\thandler(initial);\n\t\treturn event(e => handler(e));\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly _observable: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options: EmitterOptions = {\n\t\t\t\tonWillAddFirstListener: () => {\n\t\t\t\t\t_observable.addObserver(this);\n\n\t\t\t\t\t// Communicate to the observable that we received its current value and would like to be notified about future changes.\n\t\t\t\t\tthis._observable.reportChanges();\n\t\t\t\t},\n\t\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\t\t_observable.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandlePossibleChange<T>(_observable: IObservable<T, unknown>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter--;\n\t\t\tif (this._counter === 0) {\n\t\t\t\tthis._observable.reportChanges();\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this._observable.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an event emitter that is fired when the observable changes.\n\t * Each listeners subscribes to the emitter.\n\t */\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n\n\t/**\n\t * Each listener is attached to the observable directly.\n\t */\n\texport function fromObservableLight(observable: IObservable<any>): Event<void> {\n\t\treturn (listener, thisArgs, disposables) => {\n\t\t\tlet count = 0;\n\t\t\tlet didChange = false;\n\t\t\tconst observer: IObserver = {\n\t\t\t\tbeginUpdate() {\n\t\t\t\t\tcount++;\n\t\t\t\t},\n\t\t\t\tendUpdate() {\n\t\t\t\t\tcount--;\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tobservable.reportChanges();\n\t\t\t\t\t\tif (didChange) {\n\t\t\t\t\t\t\tdidChange = false;\n\t\t\t\t\t\t\tlistener.call(thisArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandlePossibleChange() {\n\t\t\t\t\t// noop\n\t\t\t\t},\n\t\t\t\thandleChange() {\n\t\t\t\t\tdidChange = true;\n\t\t\t\t}\n\t\t\t};\n\t\t\tobservable.addObserver(observer);\n\t\t\tobservable.reportChanges();\n\t\t\tconst disposable = {\n\t\t\t\tdispose() {\n\t\t\t\t\tobservable.removeObserver(observer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(disposable);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(disposable);\n\t\t\t}\n\n\t\t\treturn disposable;\n\t\t};\n\t}\n}\n\nexport interface EmitterOptions {\n\t/**\n\t * Optional function that's called *before* the very first listener is added\n\t */\n\tonWillAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called *after* the very first listener is added\n\t */\n\tonDidAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called after a listener is added\n\t */\n\tonDidAddListener?: Function;\n\t/**\n\t * Optional function that's called *after* remove the very last listener\n\t */\n\tonDidRemoveLastListener?: Function;\n\t/**\n\t * Optional function that's called *before* a listener is removed\n\t */\n\tonWillRemoveListener?: Function;\n\t/**\n\t * Optional function that's called when a listener throws an error. Defaults to\n\t * {@link onUnexpectedError}\n\t */\n\tonListenerError?: (e: any) => void;\n\t/**\n\t * Number of listeners that are allowed before assuming a leak. Default to\n\t * a globally configured value\n\t *\n\t * @see setGlobalLeakWarningThreshold\n\t */\n\tleakWarningThreshold?: number;\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch();\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate static _idPool = 1;\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _errorHandler: (err: Error) => void,\n\t\treadonly threshold: number,\n\t\treadonly name: string = (LeakageMonitor._idPool++).toString(16).padStart(3, '0')\n\t) { }\n\n\tdispose(): void {\n\t\tthis._stacks?.clear();\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tconst threshold = this.threshold;\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\tconst [topStack, topCount] = this.getMostFrequentStack()!;\n\t\t\tconst message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n\t\t\tconsole.warn(message);\n\t\t\tconsole.warn(topStack!);\n\n\t\t\tconst error = new ListenerLeakError(message, topStack);\n\t\t\tthis._errorHandler(error);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n\n\tgetMostFrequentStack(): [string, number] | undefined {\n\t\tif (!this._stacks) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet topStack: [string, number] | undefined;\n\t\tlet topCount: number = 0;\n\t\tfor (const [stack, count] of this._stacks) {\n\t\t\tif (!topStack || topCount < count) {\n\t\t\t\ttopStack = [stack, count];\n\t\t\t\ttopCount = count;\n\t\t\t}\n\t\t}\n\t\treturn topStack;\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\tconst err = new Error();\n\t\treturn new Stacktrace(err.stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\n// error that is logged when going over the configured listener threshold\nexport class ListenerLeakError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerLeakError';\n\t\tthis.stack = stack;\n\t}\n}\n\n// SEVERE error that is logged when having gone way over the configured listener\n// threshold so that the emitter refuses to accept more listeners\nexport class ListenerRefusalError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerRefusalError';\n\t\tthis.stack = stack;\n\t}\n}\n\nlet id = 0;\nclass UniqueContainer<T> {\n\tstack?: Stacktrace;\n\tpublic id = id++;\n\tconstructor(public readonly value: T) { }\n}\nconst compactionThreshold = 2;\n\ntype ListenerContainer<T> = UniqueContainer<(data: T) => void>;\ntype ListenerOrListeners<T> = (ListenerContainer<T> | undefined)[] | ListenerContainer<T>;\n\nconst forEachListener = <T>(listeners: ListenerOrListeners<T>, fn: (c: ListenerContainer<T>) => void) => {\n\tif (listeners instanceof UniqueContainer) {\n\t\tfn(listeners);\n\t} else {\n\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\tconst l = listeners[i];\n\t\t\tif (l) {\n\t\t\t\tfn(l);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\nlet _listenerFinalizers: FinalizationRegistry<string> | undefined;\n\nif (_enableListenerGCedWarning) {\n\tconst leaks: string[] = [];\n\n\tsetInterval(() => {\n\t\tif (leaks.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn('[LEAKING LISTENERS] GC\\'ed these listeners that were NOT yet disposed:');\n\t\tconsole.warn(leaks.join('\\n'));\n\t\tleaks.length = 0;\n\t}, 3000);\n\n\t_listenerFinalizers = new FinalizationRegistry(heldValue => {\n\t\tif (typeof heldValue === 'string') {\n\t\t\tleaks.push(heldValue);\n\t\t}\n\t});\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed?: true;\n\tprivate _event?: Event<T>;\n\n\t/**\n\t * A listener, or list of listeners. A single listener is the most common\n\t * for event emitters (#185789), so we optimize that special case to avoid\n\t * wrapping it in an array (just like Node.js itself.)\n\t *\n\t * A list of listeners never 'downgrades' back to a plain function if\n\t * listeners are removed, for two reasons:\n\t *\n\t *  1. That's complicated (especially with the deliveryQueue)\n\t *  2. A listener with >1 listener is likely to have >1 listener again at\n\t *     some point, and swapping between arrays and functions may[citation needed]\n\t *     introduce unnecessary work and garbage.\n\t *\n\t * The array listeners can be 'sparse', to avoid reallocating the array\n\t * whenever any listener is added or removed. If more than `1 / compactionThreshold`\n\t * of the array is empty, only then is it resized.\n\t */\n\tprotected _listeners?: ListenerOrListeners<T>;\n\n\t/**\n\t * Always to be defined if _listeners is an array. It's no longer a true\n\t * queue, but holds the dispatching 'state'. If `fire()` is called on an\n\t * emitter, any work left in the _deliveryQueue is finished first.\n\t */\n\tprivate _deliveryQueue?: EventDeliveryQueuePrivate;\n\tprotected _size = 0;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n\t\t\t? new LeakageMonitor(options?.onListenerError ?? onUnexpectedError, this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold) :\n\t\t\tundefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue as EventDeliveryQueuePrivate | undefined;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._deliveryQueue?.current === this) {\n\t\t\t\tthis._deliveryQueue.reset();\n\t\t\t}\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = this._listeners;\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tforEachListener(listeners, l => l.stack?.print());\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners = undefined;\n\t\t\t\tthis._size = 0;\n\t\t\t}\n\t\t\tthis._options?.onDidRemoveLastListener?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tthis._event ??= (callback: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\tif (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n\t\t\t\tconst message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n\t\t\t\tconsole.warn(message);\n\n\t\t\t\tconst tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n\t\t\t\tconst error = new ListenerRefusalError(`${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`, tuple[0]);\n\t\t\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\t\t\terrorHandler(error);\n\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (this._disposed) {\n\t\t\t\t// todo: should we warn if a listener is added to a disposed emitter? This happens often\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (thisArgs) {\n\t\t\t\tcallback = callback.bind(thisArgs);\n\t\t\t}\n\n\t\t\tconst contained = new UniqueContainer(callback);\n\n\t\t\tlet removeMonitor: Function | undefined;\n\t\t\tlet stack: Stacktrace | undefined;\n\t\t\tif (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tcontained.stack = Stacktrace.create();\n\t\t\t\tremoveMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n\t\t\t}\n\n\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\tcontained.stack = stack ?? Stacktrace.create();\n\t\t\t}\n\n\t\t\tif (!this._listeners) {\n\t\t\t\tthis._options?.onWillAddFirstListener?.(this);\n\t\t\t\tthis._listeners = contained;\n\t\t\t\tthis._options?.onDidAddFirstListener?.(this);\n\t\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\t\tthis._deliveryQueue ??= new EventDeliveryQueuePrivate();\n\t\t\t\tthis._listeners = [this._listeners, contained];\n\t\t\t} else {\n\t\t\t\tthis._listeners.push(contained);\n\t\t\t}\n\t\t\tthis._options?.onDidAddListener?.(this);\n\n\t\t\tthis._size++;\n\n\n\t\t\tconst result = toDisposable(() => {\n\t\t\t\t_listenerFinalizers?.unregister(result);\n\t\t\t\tremoveMonitor?.();\n\t\t\t\tthis._removeListener(contained);\n\t\t\t});\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(result);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\n\t\t\tif (_listenerFinalizers) {\n\t\t\t\tconst stack = new Error().stack!.split('\\n').slice(2, 3).join('\\n').trim();\n\t\t\t\tconst match = /(file:|vscode-file:\\/\\/vscode-app)?(\\/[^:]*:\\d+:\\d+)/.exec(stack);\n\t\t\t\t_listenerFinalizers.register(result, match?.[2] ?? stack, result);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\treturn this._event;\n\t}\n\n\tprivate _removeListener(listener: ListenerContainer<T>) {\n\t\tthis._options?.onWillRemoveListener?.(this);\n\n\t\tif (!this._listeners) {\n\t\t\treturn; // expected if a listener gets disposed\n\t\t}\n\n\t\tif (this._size === 1) {\n\t\t\tthis._listeners = undefined;\n\t\t\tthis._options?.onDidRemoveLastListener?.(this);\n\t\t\tthis._size = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// size > 1 which requires that listeners be a list:\n\t\tconst listeners = this._listeners as (ListenerContainer<T> | undefined)[];\n\n\t\tconst index = listeners.indexOf(listener);\n\t\tif (index === -1) {\n\t\t\tconsole.log('disposed?', this._disposed);\n\t\t\tconsole.log('size?', this._size);\n\t\t\tconsole.log('arr?', JSON.stringify(this._listeners));\n\t\t\tthrow new Error('Attempted to dispose unknown listener');\n\t\t}\n\n\t\tthis._size--;\n\t\tlisteners[index] = undefined;\n\n\t\tconst adjustDeliveryQueue = this._deliveryQueue!.current === this;\n\t\tif (this._size * compactionThreshold <= listeners.length) {\n\t\t\tlet n = 0;\n\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\tif (listeners[i]) {\n\t\t\t\t\tlisteners[n++] = listeners[i];\n\t\t\t\t} else if (adjustDeliveryQueue && n < this._deliveryQueue!.end) {\n\t\t\t\t\tthis._deliveryQueue!.end--;\n\t\t\t\t\tif (n < this._deliveryQueue!.i) {\n\t\t\t\t\t\tthis._deliveryQueue!.i--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlisteners.length = n;\n\t\t}\n\t}\n\n\tprivate _deliver(listener: undefined | UniqueContainer<(value: T) => void>, value: T) {\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\tif (!errorHandler) {\n\t\t\tlistener.value(value);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlistener.value(value);\n\t\t} catch (e) {\n\t\t\terrorHandler(e);\n\t\t}\n\t}\n\n\t/** Delivers items in the queue. Assumes the queue is ready to go. */\n\tprivate _deliverQueue(dq: EventDeliveryQueuePrivate) {\n\t\tconst listeners = dq.current!._listeners! as (ListenerContainer<T> | undefined)[];\n\t\twhile (dq.i < dq.end) {\n\t\t\t// important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n\t\t\tthis._deliver(listeners[dq.i++], dq.value as T);\n\t\t}\n\t\tdq.reset();\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._deliveryQueue?.current) {\n\t\t\tthis._deliverQueue(this._deliveryQueue);\n\t\t\tthis._perfMon?.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n\t\t}\n\n\t\tthis._perfMon?.start(this._size);\n\n\t\tif (!this._listeners) {\n\t\t\t// no-op\n\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\tthis._deliver(this._listeners, event);\n\t\t} else {\n\t\t\tconst dq = this._deliveryQueue!;\n\t\t\tdq.enqueue(this, event, this._listeners.length);\n\t\t\tthis._deliverQueue(dq);\n\t\t}\n\n\t\tthis._perfMon?.stop();\n\t}\n\n\thasListeners(): boolean {\n\t\treturn this._size > 0;\n\t}\n}\n\nexport interface EventDeliveryQueue {\n\t_isEventDeliveryQueue: true;\n}\n\nexport const createEventDeliveryQueue = (): EventDeliveryQueue => new EventDeliveryQueuePrivate();\n\nclass EventDeliveryQueuePrivate implements EventDeliveryQueue {\n\tdeclare _isEventDeliveryQueue: true;\n\n\t/**\n\t * Index in current's listener list.\n\t */\n\tpublic i = -1;\n\n\t/**\n\t * The last index in the listener's list to deliver.\n\t */\n\tpublic end = 0;\n\n\t/**\n\t * Emitter currently being dispatched on. Emitter._listeners is always an array.\n\t */\n\tpublic current?: Emitter<any>;\n\t/**\n\t * Currently emitting value. Defined whenever `current` is.\n\t */\n\tpublic value?: unknown;\n\n\tpublic enqueue<T>(emitter: Emitter<T>, value: T, end: number) {\n\t\tthis.i = 0;\n\t\tthis.end = end;\n\t\tthis.current = emitter;\n\t\tthis.value = value;\n\t}\n\n\tpublic reset() {\n\t\tthis.i = this.end; // force any current emission loop to stop, mainly for during dispose\n\t\tthis.current = undefined;\n\t\tthis.value = undefined;\n\t}\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[(ev: T) => void, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tforEachListener(this._listeners, listener => this._asyncDeliveryQueue!.push([listener.value, data]));\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tpublic get isPaused(): boolean {\n\t\treturn this._isPaused !== 0;\n\t}\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._size) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener: () => this.onFirstListenerAdd(),\n\t\t\tonDidRemoveLastListener: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(createSingleCallFunction(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener?.dispose();\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\n\t\tfor (const e of this.events) {\n\t\t\te.listener?.dispose();\n\t\t}\n\t\tthis.events = [];\n\t}\n}\n\nexport interface IDynamicListEventMultiplexer<TEventType> extends IDisposable {\n\treadonly event: Event<TEventType>;\n}\nexport class DynamicListEventMultiplexer<TItem, TEventType> implements IDynamicListEventMultiplexer<TEventType> {\n\tprivate readonly _store = new DisposableStore();\n\n\treadonly event: Event<TEventType>;\n\n\tconstructor(\n\t\titems: TItem[],\n\t\tonAddItem: Event<TItem>,\n\t\tonRemoveItem: Event<TItem>,\n\t\tgetEvent: (item: TItem) => Event<TEventType>\n\t) {\n\t\tconst multiplexer = this._store.add(new EventMultiplexer<TEventType>());\n\t\tconst itemListeners = this._store.add(new DisposableMap<TItem, IDisposable>());\n\n\t\tfunction addItem(instance: TItem) {\n\t\t\titemListeners.set(instance, multiplexer.add(getEvent(instance)));\n\t\t}\n\n\t\t// Existing items\n\t\tfor (const instance of items) {\n\t\t\taddItem(instance);\n\t\t}\n\n\t\t// Added items\n\t\tthis._store.add(onAddItem(instance => {\n\t\t\taddItem(instance);\n\t\t}));\n\n\t\t// Removed items\n\t\tthis._store.add(onRemoveItem(instance => {\n\t\t\titemListeners.deleteAndDispose(instance);\n\t\t}));\n\n\t\tthis.event = multiplexer.event;\n\t}\n\n\tdispose() {\n\t\tthis._store.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate data: { buffers: Function[] }[] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T>;\n\twrapEvent<T>(event: Event<T>, reduce: (last: T | undefined, event: T) => T): Event<T>;\n\twrapEvent<T, O>(event: Event<T>, reduce: (last: O | undefined, event: T) => O, initial: O): Event<O>;\n\twrapEvent<T, O>(event: Event<T>, reduce?: (last: T | O | undefined, event: T) => T | O, initial?: O): Event<O | T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst data = this.data[this.data.length - 1];\n\n\t\t\t\t// Non-reduce scenario\n\t\t\t\tif (!reduce) {\n\t\t\t\t\t// Buffering case\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tdata.buffers.push(() => listener.call(thisArgs, i));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Not buffering case\n\t\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reduce scenario\n\t\t\t\tconst reduceData = data as typeof data & {\n\t\t\t\t\t/**\n\t\t\t\t\t * The accumulated items that will be reduced.\n\t\t\t\t\t */\n\t\t\t\t\titems?: T[];\n\t\t\t\t\t/**\n\t\t\t\t\t * The reduced result cached to be shared with other listeners.\n\t\t\t\t\t */\n\t\t\t\t\treducedResult?: T | O;\n\t\t\t\t};\n\n\t\t\t\t// Not buffering case\n\t\t\t\tif (!reduceData) {\n\t\t\t\t\t// TODO: Is there a way to cache this reduce call for all listeners?\n\t\t\t\t\tlistener.call(thisArgs, reduce(initial, i));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Buffering case\n\t\t\t\treduceData.items ??= [];\n\t\t\t\treduceData.items.push(i);\n\t\t\t\tif (reduceData.buffers.length === 0) {\n\t\t\t\t\t// Include a single buffered function that will reduce all events when we're done buffering events\n\t\t\t\t\tdata.buffers.push(() => {\n\t\t\t\t\t\t// cache the reduced result so that the value can be shared across all listeners\n\t\t\t\t\t\treduceData.reducedResult ??= initial\n\t\t\t\t\t\t\t? reduceData.items!.reduce(reduce as (last: O | undefined, event: T) => O, initial)\n\t\t\t\t\t\t\t: reduceData.items!.reduce(reduce as (last: T | undefined, event: T) => T);\n\t\t\t\t\t\tlistener.call(thisArgs, reduceData.reducedResult);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst data = { buffers: new Array<Function>() };\n\t\tthis.data.push(data);\n\t\tconst r = fn();\n\t\tthis.data.pop();\n\t\tdata.buffers.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonDidAddFirstListener: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonDidRemoveLastListener: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n\nexport interface IValueWithChangeEvent<T> {\n\treadonly onDidChange: Event<void>;\n\tget value(): T;\n}\n\nexport class ValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic static const<T>(value: T): IValueWithChangeEvent<T> {\n\t\treturn new ConstValueWithChangeEvent(value);\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(private _value: T) { }\n\n\tget value(): T {\n\t\treturn this._value;\n\t}\n\n\tset value(value: T) {\n\t\tif (value !== this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t}\n\t}\n}\n\nclass ConstValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic readonly onDidChange: Event<void> = Event.None;\n\n\tconstructor(readonly value: T) { }\n}\n\n/**\n * @param handleItem Is called for each item in the set (but only the first time the item is seen in the set).\n * \tThe returned disposable is disposed if the item is no longer in the set.\n */\nexport function trackSetChanges<T>(getData: () => ReadonlySet<T>, onDidChangeData: Event<unknown>, handleItem: (d: T) => IDisposable): IDisposable {\n\tconst map = new DisposableMap<T, IDisposable>();\n\tlet oldData = new Set(getData());\n\tfor (const d of oldData) {\n\t\tmap.set(d, handleItem(d));\n\t}\n\n\tconst store = new DisposableStore();\n\tstore.add(onDidChangeData(() => {\n\t\tconst newData = getData();\n\t\tconst diff = diffSets(oldData, newData);\n\t\tfor (const r of diff.removed) {\n\t\t\tmap.deleteAndDispose(r);\n\t\t}\n\t\tfor (const a of diff.added) {\n\t\t\tmap.set(a, handleItem(a));\n\t\t}\n\t\toldData = new Set(newData);\n\t}));\n\tstore.add(map);\n\treturn store;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from './event.js';\nimport { DisposableStore, IDisposable } from './lifecycle.js';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n\nexport function cancelOnDispose(store: DisposableStore): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tstore.add({ dispose() { source.cancel(); } });\n\treturn source.token;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/*\n * This module exists so that the AMD build of the monaco editor can replace this with an async loader plugin.\n * If you add new functions to this module make sure that they are also provided in the AMD build of the monaco editor.\n *\n * TODO@esm remove me once we no longer ship an AMD build.\n */\n\nexport function getNLSMessages(): string[] {\n\treturn globalThis._VSCODE_NLS_MESSAGES;\n}\n\nexport function getNLSLanguage(): string | undefined {\n\treturn globalThis._VSCODE_NLS_LANGUAGE;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// eslint-disable-next-line local/code-import-patterns\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n// eslint-disable-next-line local/code-import-patterns\nexport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\n\nexport interface ILocalizeInfo {\n\tkey: string;\n\tcomment: string[];\n}\n\nexport interface ILocalizedString {\n\toriginal: string;\n\tvalue: string;\n}\n\nfunction _format(message: string, args: (string | number | boolean | undefined | null)[]): string {\n\tlet result: string;\n\n\tif (args.length === 0) {\n\t\tresult = message;\n\t} else {\n\t\tresult = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n\t\t\tconst index = rest[0];\n\t\t\tconst arg = args[index];\n\t\t\tlet result = match;\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tresult = arg;\n\t\t\t} else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n\t\t\t\tresult = String(arg);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tif (isPseudo) {\n\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\tresult = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t}\n\n\treturn result;\n}\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example For example, `localize('sayHello', 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * @skipMangle\n */\nexport function localize(data: ILocalizeInfo | string /* | number when built */, message: string /* | null when built */, ...args: (string | number | boolean | undefined | null)[]): string {\n\tif (typeof data === 'number') {\n\t\treturn _format(lookupMessage(data, message), args);\n\t}\n\treturn _format(message, args);\n}\n\n/**\n * Only used when built: Looks up the message in the global NLS table.\n * This table is being made available as a global through bootstrapping\n * depending on the target context.\n */\nfunction lookupMessage(index: number, fallback: string | null): string {\n\tconst message = getNLSMessages()?.[index];\n\tif (typeof message !== 'string') {\n\t\tif (typeof fallback === 'string') {\n\t\t\treturn fallback;\n\t\t}\n\t\tthrow new Error(`!!! NLS MISSING: ${index} !!!`);\n\t}\n\treturn message;\n}\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize2({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize('sayHello', 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * @skipMangle\n */\nexport function localize2(data: ILocalizeInfo | string /* | number when built */, originalMessage: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString {\n\tlet message: string;\n\tif (typeof data === 'number') {\n\t\tmessage = lookupMessage(data, originalMessage);\n\t} else {\n\t\tmessage = originalMessage;\n\t}\n\n\tconst value = _format(message, args);\n\n\treturn {\n\t\tvalue,\n\t\toriginal: originalMessage === message ? value : _format(originalMessage, args)\n\t};\n}\n\nexport interface INLSLanguagePackConfiguration {\n\n\t/**\n\t * The path to the translations config file that contains pointers to\n\t * all message bundles for `main` and extensions.\n\t */\n\treadonly translationsConfigFile: string;\n\n\t/**\n\t * The path to the file containing the translations for this language\n\t * pack as flat string array.\n\t */\n\treadonly messagesFile: string;\n\n\t/**\n\t * The path to the file that can be used to signal a corrupt language\n\t * pack, for example when reading the `messagesFile` fails. This will\n\t * instruct the application to re-create the cache on next startup.\n\t */\n\treadonly corruptMarkerFile: string;\n}\n\nexport interface INLSConfiguration {\n\n\t/**\n\t * Locale as defined in `argv.json` or `app.getLocale()`.\n\t */\n\treadonly userLocale: string;\n\n\t/**\n\t * Locale as defined by the OS (e.g. `app.getPreferredSystemLanguages()`).\n\t */\n\treadonly osLocale: string;\n\n\t/**\n\t * The actual language of the UI that ends up being used considering `userLocale`\n\t * and `osLocale`.\n\t */\n\treadonly resolvedLanguage: string;\n\n\t/**\n\t * Defined if a language pack is used that is not the\n\t * default english language pack. This requires a language\n\t * pack to be installed as extension.\n\t */\n\treadonly languagePack?: INLSLanguagePackConfiguration;\n\n\t/**\n\t * The path to the file containing the default english messages\n\t * as flat string array. The file is only present in built\n\t * versions of the application.\n\t */\n\treadonly defaultMessagesFile: string;\n\n\t/**\n\t * Below properties are deprecated and only there to continue support\n\t * for `vscode-nls` module that depends on them.\n\t * Refs https://github.com/microsoft/vscode-nls/blob/main/src/node/main.ts#L36-L46\n\t */\n\t/** @deprecated */\n\treadonly locale: string;\n\t/** @deprecated */\n\treadonly availableLanguages: Record<string, string>;\n\t/** @deprecated */\n\treadonly _languagePackSupport?: boolean;\n\t/** @deprecated */\n\treadonly _languagePackId?: string;\n\t/** @deprecated */\n\treadonly _translationsConfigFile?: string;\n\t/** @deprecated */\n\treadonly _cacheRoot?: string;\n\t/** @deprecated */\n\treadonly _resolvedLanguagePackCoreLocation?: string;\n\t/** @deprecated */\n\treadonly _corruptedFile?: string;\n}\n\nexport interface ILanguagePack {\n\treadonly hash: string;\n\treadonly label: string | undefined;\n\treadonly extensions: {\n\t\treadonly extensionIdentifier: { readonly id: string; readonly uuid?: string };\n\t\treadonly version: string;\n\t}[];\n\treadonly translations: Record<string, string | undefined>;\n}\n\nexport type ILanguagePacks = Record<string, ILanguagePack | undefined>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../nls.js';\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _platformLocale: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\tnode?: string;\n\t\telectron?: string;\n\t\tchrome?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\n\nconst $globalThis: any = globalThis;\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = $globalThis.vscode.process;\n} else if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\n\n// Native environment\nif (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: nls.INLSConfiguration = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.userLocale;\n\t\t\t_platformLocale = nlsConfig.osLocale;\n\t\t\t_language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Web environment\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\t_language = nls.getNLSLanguage() || LANGUAGE_DEFAULT;\n\t_locale = navigator.language.toLowerCase();\n\t_platformLocale = _locale;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport type PlatformName = 'Web' | 'Windows' | 'Mac' | 'Linux';\n\nexport function PlatformToString(platform: Platform): PlatformName {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nexport const webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese or de for German)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * Desktop: The OS locale or the locale specified by --locale or `argv.json`.\n * Web: matches `platformLocale`.\n *\n * The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * This will always be set to the OS/browser's locale regardless of\n * what was specified otherwise. The format of the string is all\n * lower case (e.g. zh-tw for Traditional Chinese). The UI is not\n * necessarily shown in the provided locale.\n */\nexport const platformLocale = _platformLocale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\n\t\t$globalThis.addEventListener('message', (e: any) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\t$globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n\nexport function isBigSurOrNewer(osVersion: string): boolean {\n\treturn parseFloat(osVersion) >= 20;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INodeProcess, isMacintosh, isWindows } from './platform.js';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nconst vscodeGlobal = (globalThis as any).vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = vscodeGlobal.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/commits/v20.9.0/lib/path.js\n// Excluding: the change that adds primordials\n// (https://github.com/nodejs/node/commit/187a862d221dec42fa9a5c4214e7034d9092792f and others)\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from './process.js';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateObject(pathObject: object, name: string) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType(name, 'Object', pathObject);\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction formatExt(ext: string): string {\n\treturn ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tvalidateObject(pathObject, 'pathObject');\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, suffix?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string' || path.length === 0) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'suffix');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nconst posixCwd = (() => {\n\tif (platformIsWin32) {\n\t\t// Converts Windows' backslash path separators to POSIX forward slashes\n\t\t// and truncates any drive indicator\n\t\tconst regexp = /\\\\/g;\n\t\treturn () => {\n\t\t\tconst cwd = process.cwd().replace(regexp, '/');\n\t\t\treturn cwd.slice(cwd.indexOf('/'));\n\t\t};\n\t}\n\n\t// We're already on POSIX, no need for any transformations\n\treturn () => process.cwd();\n})();\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : posixCwd();\n\n\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const format = (platformIsWin32 ? win32.format : posix.format);\nexport const parse = (platformIsWin32 ? win32.parse : posix.parse);\nexport const toNamespacedPath = (platformIsWin32 ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\nexport const delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { IDisposable } from './lifecycle.js';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\nexport function identity<T>(t: T): T {\n\treturn t;\n}\n\ninterface ICacheOptions<TArg> {\n\t/**\n\t * The cache key is used to identify the cache entry.\n\t * Strict equality is used to compare cache keys.\n\t*/\n\tgetCacheKey: (arg: TArg) => unknown;\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: unknown | undefined = undefined;\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this._fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TComputed> {\n\tprivate readonly _map = new Map<TArg, TComputed>();\n\tprivate readonly _map2 = new Map<unknown, TComputed>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TComputed> {\n\t\treturn this._map;\n\t}\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this._map2.has(key)) {\n\t\t\treturn this._map2.get(key)!;\n\t\t}\n\n\t\tconst value = this._fn(arg);\n\t\tthis._map.set(arg, value);\n\t\tthis._map2.set(key, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\tget hasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from './cache.js';\nimport { CharCode } from './charCode.js';\nimport { Lazy } from './lazy.js';\nimport { Constants } from './uint.js';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\tif (Object.keys(values).length === 0) {\n\t\treturn template;\n\t}\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value: string): string {\n\treturn value.replace(/[<>\"'&]/g, ch => {\n\t\tswitch (ch) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '\"': return '&quot;';\n\t\t\tcase '\\'': return '&apos;';\n\t\t\tcase '&': return '&amp;';\n\t\t}\n\t\treturn ch;\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `substr` occurs inside `value`.\n */\nexport function count(value: string, substr: string): number {\n\tlet result = 0;\n\tlet index = value.indexOf(substr);\n\twhile (index !== -1) {\n\t\tresult++;\n\t\tindex = value.indexOf(substr, index + substr.length);\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\nexport function truncateMiddle(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\tconst prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n\tconst suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n\n\treturn `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\nexport function splitLinesIncludeSeparators(str: string): string[] {\n\tconst linesWithSeparators: string[] = [];\n\tconst splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n\tfor (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n\t\tlinesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n\t}\n\treturn linesWithSeparators;\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function getIndentationLength(str: string): number {\n\tconst idx = firstNonWhitespaceIndex(str);\n\tif (idx === -1) { return str.length; }\n\treturn idx;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n * The return value can be longer than the given value of `n`. Leading whitespace is always trimmed.\n */\nexport function lcut(text: string, n: number, prefix = '') {\n\tconst trimmed = text.trimStart();\n\n\tif (trimmed.length < n) {\n\t\treturn trimmed;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(trimmed)) {\n\t\tif (trimmed.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\tif (i === 0) {\n\t\treturn trimmed;\n\t}\n\n\treturn prefix + trimmed.substring(i).trimStart();\n}\n\n// Escape codes, compiled from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_\n// Plus additional markers for custom `\\x1b]...\\x07` instructions.\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\n\n/** Iterates over parts of a string with CSI sequences */\nexport function* forAnsiStringParts(str: string) {\n\tlet last = 0;\n\tfor (const match of str.matchAll(CSI_SEQUENCE)) {\n\t\tif (last !== match.index) {\n\t\t\tyield { isCode: false, str: str.substring(last, match.index) };\n\t\t}\n\n\t\tyield { isCode: true, str: match[0] };\n\t\tlast = match.index + match[0].length;\n\t}\n\n\tif (last !== str.length) {\n\t\tyield { isCode: false, str: str.substring(last) };\n\t}\n}\n\n/**\n * Strips ANSI escape sequences from a string.\n * @param str The dastringa stringo strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodes('\\u001b[31mHello, World!\\u001b[0m');\n * // 'Hello, World!'\n */\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(CSI_SEQUENCE, '');\n\t}\n\n\treturn str;\n}\n\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\n\n/**\n * Strips ANSI escape sequences from a UNIX-style prompt string (eg. `$PS1`).\n * @param str The string to strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodesFromPrompt('\\n\\\\[\\u001b[01;34m\\\\]\\\\w\\\\[\\u001b[00m\\\\]\\n\\\\[\\u001b[1;32m\\\\]> \\\\[\\u001b[0m\\\\]');\n * // '\\n\\\\w\\n> '\n */\nexport function removeAnsiEscapeCodesFromPrompt(str: string): string {\n\treturn removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>({ getCacheKey: JSON.stringify }, (locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.value;\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.value;\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\tpublic containsAmbiguousCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static containsInvisibleCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj: unknown): obj is Object {\n\tconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\treturn typeof obj === 'object'\n\t\t&& obj instanceof TypedArray;\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (const key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\n/**\n * Helper type assertion that safely upcasts a type to a supertype.\n *\n * This can be used to make sure the argument correctly conforms to the subtype while still being able to pass it\n * to contexts that expects the supertype.\n */\nexport function upcast<Base, Sub extends Base = Base>(x: Sub): Base {\n\treturn x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Given an object with all optional properties, requires at least one to be defined.\n * i.e. AtLeastOne<MyObject>;\n */\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\n\n/**\n * Only picks the non-optional properties of a type.\n */\nexport type OmitOptional<T> = { [K in keyof T as T[K] extends Required<T>[K] ? K : never]: T[K] };\n\n/**\n * A type that removed readonly-less from all properties of `T`\n */\nexport type Mutable<T> = {\n\t-readonly [P in keyof T]: T[P]\n};\n\n/**\n * A single object or an array of the objects.\n */\nexport type SingleOrMany<T> = T | T[];\n\n\n/**\n * A type that recursively makes all properties of `T` required\n */\nexport type DeepRequiredNonNullable<T> = {\n\t[P in keyof T]-?: T[P] extends object ? DeepRequiredNonNullable<T[P]> : Required<NonNullable<T[P]>>;\n};\n\n\n/**\n * Represents a type that is a partial version of a given type `T`, where all properties are optional and can be deeply nested.\n */\nexport type DeepPartial<T> = {\n\t[P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : Partial<T[P]>;\n};\n\n/**\n * Represents a type that is a partial version of a given type `T`, except a subset.\n */\nexport type PartialExcept<T, K extends keyof T> = Partial<Omit<T, K>> & Pick<T, K>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { isAbsolute, join, normalize, posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\treturn removeTrailingPathSeparator(candidate);\n}\n\nexport function removeTrailingPathSeparator(candidate: string): string {\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { MarshalledId } from './marshallingIds.js';\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\t/**\n\t * Creates new URI from uri components.\n\t *\n\t * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n\t * validation and should be used for untrusted uri components retrieved from storage,\n\t * user input, command arguments etc\n\t */\n\tstatic from(components: UriComponents, strict?: boolean): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t\tstrict\n\t\t);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\t/**\n\t * A helper function to revive URIs.\n\t *\n\t * **Note** that this function should only be used when receiving URI#toJSON generated data\n\t * and that it doesn't do any validation. Use {@link URI.from} when received \"untrusted\"\n\t * uri components such as command arguments or data from storage.\n\t *\n\t * @param data The URI components or URI to revive.\n\t * @returns The revived URI or undefined or null.\n\t */\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external ?? null;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath ?? null : null;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t[Symbol.for('debug.description')]() {\n\t\treturn `URI(${this.toString()})`;\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport function isUriComponents(thing: any): thing is UriComponents {\n\tif (!thing || typeof thing !== 'object') {\n\t\treturn false;\n\t}\n\treturn typeof (<UriComponents>thing).scheme === 'string'\n\t\t&& (typeof (<UriComponents>thing).authority === 'string' || typeof (<UriComponents>thing).authority === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).path === 'string' || typeof (<UriComponents>thing).path === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).query === 'string' || typeof (<UriComponents>thing).query === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).fragment === 'string' || typeof (<UriComponents>thing).fragment === 'undefined');\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal?: string;\n\tfsPath?: string;\n\t_sep?: 1;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t//--- uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\t// TODO\n\t\t// this isn't correct and can violate the UriComponents contract but\n\t\t// this is part of the vscode.Uri API and we shouldn't change how that\n\t\t// works anymore\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, isPath: boolean, isAuthority: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (isPath && code === CharCode.Slash)\n\t\t\t|| (isAuthority && code === CharCode.OpenSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.CloseSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.Colon)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.lastIndexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false, false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false, true);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.lastIndexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false, true);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false, true);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true, false);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n\texport const vscodeNotebookMetadata = 'vscode-notebook-metadata';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n\n\t/**\n\t * Scheme used for output panel resources\n\t */\n\texport const outputChannel = 'output';\n\n\t/**\n\t * Scheme used for the accessible view\n\t */\n\texport const accessibleView = 'accessible-view';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = getServerRootPath(product, serverBasePath);\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerRootPath(product: { quality?: string; commit?: string }, basePath: string | undefined): string {\n\treturn paths.posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\tif (globalThis._VSCODE_FILE_ROOT) {\n\t\t\tconst rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n\n\t\t\t// File URL (with scheme)\n\t\t\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n\t\t\t\treturn URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n\t\t\t}\n\n\t\t\t// File Path (no scheme)\n\t\t\tconst modulePath = paths.join(rootUriOrPath, uriOrModule);\n\t\t\treturn URI.file(modulePath);\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { Disposable, DisposableMap, DisposableStore, IDisposable, MutableDisposable, toDisposable } from './lifecycle.js';\nimport { extUri as defaultExtUri, IExtUri } from './resources.js';\nimport { URI } from './uri.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t\tsource.dispose();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\ttry {\n\t\tconst result = await Promise.race(promises);\n\t\treturn result;\n\t} finally {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex) {\n\t\t\t\tcancellablePromise.cancel();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\n/**\n * Creates and returns a new promise, plus its `resolve` and `reject` callbacks.\n *\n * Replace with standardized [`Promise.withResolvers`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers) once it is supported\n */\nexport function promiseWithResolvers<T>(): { promise: Promise<T>; resolve: (value: T | PromiseLike<T>) => void; reject: (err?: any) => void } {\n\tlet resolve: (value: T | PromiseLike<T>) => void;\n\tlet reject: (reason?: any) => void;\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn { promise, resolve: resolve!, reject: reject! };\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\treturn Promise.reject(new Error('Throttler is disposed'));\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler: () => void, timeout = 0, store?: DisposableStore): IDisposable {\n\tconst timer = setTimeout(() => {\n\t\thandler();\n\t\tif (store) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}, timeout);\n\tconst disposable = toDisposable(() => {\n\t\tclearTimeout(timer);\n\t\tstore?.deleteAndLeak(disposable);\n\t});\n\tstore?.add(disposable);\n\treturn disposable;\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n\n\tclear(): void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T> {\n\n\tprivate _size = 0;\n\tprivate _isDisposed = false;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t *\n\t * @returns A promise that resolved when all work is done (onDrained) or when\n\t * there is nothing to do\n\t */\n\twhenIdle(): Promise<void> {\n\t\treturn this.size > 0\n\t\t\t? Event.toPromise(this.onDrained)\n\t\t\t: Promise.resolve();\n\t}\n\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.runningPromises--;\n\t\tif (--this._size === 0) {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis.outstandingPromises.length = 0;\n\t\tthis._size = this.runningPromises;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis.outstandingPromises.length = 0; // stop further processing\n\t\tthis._size = 0;\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * Same as `Queue`, ensures that only 1 task is executed at the same time. The difference to `Queue` is that\n * there is only 1 task about to be scheduled next. As such, calling `queue` while a task is executing will\n * replace the currently queued task until it executes.\n *\n * As such, the returned promise may not be from the factory that is passed in but from the next factory that\n * is running after having called `queue`.\n */\nexport class LimitedQueue {\n\n\tprivate readonly sequentializer = new TaskSequentializer();\n\n\tprivate tasks = 0;\n\n\tqueue(factory: ITask<Promise<void>>): Promise<void> {\n\t\tif (!this.sequentializer.isRunning()) {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t}\n\n\t\treturn this.sequentializer.queue(() => {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t});\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tprivate drainListeners: DisposableMap<number> | undefined = undefined;\n\tprivate drainListenerCount = 0;\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueSize(resource: URI, extUri: IExtUri = defaultExtUri): number {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\treturn this.queues.get(key)?.size ?? 0;\n\t}\n\n\tqueueFor(resource: URI, factory: ITask<Promise<void>>, extUri: IExtUri = defaultExtUri): Promise<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tconst drainListenerId = this.drainListenerCount++;\n\t\t\tconst drainListener = Event.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\n\t\t\t\tthis.drainListeners?.deleteAndDispose(drainListenerId);\n\n\t\t\t\tif (this.drainListeners?.size === 0) {\n\t\t\t\t\tthis.drainListeners.dispose();\n\t\t\t\t\tthis.drainListeners = undefined;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.drainListeners) {\n\t\t\t\tthis.drainListeners = new DisposableMap();\n\t\t\t}\n\t\t\tthis.drainListeners.set(drainListenerId, drainListener);\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue.queue(factory);\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\n\t\tthis.drainListeners?.dispose();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\tprivate _isDisposed = false;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis._isDisposed = true;\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate disposable: IDisposable | undefined = undefined;\n\tprivate isDisposed = false;\n\n\tcancel(): void {\n\t\tthis.disposable?.dispose();\n\t\tthis.disposable = undefined;\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number, context = globalThis): void {\n\t\tif (this.isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tconst handle = context.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\n\t\tthis.disposable = toDisposable(() => {\n\t\t\tcontext.clearInterval(handle);\n\t\t\tthis.disposable = undefined;\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n\n\t/**\n\t * When enabled will guarantee that two distinct calls to `work()` are not executed\n\t * without throttle delay between them.\n\t * Otherwise if the worker isn't currently throttling it will execute work immediately.\n\t */\n\twaitThrottleDelayBetweenWorkUnits?: boolean;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\tprivate lastExecutionTime = 0;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\tconst timeSinceLastExecution = Date.now() - this.lastExecutionTime;\n\n\t\tif (!this.throttler.value && (!this.options.waitThrottleDelayBetweenWorkUnits || timeSinceLastExecution >= this.options.throttleDelay)) {\n\t\t\t// Work directly if we are not throttling and we are not\n\t\t\t// enforced to throttle between `work()` calls.\n\t\t\tthis.doWork();\n\t\t} else if (!this.throttler.value && this.options.waitThrottleDelayBetweenWorkUnits) {\n\t\t\t// Otherwise, schedule the throttler to work.\n\t\t\tthis.scheduleThrottler(Math.max(this.options.throttleDelay - timeSinceLastExecution, 0));\n\t\t} else {\n\t\t\t// Otherwise, our work will be picked up by the running throttler\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\t\tthis.lastExecutionTime = Date.now();\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.scheduleThrottler();\n\t\t}\n\t}\n\n\tprivate scheduleThrottler(delay = this.options.throttleDelay): void {\n\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\tthis.throttler.clear();\n\n\t\t\tthis.doWork();\n\t\t}, delay);\n\t\tthis.throttler.value.schedule();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\ntype IdleApi = Pick<typeof globalThis, 'requestIdleCallback' | 'cancelIdleCallback'>;\n\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\nexport let _runWhenIdle: (targetWindow: IdleApi, callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\n(function () {\n\tif (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n\t\t_runWhenIdle = (_targetWindow, runner, timeout?) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\tconst deadline: IdleDeadline = {\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trunner(Object.freeze(deadline));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\t_runWhenIdle = (targetWindow: IdleApi, runner, timeout?) => {\n\t\t\tconst handle: number = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\ttargetWindow.cancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\trunWhenGlobalIdle = (runner, timeout) => _runWhenIdle(globalThis, runner, timeout);\n})();\n\nexport abstract class AbstractIdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(targetWindow: IdleApi, executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = _runWhenIdle(targetWindow, () => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue<T> extends AbstractIdleValue<T> {\n\n\tconstructor(executor: () => T) {\n\t\tsuper(globalThis, executor);\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IRunningTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface IQueuedTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: ITask<Promise<void>>;\n}\n\nexport interface ITaskSequentializerWithRunningTask {\n\treadonly running: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithQueuedTask {\n\treadonly queued: IQueuedTask;\n}\n\n/**\n * @deprecated use `LimitedQueue` instead for an easier to use API\n */\nexport class TaskSequentializer {\n\n\tprivate _running?: IRunningTask;\n\tprivate _queued?: IQueuedTask;\n\n\tisRunning(taskId?: number): this is ITaskSequentializerWithRunningTask {\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._running?.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._running;\n\t}\n\n\tget running(): Promise<void> | undefined {\n\t\treturn this._running?.promise;\n\t}\n\n\tcancelRunning(): void {\n\t\tthis._running?.cancel();\n\t}\n\n\trun(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._running = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate doneRunning(taskId: number): void {\n\t\tif (this._running && taskId === this._running.taskId) {\n\n\t\t\t// only set running to done if the promise finished that is associated with that taskId\n\t\t\tthis._running = undefined;\n\n\t\t\t// schedule the queued task now that we are free if we have any\n\t\t\tthis.runQueued();\n\t\t}\n\t}\n\n\tprivate runQueued(): void {\n\t\tif (this._queued) {\n\t\t\tconst queued = this._queued;\n\t\t\tthis._queued = undefined;\n\n\t\t\t// Run queued task and complete on the associated promise\n\t\t\tqueued.run().then(queued.promiseResolve, queued.promiseReject);\n\t\t}\n\t}\n\n\t/**\n\t * Note: the promise to schedule as next run MUST itself call `run`.\n\t *       Otherwise, this sequentializer will report `false` for `isRunning`\n\t *       even when this task is running. Missing this detail means that\n\t *       suddenly multiple tasks will run in parallel.\n\t */\n\tqueue(run: ITask<Promise<void>>): Promise<void> {\n\n\t\t// this is our first queued task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._queued) {\n\t\t\tconst { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers<void>();\n\t\t\tthis._queued = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous queued task, just overwrite it\n\t\telse {\n\t\t\tthis._queued.run = run;\n\t\t}\n\n\t\treturn this._queued.promise;\n\t}\n\n\thasQueued(): this is ITaskSequentializerWithQueuedTask {\n\t\treturn !!this._queued;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._queued?.promise ?? this._running?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class StatefulPromise<T> {\n\tprivate _value: T | undefined = undefined;\n\tget value(): T | undefined { return this._value; }\n\n\tprivate _error: unknown = undefined;\n\tget error(): unknown { return this._error; }\n\n\tprivate _isResolved = false;\n\tget isResolved() { return this._isResolved; }\n\n\tpublic readonly promise: Promise<T>;\n\n\tconstructor(promise: Promise<T>) {\n\t\tthis.promise = promise.then(\n\t\t\tvalue => {\n\t\t\t\tthis._value = value;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tthis._error = error;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\tif (!this._isResolved) {\n\t\t\tthrow new BugIndicatingError('Promise is not resolved yet');\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\nexport class LazyStatefulPromise<T> {\n\tprivate readonly _promise = new Lazy(() => new StatefulPromise(this._compute()));\n\n\tconstructor(\n\t\tprivate readonly _compute: () => Promise<T>,\n\t) { }\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\treturn this._promise.value.requireValue();\n\t}\n\n\t/**\n\t * Returns the promise (and triggers a computation of the promise if not yet done so).\n\t */\n\tpublic getPromise(): Promise<T> {\n\t\treturn this._promise.value.promise;\n\t}\n\n\t/**\n\t * Reads the current value without triggering a computation of the promise.\n\t */\n\tpublic get currentValue(): T | undefined {\n\t\treturn this._promise.rawValue?.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onReturn?: () => void | Promise<void>;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>, onReturn?: () => void | Promise<void>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onReturn = onReturn;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t},\n\t\t\treturn: async () => {\n\t\t\t\tthis._onReturn?.();\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\nexport class AsyncIterableSource<T> {\n\n\tprivate readonly _deferred = new DeferredPromise<void>();\n\tprivate readonly _asyncIterable: AsyncIterableObject<T>;\n\n\tprivate _errorFn: (error: Error) => void;\n\tprivate _emitFn: (item: T) => void;\n\n\t/**\n\t *\n\t * @param onReturn A function that will be called when consuming the async iterable\n\t * has finished by the consumer, e.g the for-await-loop has be existed (break, return) early.\n\t * This is NOT called when resolving this source by its owner.\n\t */\n\tconstructor(onReturn?: () => Promise<void> | void) {\n\t\tthis._asyncIterable = new AsyncIterableObject(emitter => {\n\n\t\t\tif (earlyError) {\n\t\t\t\temitter.reject(earlyError);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (earlyItems) {\n\t\t\t\temitter.emitMany(earlyItems);\n\t\t\t}\n\t\t\tthis._errorFn = (error: Error) => emitter.reject(error);\n\t\t\tthis._emitFn = (item: T) => emitter.emitOne(item);\n\t\t\treturn this._deferred.p;\n\t\t}, onReturn);\n\n\t\tlet earlyError: Error | undefined;\n\t\tlet earlyItems: T[] | undefined;\n\n\t\tthis._emitFn = (item: T) => {\n\t\t\tif (!earlyItems) {\n\t\t\t\tearlyItems = [];\n\t\t\t}\n\t\t\tearlyItems.push(item);\n\t\t};\n\t\tthis._errorFn = (error: Error) => {\n\t\t\tif (!earlyError) {\n\t\t\t\tearlyError = error;\n\t\t\t}\n\t\t};\n\t}\n\n\tget asyncIterable(): AsyncIterableObject<T> {\n\t\treturn this._asyncIterable;\n\t}\n\n\tresolve(): void {\n\t\tthis._deferred.complete();\n\t}\n\n\treject(error: Error): void {\n\t\tthis._errorFn(error);\n\t\tthis._deferred.complete();\n\t}\n\n\temitOne(item: T): void {\n\t\tthis._emitFn(item);\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from './lazy.js';\nimport * as streams from './stream.js';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from './buffer.js';\nimport { URI, UriComponents } from './uri.js';\nimport { MarshalledId } from './marshallingIds.js';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: value.flags,\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t\tcase MarshalledId.Date: return <any>new Date(obj.source);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from '../../../common/arrays.js';\nimport { CancelablePromise, createCancelablePromise, timeout } from '../../../common/async.js';\nimport { VSBuffer } from '../../../common/buffer.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../common/cancellation.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { CancellationError, ErrorNoTelemetry } from '../../../common/errors.js';\nimport { Emitter, Event, EventMultiplexer, Relay } from '../../../common/event.js';\nimport { combinedDisposable, DisposableStore, dispose, IDisposable, toDisposable } from '../../../common/lifecycle.js';\nimport { revive } from '../../../common/marshalling.js';\nimport * as strings from '../../../common/strings.js';\nimport { isFunction, isUndefinedOrNull } from '../../../common/types.js';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nconst enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel; id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose; id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nconst enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string; name: string; stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\n\n/**\n * @see https://en.wikipedia.org/wiki/Variable-length_quantity\n */\nfunction readIntVQL(reader: IReader) {\n\tlet value = 0;\n\tfor (let n = 0; ; n += 7) {\n\t\tconst next = reader.read(1);\n\t\tvalue |= (next.buffer[0] & 0b01111111) << n;\n\t\tif (!(next.buffer[0] & 0b10000000)) {\n\t\t\treturn value;\n\t\t}\n\t}\n}\n\nconst vqlZero = createOneByteBuffer(0);\n\n/**\n * @see https://en.wikipedia.org/wiki/Variable-length_quantity\n */\nfunction writeInt32VQL(writer: IWriter, value: number) {\n\tif (value === 0) {\n\t\twriter.write(vqlZero);\n\t\treturn;\n\t}\n\n\tlet len = 0;\n\tfor (let v2 = value; v2 !== 0; v2 = v2 >>> 7) {\n\t\tlen++;\n\t}\n\n\tconst scratch = VSBuffer.alloc(len);\n\tfor (let i = 0; value !== 0; i++) {\n\t\tscratch.buffer[i] = value & 0b01111111;\n\t\tvalue = value >>> 7;\n\t\tif (value > 0) {\n\t\t\tscratch.buffer[i] |= 0b10000000;\n\t\t}\n\t}\n\n\twriter.write(scratch);\n}\n\nexport class BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nexport class BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5,\n\tInt = 6\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n\tUint: createOneByteBuffer(DataType.Int),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nexport function serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriteInt32VQL(writer, buffer.byteLength);\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriteInt32VQL(writer, buffer.byteLength);\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriteInt32VQL(writer, data.byteLength);\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriteInt32VQL(writer, data.length);\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else if (typeof data === 'number' && (data | 0) === data) {\n\t\t// write a vql if it's a number that we can do bitwise operations on\n\t\twriter.write(BufferPresets.Uint);\n\t\twriteInt32VQL(writer, data);\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriteInt32VQL(writer, buffer.byteLength);\n\t\twriter.write(buffer);\n\t}\n}\n\nexport function deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readIntVQL(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readIntVQL(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readIntVQL(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readIntVQL(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readIntVQL(reader)).toString());\n\t\tcase DataType.Int: return readIntVQL(reader);\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse({ id, data, type: ResponseType.PromiseSuccess });\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse({\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? err.stack.split('\\n') : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse({ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse({ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse({\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(new CancellationError());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Event.None;\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<unknown> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(new CancellationError());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(new CancellationError());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError: {\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = Array.isArray(response.data.stack) ? response.data.stack.join('\\n') : response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(new CancellationError());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\t\t});\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonWillAddFirstListener: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tthis.logger?.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tthis.logger?.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\thandler?.(response);\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tdispose(this.activeRequests.values());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tprivate readonly disposables = new DisposableStore();\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>, ipcLogger?: IIPCLogger | null, timeoutDelay?: number) {\n\t\tthis.disposables.add(onDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tthis.disposables.add(onFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx, ipcLogger, timeoutDelay);\n\t\t\t\tconst channelClient = new ChannelClient(protocol, ipcLogger);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tthis.disposables.add(onDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t}));\n\t\t\t}));\n\t\t}));\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tconst connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables: DisposableStore | undefined;\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\tdisposables?.dispose();\n\t\t\t\tdisposables = undefined;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tfor (const connection of this._connections) {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\n\t\tfor (const connection of this._connections) {\n\t\t\tconnection.channelClient.dispose();\n\t\t\tconnection.channelServer.dispose();\n\t\t}\n\n\t\tthis._connections.clear();\n\t\tthis.channels.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCServer` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService<TContext>(service: unknown, disposables: DisposableStore, options?: ICreateServiceChannelOptions): IServerChannel<TContext> {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\t// However, this will not work for services that\n\t\t// are lazy and use a Proxy within. For that we\n\t\t// still need to check later (see below).\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true, undefined, disposables));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tconst target = handler[event];\n\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (propertyIsEvent(event)) {\n\t\t\t\t\t\tmapEventNameToEvent.set(event, Event.buffer(handler[event] as Event<unknown>, true, undefined, disposables));\n\n\t\t\t\t\t\treturn mapEventNameToEvent.get(event) as Event<T>;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new ErrorNoTelemetry(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet res = target.apply(handler, args);\n\t\t\t\t\tif (!(res instanceof Promise)) {\n\t\t\t\t\t\tres = Promise.resolve(res);\n\t\t\t\t\t}\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\n\t\t\t\tthrow new ErrorNoTelemetry(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T extends object>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new ErrorNoTelemetry(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tconst result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nfunction logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from '../../../common/async.js';\nimport { VSBuffer } from '../../../common/buffer.js';\nimport { CancellationToken } from '../../../common/cancellation.js';\nimport { isRemoteConsoleLog, log } from '../../../common/console.js';\nimport * as errors from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { dispose, IDisposable, toDisposable } from '../../../common/lifecycle.js';\nimport { deepClone } from '../../../common/objects.js';\nimport { createQueuedSender } from '../../../node/processes.js';\nimport { removeDangerousEnvVariables } from '../../../common/processes.js';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from '../common/ipc.js';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tprocess.send?.((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number; signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonWillAddFirstListener: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\tforkOpts.execArgv = process.execArgv\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t\t.filter(a => !/^--inspect(-brk)?=/.test(a)) // --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\t\t.filter(a => !a.startsWith('--vscode-')); \t// --vscode-* arguments are unsupported by node.js and thus need to remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tconst rawMessageDisposable = onRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\t\t\t\trawMessageDisposable.dispose();\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tthis.disposeDelayer?.cancel();\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tthis.disposeDelayer?.cancel();\n\t\tthis.disposeDelayer = undefined;\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats, promises } from 'fs';\nimport * as path from '../common/path.js';\nimport * as Platform from '../common/platform.js';\nimport * as process from '../common/process.js';\nimport { CommandOptions, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from '../common/processes.js';\nimport * as Types from '../common/types.js';\nimport * as pfs from './pfs.js';\nexport { type CommandOptions, type ForkOptions, type SuccessData, Source, type TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (const pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment, isLinux } from './platform.js';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce<Record<string, boolean>>((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {});\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_(?!(PORTABLE|SHELL_LOGIN|ENV_REPLACE|ENV_APPEND|ENV_PREPEND)).+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: IProcessEnvironment | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue, timeout } from '../common/async.js';\nimport { isEqualOrParent, isRootOrDriveLetter, randomPath } from '../common/extpath.js';\nimport { normalizeNFC } from '../common/normalization.js';\nimport { join } from '../common/path.js';\nimport { isLinux, isMacintosh, isWindows } from '../common/platform.js';\nimport { extUriBiasedIgnorePathCase } from '../common/resources.js';\nimport { URI } from '../common/uri.js';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n *           the optional `moveToPath` allows to override where to rename the\n *           path to before deleting it.\n */\nasync function rimraf(path: string, mode: RimRafMode.UNLINK): Promise<void>;\nasync function rimraf(path: string, mode: RimRafMode.MOVE, moveToPath?: string): Promise<void>;\nasync function rimraf(path: string, mode?: RimRafMode, moveToPath?: string): Promise<void>;\nasync function rimraf(path: string, mode = RimRafMode.UNLINK, moveToPath?: string): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rm\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path, moveToPath);\n}\n\nasync function rimrafMove(path: string, moveToPath = randomPath(tmpdir())): Promise<void> {\n\ttry {\n\t\ttry {\n\t\t\tawait fs.promises.rename(path, moveToPath);\n\t\t} catch (error) {\n\t\t\tif (error.code === 'ENOENT') {\n\t\t\t\treturn; // ignore - path to delete did not exist\n\t\t\t}\n\n\t\t\treturn rimrafUnlink(path); // otherwise fallback to unlink\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(moveToPath).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn fs.promises.rm(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmSync(path, { recursive: true, force: true, maxRetries: 3 });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : fs.promises.readdir(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await fs.promises.readdir(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await fs.promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await fs.promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await fs.promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await fs.promises.stat(await fs.promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v14.16.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), () => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t}, extUriBiasedIgnorePathCase);\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\nexport function configureFlushOnWrite(enabled: boolean): void {\n\tcanFlush = enabled;\n}\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tconfigureFlushOnWrite(false);\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tconfigureFlushOnWrite(false);\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - allows to move across multiple disks\n * - attempts to retry the operation for certain error codes on Windows\n */\nasync function rename(source: string, target: string, windowsRetryTimeout: number | false = 60000): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\ttry {\n\t\tif (isWindows && typeof windowsRetryTimeout === 'number') {\n\t\t\t// On Windows, a rename can fail when either source or target\n\t\t\t// is locked by AV software.\n\t\t\tawait renameWithRetry(source, target, Date.now(), windowsRetryTimeout);\n\t\t} else {\n\t\t\tawait fs.promises.rename(source, target);\n\t\t}\n\t} catch (error) {\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function renameWithRetry(source: string, target: string, startTime: number, retryTimeout: number, attempt = 0): Promise<void> {\n\ttry {\n\t\treturn await fs.promises.rename(source, target);\n\t} catch (error) {\n\t\tif (error.code !== 'EACCES' && error.code !== 'EPERM' && error.code !== 'EBUSY') {\n\t\t\tthrow error; // only for errors we think are temporary\n\t\t}\n\n\t\tif (Date.now() - startTime >= retryTimeout) {\n\t\t\tconsole.error(`[node.js fs] rename failed after ${attempt} retries with error: ${error}`);\n\n\t\t\tthrow error; // give up after configurable timeout\n\t\t}\n\n\t\tif (attempt === 0) {\n\t\t\tlet abortRetry = false;\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(target);\n\t\t\t\tif (!stat.isFile()) {\n\t\t\t\t\tabortRetry = true; // if target is not a file, EPERM error may be raised and we should not attempt to retry\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\tif (abortRetry) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\t// Delay with incremental backoff up to 100ms\n\t\tawait timeout(Math.min(100, attempt * 10));\n\n\t\t// Attempt again\n\t\treturn renameWithRetry(source, target, startTime, retryTimeout, attempt + 1);\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string; target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait fs.promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait fs.promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait fs.promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await fs.promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait fs.promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Some low level `fs` methods provided as `Promises` similar to\n * `fs.promises` but with notable differences, either implemented\n * by us or by restoring the original callback based behavior.\n *\n * At least `realpath` is implemented differently in the promise\n * based implementation compared to the callback based one. The\n * promise based implementation actually calls `fs.realpath.native`.\n * (https://github.com/microsoft/vscode/issues/118562)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget read() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes read, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number, length: number, position: number | null) => {\n\t\t\treturn new Promise<{ bytesRead: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesRead, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\n\tget write() {\n\n\t\t// Not using `promisify` here for a reason: the return\n\t\t// type is not an object as indicated by TypeScript but\n\t\t// just the bytes written, so we create our own wrapper.\n\n\t\treturn (fd: number, buffer: Uint8Array, offset: number | undefined | null, length: number | undefined | null, position: number | undefined | null) => {\n\t\t\treturn new Promise<{ bytesWritten: number; buffer: Uint8Array }>((resolve, reject) => {\n\t\t\t\tfs.write(fd, buffer, offset, length, position, (err, bytesWritten, buffer) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve({ bytesWritten, buffer });\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t}\n\n\tget fdatasync() { return promisify(fs.fdatasync); } // not exposed as API in 20.x yet\n\n\tget open() { return promisify(fs.open); } \t\t\t// changed to return `FileHandle` in promise API\n\tget close() { return promisify(fs.close); } \t\t// not exposed as API due to the `FileHandle` return type of `open`\n\n\tget realpath() { return promisify(fs.realpath); }\t// `fs.promises.realpath` will use `fs.realpath.native` which we do not want\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait fs.promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget rename() { return rename; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from './map.js';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface MessagePortMain extends NodeJS.EventEmitter {\n\n\t// Docs: https://electronjs.org/docs/api/message-port-main\n\n\t/**\n\t * Emitted when the remote end of a MessagePortMain object becomes disconnected.\n\t */\n\ton(event: 'close', listener: Function): this;\n\toff(event: 'close', listener: Function): this;\n\tonce(event: 'close', listener: Function): this;\n\taddListener(event: 'close', listener: Function): this;\n\tremoveListener(event: 'close', listener: Function): this;\n\t/**\n\t * Emitted when a MessagePortMain object receives a message.\n\t */\n\ton(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\toff(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\tonce(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\taddListener(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\tremoveListener(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\t/**\n\t * Disconnects the port, so it is no longer active.\n\t */\n\tclose(): void;\n\t/**\n\t * Sends a message from the port, and optionally, transfers ownership of objects to\n\t * other browsing contexts.\n\t */\n\tpostMessage(message: any, transfer?: MessagePortMain[]): void;\n\t/**\n\t * Starts the sending of messages queued on the port. Messages will be queued until\n\t * this method is called.\n\t */\n\tstart(): void;\n}\n\nexport interface MessageEvent {\n\tdata: any;\n\tports: MessagePortMain[];\n}\n\nexport interface ParentPort extends NodeJS.EventEmitter {\n\n\t// Docs: https://electronjs.org/docs/api/parent-port\n\n\t/**\n\t * Emitted when the process receives a message. Messages received on this port will\n\t * be queued up until a handler is registered for this event.\n\t */\n\ton(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\toff(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\tonce(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\taddListener(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\tremoveListener(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\t/**\n\t * Sends a message from the process to its parent.\n\t */\n\tpostMessage(message: any): void;\n}\n\nexport interface UtilityNodeJSProcess extends NodeJS.Process {\n\n\t/**\n\t * A `Electron.ParentPort` property if this is a `UtilityProcess` (or `null`\n\t * otherwise) allowing communication with the parent process.\n\t */\n\tparentPort: ParentPort;\n}\n\nexport function isUtilityProcess(process: NodeJS.Process): process is UtilityNodeJSProcess {\n\treturn !!(process as UtilityNodeJSProcess).parentPort;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MessagePortMain, isUtilityProcess, MessageEvent } from '../../sandbox/node/electronTypes.js';\nimport { VSBuffer } from '../../../common/buffer.js';\nimport { ClientConnectionEvent, IMessagePassingProtocol, IPCServer } from '../common/ipc.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { assertType } from '../../../common/types.js';\n\n/**\n * The MessagePort `Protocol` leverages MessagePortMain style IPC communication\n * for the implementation of the `IMessagePassingProtocol`.\n */\nclass Protocol implements IMessagePassingProtocol {\n\n\treadonly onMessage = Event.fromNodeEventEmitter<VSBuffer>(this.port, 'message', (e: MessageEvent) => {\n\t\tif (e.data) {\n\t\t\treturn VSBuffer.wrap(e.data);\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t});\n\n\tconstructor(private port: MessagePortMain) {\n\n\t\t// we must call start() to ensure messages are flowing\n\t\tport.start();\n\t}\n\n\tsend(message: VSBuffer): void {\n\t\tthis.port.postMessage(message.buffer);\n\t}\n\n\tdisconnect(): void {\n\t\tthis.port.close();\n\t}\n}\n\nexport interface IClientConnectionFilter {\n\n\t/**\n\t * Allows to filter incoming messages to the\n\t * server to handle them differently.\n\t *\n\t * @param e the message event to handle\n\t * @returns `true` if the event was handled\n\t * and should not be processed by the server.\n\t */\n\thandledClientConnection(e: MessageEvent): boolean;\n}\n\n/**\n * An implementation of a `IPCServer` on top of MessagePort style IPC communication.\n * The clients register themselves via Electron Utility Process IPC transfer.\n */\nexport class Server extends IPCServer {\n\n\tprivate static getOnDidClientConnect(filter?: IClientConnectionFilter): Event<ClientConnectionEvent> {\n\t\tassertType(isUtilityProcess(process), 'Electron Utility Process');\n\n\t\tconst onCreateMessageChannel = new Emitter<MessagePortMain>();\n\n\t\tprocess.parentPort.on('message', (e: MessageEvent) => {\n\t\t\tif (filter?.handledClientConnection(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst port = e.ports.at(0);\n\t\t\tif (port) {\n\t\t\t\tonCreateMessageChannel.fire(port);\n\t\t\t}\n\t\t});\n\n\t\treturn Event.map(onCreateMessageChannel.event, port => {\n\t\t\tconst protocol = new Protocol(port);\n\n\t\t\tconst result: ClientConnectionEvent = {\n\t\t\t\tprotocol,\n\t\t\t\t// Not part of the standard spec, but in Electron we get a `close` event\n\t\t\t\t// when the other side closes. We can use this to detect disconnects\n\t\t\t\t// (https://github.com/electron/electron/blob/11-x-y/docs/api/message-port-main.md#event-close)\n\t\t\t\tonDidClientDisconnect: Event.fromNodeEventEmitter(port, 'close')\n\t\t\t};\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tconstructor(filter?: IClientConnectionFilter) {\n\t\tsuper(Server.getOnDidClientConnect(filter));\n\t}\n}\n\ninterface INodeMessagePortFragment {\n\ton(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n\tremoveListener(event: 'message', listener: (messageEvent: MessageEvent) => void): this;\n}\n\nexport function once(port: INodeMessagePortFragment, message: unknown, callback: () => void): void {\n\tconst listener = (e: MessageEvent) => {\n\t\tif (e.data === message) {\n\t\t\tport.removeListener('message', listener);\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tport.on('message', listener);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from './arrays.js';\nimport { isThenable } from './async.js';\nimport { CharCode } from './charCode.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\t// For that we try to extract the portion of the `path`\n\t\t// that comes after the `base` portion. We have to account\n\t\t// for the fact that `base` might end in a path separator\n\t\t// (https://github.com/microsoft/vscode/issues/162498)\n\n\t\treturn parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', () => name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from './arrays.js';\nimport { CharCode } from './charCode.js';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _valueLen!: number;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\tthis._value = key;\n\t\tthis._valueLen = key.length;\n\t\tfor (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n\t\t\tconst ch = this._value.charCodeAt(pos);\n\t\t\tif (!(ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._valueLen;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._valueLen; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _ignorePathCasing: (uri: URI) => boolean,\n\t\tprivate readonly _ignoreQueryAndFragment: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (!this._ignoreQueryAndFragment(key)) {\n\t\t\tif (this._value.query) {\n\t\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t\t}\n\t\t\tif (this._value.fragment) {\n\t\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t\t}\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false, ignoreQueryAndFragment: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n\t}\n\n\tstatic forPaths<E>(ignorePathCasing = false): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator(undefined, !ignorePathCasing));\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (const entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\t// replace deleted-node with the min-node of the right branch.\n\t\t\t\t// If there is no true min-node leave things as they are\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tif (min.key) {\n\t\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\t\tthis._delete(min.key, false);\n\t\t\t\t\tnode.key = key;\n\t\t\t\t\tnode.value = value;\n\t\t\t\t\tnode.segment = segment;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = node.right!.rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = node.left!.rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\treturn this._findSuperstrOrElement(key, false);\n\t}\n\n\tprivate _findSuperstrOrElement(key: K, allowValue: true): IterableIterator<[K, V]> | V | undefined;\n\tprivate _findSuperstrOrElement(key: K, allowValue: false): IterableIterator<[K, V]> | undefined;\n\tprivate _findSuperstrOrElement(key: K, allowValue: boolean): IterableIterator<[K, V]> | V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tif (allowValue) {\n\t\t\t\t\t\treturn node.value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\thasElementOrSubtree(key: K): boolean {\n\t\treturn this._findSuperstrOrElement(key, true) !== undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => unknown): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate _entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tconst result: [K, V][] = [];\n\t\tthis._dfsEntries(node, result);\n\t\treturn result[Symbol.iterator]();\n\t}\n\n\tprivate _dfsEntries(node: TernarySearchTreeNode<K, V> | undefined, bucket: [K, V][]) {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tthis._dfsEntries(node.left, bucket);\n\t\t}\n\t\tif (node.value) {\n\t\t\tbucket.push([node.key!, node.value]);\n\t\t}\n\t\tif (node.mid) {\n\t\t\tthis._dfsEntries(node.mid, bucket);\n\t\t}\n\t\tif (node.right) {\n\t\t\tthis._dfsEntries(node.right, bucket);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as descriptors from './descriptors.js';\nimport { ServiceCollection } from './serviceCollection.js';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<TArgs extends any[]> =\n\tTArgs extends [] ? []\n\t: TArgs extends [...infer TFirst, BrandedService] ? GetLeadingNonServiceArgs<TFirst>\n\t: TArgs;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => unknown, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t *\n\t * NOTE that the returned child is `disposable` and should be disposed when not used\n\t * anymore. This will also dispose all the services that this service has created.\n\t */\n\tcreateChild(services: ServiceCollection, store?: DisposableStore): IInstantiationService;\n\n\t/**\n\t * Disposes this instantiation service.\n\t *\n\t * - Will dispose all services that this instantiation service has created.\n\t * - Will dispose all its children but not its parent.\n\t * - Will NOT dispose services-instances that this service has been created with\n\t * - Will NOT dispose consumer-instances this service has created\n\t */\n\tdispose(): void;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from '../../../base/common/buffer.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { IExpression, IRelativePattern } from '../../../base/common/glob.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { sep } from '../../../base/common/path.js';\nimport { ReadableStreamEvents } from '../../../base/common/stream.js';\nimport { startsWithIgnoreCase } from '../../../base/common/strings.js';\nimport { isNumber } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { isWeb } from '../../../base/common/platform.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { Lazy } from '../../../base/common/lazy.js';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes its capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilities for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string; capabilities: FileSystemProviderCapabilities }>;\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource. For a folder, children\n\t * information is resolved as well depending on the provided options. Use `stat()` method if\n\t * you do not need children information.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as `resolve()` but supports resolving multiple resources in parallel.\n\t *\n\t * If one of the resolve targets fails to resolve returns a fake `IFileStat` instead of\n\t * making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI; options: IResolveMetadataFileOptions }[]): Promise<IFileStatResult[]>;\n\tresolveAll(toResolve: { resource: URI; options?: IResolveFileOptions }[]): Promise<IFileStatResult[]>;\n\n\t/**\n\t * Same as `resolve()` but without resolving the children of a folder if the\n\t * resource is pointing to a folder.\n\t */\n\tstat(resource: URI): Promise<IFileStatWithPartialMetadata>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions, token?: CancellationToken): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions, token?: CancellationToken): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t *\n\t * Emits a `FileOperation.WRITE` file operation event when successful.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t *\n\t * Emits a `FileOperation.MOVE` file operation event when successful.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource. A folder is copied\n\t * recursively.\n\t *\n\t * Emits a `FileOperation.COPY` file operation event when successful.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Clones a file to a path identified by the resource. Folders are not supported.\n\t *\n\t * If the target path exists, it will be overwritten.\n\t */\n\tcloneFile(source: URI, target: URI): Promise<void>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * Emits a `FileOperation.CREATE` file operation event when successful.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t *\n\t * Emits a `FileOperation.DELETE` file operation event when successful.\n\t */\n\tdel(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<IFileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * An event that signals an error when watching for file changes.\n\t */\n\treadonly onDidWatchError: Event<Error>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * The watcher runs correlated and thus, file events will be reported on the returned\n\t * `IFileSystemWatcher` and not on the generic `IFileService.onDidFilesChange` event.\n\t */\n\tcreateWatcher(resource: URI, options: IWatchOptionsWithoutCorrelation): IFileSystemWatcher;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * The watcher runs uncorrelated and thus will report all events from `IFileService.onDidFilesChange`.\n\t * This means, most listeners in the application will receive your events. It is encouraged to\n\t * use correlated watchers (via `IWatchOptionsWithCorrelation`) to limit events to your listener.\n\t*/\n\twatch(resource: URI, options?: IWatchOptionsWithoutCorrelation): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface IFileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface IFileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface IFileAtomicReadOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic: boolean;\n}\n\nexport interface IFileAtomicOptions {\n\n\t/**\n\t * The postfix is used to create a temporary file based\n\t * on the original resource. The resulting temporary\n\t * file will be in the same folder as the resource and\n\t * have `postfix` appended to the resource name.\n\t *\n\t * Example: given a file resource `file:///some/path/foo.txt`\n\t * and a postfix `.vsctmp`, the temporary file will be\n\t * created as `file:///some/path/foo.txt.vsctmp`.\n\t */\n\treadonly postfix: string;\n}\n\nexport interface IFileAtomicWriteOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `writeFile` method updates the target file atomically\n\t * by first writing to a temporary file in the same folder\n\t * and then renaming it over the target.\n\t */\n\treadonly atomic: IFileAtomicOptions | false;\n}\n\nexport interface IFileAtomicDeleteOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `delete` method deletes the target atomically by\n\t * first renaming it to a temporary resource in the same\n\t * folder and then deleting it.\n\t */\n\treadonly atomic: IFileAtomicOptions | false;\n}\n\nexport interface IFileReadLimits {\n\n\t/**\n\t * If the file exceeds the given size, an error of kind\n\t * `FILE_TOO_LARGE` will be thrown.\n\t */\n\tsize?: number;\n}\n\nexport interface IFileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits\n\t * and an error will be thrown if any limit is exceeded.\n\t */\n\treadonly limits?: IFileReadLimits;\n}\n\nexport interface IFileWriteOptions extends IFileOverwriteOptions, IFileUnlockOptions, IFileAtomicWriteOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type IFileOpenOptions = IFileOpenForReadOptions | IFileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: IFileOpenOptions): options is IFileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface IFileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface IFileOpenForWriteOptions extends IFileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface IFileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk.\n\t *\n\t * This option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `delete` method deletes the target atomically by\n\t * first renaming it to a temporary resource in the same\n\t * folder and then deleting it.\n\t *\n\t * This option maybe not be supported on all providers.\n\t */\n\treadonly atomic: IFileAtomicOptions | false;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly. Components like editors should not\n\t * offer to edit the contents.\n\t */\n\tReadonly = 1,\n\n\t/**\n\t * File is locked. Components like editors should offer\n\t * to edit the contents and ask the user upon saving to\n\t * remove the lock.\n\t */\n\tLocked = 2\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptionsWithoutCorrelation {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\trecursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t * Paths can be relative or absolute and when relative are\n\t * resolved against the watched folder. Glob patterns are\n\t * always matched relative to the watched folder.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t * Paths can be relative or absolute and when relative are\n\t * resolved against the watched folder. Glob patterns are\n\t * always matched relative to the watched folder.\n\t */\n\tincludes?: Array<string | IRelativePattern>;\n\n\t/**\n\t * If provided, allows to filter the events that the watcher should consider\n\t * for emitting. If not provided, all events are emitted.\n\t *\n\t * For example, to emit added and updated events, set to:\n\t * `FileChangeFilter.ADDED | FileChangeFilter.UPDATED`.\n\t */\n\tfilter?: FileChangeFilter;\n}\n\nexport interface IWatchOptions extends IWatchOptionsWithoutCorrelation {\n\n\t/**\n\t * If provided, file change events from the watcher that\n\t * are a result of this watch request will carry the same\n\t * id.\n\t */\n\treadonly correlationId?: number;\n}\n\nexport const enum FileChangeFilter {\n\tUPDATED = 1 << 1,\n\tADDED = 1 << 2,\n\tDELETED = 1 << 3\n}\n\nexport interface IWatchOptionsWithCorrelation extends IWatchOptions {\n\treadonly correlationId: number;\n}\n\nexport interface IFileSystemWatcher extends IDisposable {\n\n\t/**\n\t * An event which fires on file/folder change only for changes\n\t * that correlate to the watch request with matching correlation\n\t * identifier.\n\t */\n\treadonly onDidChange: Event<FileChangesEvent>;\n}\n\nexport function isFileSystemWatcher(thing: unknown): thing is IFileSystemWatcher {\n\tconst candidate = thing as IFileSystemWatcher | undefined;\n\n\treturn !!candidate && typeof candidate.onDidChange === 'function';\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * No capabilities.\n\t */\n\tNone = 0,\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13,\n\n\t/**\n\t * Provider support to read files atomically. This implies the\n\t * provider provides the `FileReadWrite` capability too.\n\t */\n\tFileAtomicRead = 1 << 14,\n\n\t/**\n\t * Provider support to write files atomically. This implies the\n\t * provider provides the `FileReadWrite` capability too.\n\t */\n\tFileAtomicWrite = 1 << 15,\n\n\t/**\n\t * Provider support to delete atomically.\n\t */\n\tFileAtomicDelete = 1 << 16,\n\n\t/**\n\t * Provider support to clone files atomically.\n\t */\n\tFileClone = 1 << 17\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\treadonly onDidWatchError?: Event<string>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: IFileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\n\tcloneFile?(from: URI, to: URI): Promise<void>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: IFileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: IFileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithFileCloneCapability extends IFileSystemProvider {\n\tcloneFile(from: URI, to: URI): Promise<void>;\n}\n\nexport function hasFileCloneCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileCloneCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileClone);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: IFileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: IFileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport interface IFileSystemProviderWithFileAtomicReadCapability extends IFileSystemProvider {\n\treadFile(resource: URI, opts?: IFileAtomicReadOptions): Promise<Uint8Array>;\n\tenforceAtomicReadFile?(resource: URI): boolean;\n}\n\nexport function hasFileAtomicReadCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicReadCapability {\n\tif (!hasReadWriteCapability(provider)) {\n\t\treturn false; // we require the `FileReadWrite` capability too\n\t}\n\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicRead);\n}\n\nexport interface IFileSystemProviderWithFileAtomicWriteCapability extends IFileSystemProvider {\n\twriteFile(resource: URI, contents: Uint8Array, opts?: IFileAtomicWriteOptions): Promise<void>;\n\tenforceAtomicWriteFile?(resource: URI): IFileAtomicOptions | false;\n}\n\nexport function hasFileAtomicWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicWriteCapability {\n\tif (!hasReadWriteCapability(provider)) {\n\t\treturn false; // we require the `FileReadWrite` capability too\n\t}\n\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicWrite);\n}\n\nexport interface IFileSystemProviderWithFileAtomicDeleteCapability extends IFileSystemProvider {\n\tdelete(resource: URI, opts: IFileAtomicDeleteOptions): Promise<void>;\n\tenforceAtomicDelete?(resource: URI): IFileAtomicOptions | false;\n}\n\nexport function hasFileAtomicDeleteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileAtomicDeleteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileAtomicDelete);\n}\n\nexport interface IFileSystemProviderWithReadonlyCapability extends IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities.Readonly & FileSystemProviderCapabilities;\n\n\t/**\n\t * An optional message to show in the UI to explain why the file system is readonly.\n\t */\n\treadonly readOnlyMessage?: IMarkdownString;\n}\n\nexport function hasReadonlyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithReadonlyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.Readonly);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsStorageQuota = 'EntryExceedsStorageQuota',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport interface IFileSystemProviderError extends Error {\n\treadonly name: string;\n\treadonly code: FileSystemProviderErrorCode;\n}\n\nexport class FileSystemProviderError extends Error implements IFileSystemProviderError {\n\n\tstatic create(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\t\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\t\tmarkAsFileSystemProviderError(providerError, code);\n\n\t\treturn providerError;\n\t}\n\n\tprivate constructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\treturn FileSystemProviderError.create(error, code);\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY,\n\tWRITE\n}\n\nexport interface IFileOperationEvent {\n\n\treadonly resource: URI;\n\treadonly operation: FileOperation;\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n}\n\nexport interface IFileOperationEventWithMetadata extends IFileOperationEvent {\n\treadonly target: IFileStatWithMetadata;\n}\n\nexport class FileOperationEvent implements IFileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE | FileOperation.WRITE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE | FileOperation.WRITE): boolean;\n\tisOperation(operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY): this is IFileOperationEventWithMetadata;\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\ttype: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * If provided when starting the file watcher, the correlation\n\t * identifier will match the original file watching request as\n\t * a way to identify the original component that is interested\n\t * in the change.\n\t */\n\treadonly cId?: number;\n}\n\nexport class FileChangesEvent {\n\n\tprivate static readonly MIXED_CORRELATION = null;\n\n\tprivate readonly correlationId: number | undefined | typeof FileChangesEvent.MIXED_CORRELATION = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tfor (const change of changes) {\n\n\t\t\t// Split by type\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.rawAdded.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.rawUpdated.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.rawDeleted.push(change.resource);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Figure out events correlation\n\t\t\tif (this.correlationId !== FileChangesEvent.MIXED_CORRELATION) {\n\t\t\t\tif (typeof change.cId === 'number') {\n\t\t\t\t\tif (this.correlationId === undefined) {\n\t\t\t\t\t\tthis.correlationId = change.cId; \t\t\t\t\t\t\t// correlation not yet set, just take it\n\t\t\t\t\t} else if (this.correlationId !== change.cId) {\n\t\t\t\t\t\tthis.correlationId = FileChangesEvent.MIXED_CORRELATION;\t// correlation mismatch, we have mixed correlation\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.correlationId !== undefined) {\n\t\t\t\t\t\tthis.correlationId = FileChangesEvent.MIXED_CORRELATION;\t// correlation mismatch, we have mixed correlation\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly added = new Lazy(() => {\n\t\tconst added = TernarySearchTree.forUris<boolean>(() => this.ignorePathCasing);\n\t\tadded.fill(this.rawAdded.map(resource => [resource, true]));\n\n\t\treturn added;\n\t});\n\n\tprivate readonly updated = new Lazy(() => {\n\t\tconst updated = TernarySearchTree.forUris<boolean>(() => this.ignorePathCasing);\n\t\tupdated.fill(this.rawUpdated.map(resource => [resource, true]));\n\n\t\treturn updated;\n\t});\n\n\tprivate readonly deleted = new Lazy(() => {\n\t\tconst deleted = TernarySearchTree.forUris<boolean>(() => this.ignorePathCasing);\n\t\tdeleted.fill(this.rawDeleted.map(resource => [resource, true]));\n\n\t\treturn deleted;\n\t});\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added.value.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added.value.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated.value.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated.value.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted.value.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted.value.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.rawAdded.length > 0;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.rawDeleted.length > 0;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.rawUpdated.length > 0;\n\t}\n\n\t/**\n\t * Returns if this event contains changes that correlate to the\n\t * provided `correlationId`.\n\t *\n\t * File change event correlation is an advanced watch feature that\n\t * allows to  identify from which watch request the events originate\n\t * from. This correlation allows to route events specifically\n\t * only to the requestor and not emit them to all listeners.\n\t */\n\tcorrelates(correlationId: number): boolean {\n\t\treturn this.correlationId === correlationId;\n\t}\n\n\t/**\n\t * Figure out if the event contains changes that correlate to one\n\t * correlation identifier.\n\t *\n\t * File change event correlation is an advanced watch feature that\n\t * allows to  identify from which watch request the events originate\n\t * from. This correlation allows to route events specifically\n\t * only to the requestor and not emit them to all listeners.\n\t */\n\thasCorrelation(): boolean {\n\t\treturn typeof this.correlationId === 'number';\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly rawAdded: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawUpdated: URI[] = [];\n\n\t/**\n\t* @deprecated use the `contains` or `affects` method to efficiently find\n\t* out if the event relates to a given resource. these methods ensure:\n\t* - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t* - correctly handles `FileChangeType.DELETED` events\n\t*/\n\treadonly rawDeleted: URI[] = [];\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\nexport interface IBaseFileStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier that represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * File is readonly. Components like editors should not\n\t * offer to edit the contents.\n\t */\n\treadonly readonly?: boolean;\n\n\t/**\n\t * File is locked. Components like editors should offer\n\t * to edit the contents and ask the user upon saving to\n\t * remove the lock.\n\t */\n\treadonly locked?: boolean;\n}\n\nexport interface IBaseFileStatWithMetadata extends Required<IBaseFileStat> { }\n\n/**\n * A file resource with meta information and resolved children if any.\n */\nexport interface IFileStat extends IBaseFileStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren: IFileStat[] | undefined;\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseFileStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly locked: boolean;\n\treadonly children: IFileStatWithMetadata[] | undefined;\n}\n\nexport interface IFileStatResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IFileStatResultWithMetadata extends IFileStatResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileStatWithPartialMetadata extends Omit<IFileStatWithMetadata, 'children'> { }\n\nexport interface IFileContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseFileStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends IFileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `writeFile` method updates the target file atomically\n\t * by first writing to a temporary file in the same folder\n\t * and then renaming it over the target.\n\t */\n\treadonly atomic?: IFileAtomicOptions | false;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions | IWriteFileOptions | ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class TooLargeFileOperationError extends FileOperationError {\n\tconstructor(\n\t\tmessage: string,\n\t\toverride readonly fileOperationResult: FileOperationResult.FILE_TOO_LARGE,\n\t\treadonly size: number,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, fileOperationResult, options);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\nexport const FILES_READONLY_INCLUDE_CONFIG = 'files.readonlyInclude';\nexport const FILES_READONLY_EXCLUDE_CONFIG = 'files.readonlyExclude';\nexport const FILES_READONLY_FROM_PERMISSIONS_CONFIG = 'files.readonlyFromPermissions';\n\nexport interface IGlobPatterns {\n\t[filepattern: string]: boolean;\n}\n\nexport interface IFilesConfiguration {\n\tfiles?: IFilesConfigurationNode;\n}\n\nexport interface IFilesConfigurationNode {\n\tassociations: { [filepattern: string]: string };\n\texclude: IExpression;\n\twatcherExclude: IGlobPatterns;\n\twatcherInclude: string[];\n\tencoding: string;\n\tautoGuessEncoding: boolean;\n\tcandidateGuessEncodings: string[];\n\tdefaultLanguage: string;\n\ttrimTrailingWhitespace: boolean;\n\tautoSave: string;\n\tautoSaveDelay: number;\n\tautoSaveWorkspaceFilesOnly: boolean;\n\tautoSaveWhenNoErrors: boolean;\n\teol: string;\n\tenableTrash: boolean;\n\thotExit: string;\n\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\treadonlyInclude: IGlobPatterns;\n\treadonlyExclude: IGlobPatterns;\n\treadonlyFromPermissions: boolean;\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number; size: number }): string;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined; size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// File limits\n\nexport function getLargeFileConfirmationLimit(remoteAuthority?: string): number;\nexport function getLargeFileConfirmationLimit(uri?: URI): number;\nexport function getLargeFileConfirmationLimit(arg?: string | URI): number {\n\tconst isRemote = typeof arg === 'string' || arg?.scheme === Schemas.vscodeRemote;\n\tconst isLocal = typeof arg !== 'string' && arg?.scheme === Schemas.file;\n\n\tif (isLocal) {\n\t\t// Local almost has no limit in file size\n\t\treturn 1024 * ByteSize.MB;\n\t}\n\n\tif (isRemote) {\n\t\t// With a remote, pick a low limit to avoid\n\t\t// potentially costly file transfers\n\t\treturn 10 * ByteSize.MB;\n\t}\n\n\tif (isWeb) {\n\t\t// Web: we cannot know for sure if a cost\n\t\t// is associated with the file transfer\n\t\t// so we pick a reasonably small limit\n\t\treturn 50 * ByteSize.MB;\n\t}\n\n\t// Local desktop: almost no limit in file size\n\treturn 1024 * ByteSize.MB;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { GLOBSTAR, IRelativePattern, parse, ParsedPattern } from '../../../base/common/glob.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { isAbsolute } from '../../../base/common/path.js';\nimport { isLinux } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { FileChangeFilter, FileChangeType, IFileChange, isParent } from './files.js';\n\ninterface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * Whether to watch recursively or not.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\treadonly excludes: string[];\n\n\t/**\n\t * An optional set of glob patterns or paths to include for\n\t * watching. If not provided, all paths are considered for\n\t * events.\n\t */\n\treadonly includes?: Array<string | IRelativePattern>;\n\n\t/**\n\t * If provided, file change events from the watcher that\n\t * are a result of this watch request will carry the same\n\t * id.\n\t */\n\treadonly correlationId?: number;\n\n\t/**\n\t * If provided, allows to filter the events that the watcher should consider\n\t * for emitting. If not provided, all events are emitted.\n\t *\n\t * For example, to emit added and updated events, set to:\n\t * `FileChangeFilter.ADDED | FileChangeFilter.UPDATED`.\n\t */\n\treadonly filter?: FileChangeFilter;\n}\n\nexport interface IWatchRequestWithCorrelation extends IWatchRequest {\n\treadonly correlationId: number;\n}\n\nexport function isWatchRequestWithCorrelation(request: IWatchRequest): request is IWatchRequestWithCorrelation {\n\treturn typeof request.correlationId === 'number';\n}\n\nexport interface INonRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be non-recursive.\n\t */\n\treadonly recursive: false;\n}\n\nexport interface IRecursiveWatchRequest extends IWatchRequest {\n\n\t/**\n\t * The watcher will be recursive.\n\t */\n\treadonly recursive: true;\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport function isRecursiveWatchRequest(request: IWatchRequest): request is IRecursiveWatchRequest {\n\treturn request.recursive === true;\n}\n\nexport type IUniversalWatchRequest = IRecursiveWatchRequest | INonRecursiveWatchRequest;\n\nexport interface IWatcherErrorEvent {\n\treadonly error: string;\n\treadonly request?: IUniversalWatchRequest;\n}\n\nexport interface IWatcher {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occurred from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * watcher if possible.\n\t */\n\treadonly onDidError: Event<IWatcherErrorEvent>;\n\n\t/**\n\t * Configures the watcher to watch according to the\n\t * requests. Any existing watched path that is not\n\t * in the array, will be removed from watching and\n\t * any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport interface IRecursiveWatcher extends IWatcher {\n\twatch(requests: IRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IRecursiveWatcherWithSubscribe extends IRecursiveWatcher {\n\n\t/**\n\t * Subscribe to file events for the given path. The callback is called\n\t * whenever a file event occurs for the path. If the watcher failed,\n\t * the error parameter is set to `true`.\n\t *\n\t * @returns an `IDisposable` to stop listening to events or `undefined`\n\t * if no events can be watched for the path given the current set of\n\t * recursive watch requests.\n\t */\n\tsubscribe(path: string, callback: (error: true | null, change?: IFileChange) => void): IDisposable | undefined;\n}\n\nexport interface IRecursiveWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\treadonly usePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\treadonly pollingInterval?: number;\n}\n\nexport interface INonRecursiveWatcher extends IWatcher {\n\twatch(requests: INonRecursiveWatchRequest[]): Promise<void>;\n}\n\nexport interface IUniversalWatcher extends IWatcher {\n\twatch(requests: IUniversalWatchRequest[]): Promise<void>;\n}\n\nexport abstract class AbstractWatcherClient extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate watcher: IWatcher | undefined;\n\tprivate readonly watcherDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate options: {\n\t\t\treadonly type: string;\n\t\t\treadonly restartOnError: boolean;\n\t\t}\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createWatcher(disposables: DisposableStore): IWatcher;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the watcher\n\t\tconst disposables = new DisposableStore();\n\t\tthis.watcherDisposables.value = disposables;\n\n\t\t// Ask implementors to create the watcher\n\t\tthis.watcher = this.createWatcher(disposables);\n\t\tthis.watcher.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.watcher.onDidChangeFile(changes => this.onFileChanges(changes)));\n\t\tdisposables.add(this.watcher.onDidLogMessage(msg => this.onLogMessage(msg)));\n\t\tdisposables.add(this.watcher.onDidError(e => this.onError(e.error, e.request)));\n\t}\n\n\tprotected onError(error: string, failedRequest?: IUniversalWatchRequest): void {\n\n\t\t// Restart on error (up to N times, if possible)\n\t\tif (this.canRestart(error, failedRequest)) {\n\t\t\tif (this.restartCounter < AbstractWatcherClient.MAX_RESTARTS && this.requests) {\n\t\t\t\tthis.error(`restarting watcher after unexpected error: ${error}`);\n\t\t\t\tthis.restart(this.requests);\n\t\t\t} else {\n\t\t\t\tthis.error(`gave up attempting to restart watcher after unexpected error: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\t// Do not attempt to restart otherwise, report the error\n\t\telse {\n\t\t\tthis.error(error);\n\t\t}\n\t}\n\n\tprivate canRestart(error: string, failedRequest?: IUniversalWatchRequest): boolean {\n\t\tif (!this.options.restartOnError) {\n\t\t\treturn false; // disabled by options\n\t\t}\n\n\t\tif (failedRequest) {\n\t\t\t// do not treat a failing request as a reason to restart the entire\n\t\t\t// watcher. it is possible that from a large amount of watch requests\n\t\t\t// some fail and we would constantly restart all requests only because\n\t\t\t// of that. rather, continue the watcher and leave the failed request\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\terror.indexOf('No space left on device') !== -1 ||\n\t\t\terror.indexOf('EMFILE') !== -1\n\t\t) {\n\t\t\t// do not restart when the error indicates that the system is running\n\t\t\t// out of handles for file watching. this is not recoverable anyway\n\t\t\t// and needs changes to the system before continuing\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate restart(requests: IUniversalWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.watcher?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.watcher?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (${this.options.type})] ${message}` });\n\t}\n\n\tprotected trace(message: string) {\n\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (${this.options.type})] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the watcher invalid from here\n\t\tthis.watcher = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\nexport abstract class AbstractNonRecursiveWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'node.js', restartOnError: false });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): INonRecursiveWatcher;\n}\n\nexport abstract class AbstractUniversalWatcherClient extends AbstractWatcherClient {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging, { type: 'universal', restartOnError: true });\n\t}\n\n\tprotected abstract override createWatcher(disposables: DisposableStore): IUniversalWatcher;\n}\n\nexport interface ILogMessage {\n\treadonly type: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\treadonly message: string;\n}\n\nexport function reviveFileChanges(changes: IFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: URI.revive(change.resource),\n\t\tcId: change.cId\n\t}));\n}\n\nexport function coalesceEvents(changes: IFileChange[]): IFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nexport function normalizeWatcherPattern(path: string, pattern: string | IRelativePattern): string | IRelativePattern {\n\n\t// Patterns are always matched on the full absolute path\n\t// of the event. As such, if the pattern is not absolute\n\t// and is a string and does not start with a leading\n\t// `**`, we have to convert it to a relative pattern with\n\t// the given `base`\n\n\tif (typeof pattern === 'string' && !pattern.startsWith(GLOBSTAR) && !isAbsolute(pattern)) {\n\t\treturn { base: path, pattern };\n\t}\n\n\treturn pattern;\n}\n\nexport function parseWatcherPatterns(path: string, patterns: Array<string | IRelativePattern>): ParsedPattern[] {\n\tconst parsedPatterns: ParsedPattern[] = [];\n\n\tfor (const pattern of patterns) {\n\t\tparsedPatterns.push(parse(normalizeWatcherPattern(path, pattern)));\n\t}\n\n\treturn parsedPatterns;\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IFileChange>();\n\n\tprivate toKey(event: IFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.resource.fsPath;\n\t\t}\n\n\t\treturn event.resource.fsPath.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case\n\t\t\t// by keeping both CREATE and DELETE events\n\t\t\tif (existingEvent.resource.fsPath !== event.resource.fsPath && (event.type === FileChangeType.DELETED || event.type === FileChangeType.ADDED)) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IFileChange[] {\n\t\tconst addOrChangeEvents: IFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.resource.fsPath.length - e2.resource.fsPath.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.resource.fsPath, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.resource.fsPath);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n\nexport function isFiltered(event: IFileChange, filter: FileChangeFilter | undefined): boolean {\n\tif (typeof filter === 'number') {\n\t\tswitch (event.type) {\n\t\t\tcase FileChangeType.ADDED:\n\t\t\t\treturn (filter & FileChangeFilter.ADDED) === 0;\n\t\t\tcase FileChangeType.DELETED:\n\t\t\t\treturn (filter & FileChangeFilter.DELETED) === 0;\n\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\treturn (filter & FileChangeFilter.UPDATED) === 0;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function requestFilterToString(filter: FileChangeFilter | undefined): string {\n\tif (typeof filter === 'number') {\n\t\tconst filters = [];\n\t\tif (filter & FileChangeFilter.ADDED) {\n\t\t\tfilters.push('Added');\n\t\t}\n\t\tif (filter & FileChangeFilter.DELETED) {\n\t\t\tfilters.push('Deleted');\n\t\t}\n\t\tif (filter & FileChangeFilter.UPDATED) {\n\t\t\tfilters.push('Updated');\n\t\t}\n\n\t\tif (filters.length === 0) {\n\t\t\treturn '<all>';\n\t\t}\n\n\t\treturn `[${filters.join(', ')}]`;\n\t}\n\n\treturn '<none>';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as parcelWatcher from '@parcel/watcher';\nimport { statSync, unlinkSync } from 'fs';\nimport { tmpdir, homedir } from 'os';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { DeferredPromise, RunOnceScheduler, RunOnceWorker, ThrottledWorker } from '../../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { toErrorMessage } from '../../../../../base/common/errorMessage.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { randomPath, isEqual, isEqualOrParent } from '../../../../../base/common/extpath.js';\nimport { GLOBSTAR, patternsEquals } from '../../../../../base/common/glob.js';\nimport { BaseWatcher } from '../baseWatcher.js';\nimport { TernarySearchTree } from '../../../../../base/common/ternarySearchTree.js';\nimport { normalizeNFC } from '../../../../../base/common/normalization.js';\nimport { normalize, join } from '../../../../../base/common/path.js';\nimport { isLinux, isMacintosh, isWindows } from '../../../../../base/common/platform.js';\nimport { realcaseSync, realpathSync } from '../../../../../base/node/extpath.js';\nimport { FileChangeType, IFileChange } from '../../../common/files.js';\nimport { coalesceEvents, IRecursiveWatchRequest, parseWatcherPatterns, IRecursiveWatcherWithSubscribe, isFiltered, IWatcherErrorEvent } from '../../../common/watcher.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\n\nexport class ParcelWatcherInstance extends Disposable {\n\n\tprivate readonly _onDidStop = this._register(new Emitter<{ joinRestart?: Promise<void> }>());\n\treadonly onDidStop = this._onDidStop.event;\n\n\tprivate readonly _onDidFail = this._register(new Emitter<void>());\n\treadonly onDidFail = this._onDidFail.event;\n\n\tprivate didFail = false;\n\tget failed(): boolean { return this.didFail; }\n\n\tprivate didStop = false;\n\tget stopped(): boolean { return this.didStop; }\n\n\tprivate readonly includes = this.request.includes ? parseWatcherPatterns(this.request.path, this.request.includes) : undefined;\n\tprivate readonly excludes = this.request.excludes ? parseWatcherPatterns(this.request.path, this.request.excludes) : undefined;\n\n\tprivate readonly subscriptions = new Map<string, Set<(change: IFileChange) => void>>();\n\n\tconstructor(\n\t\t/**\n\t\t * Signals when the watcher is ready to watch.\n\t\t */\n\t\treadonly ready: Promise<unknown>,\n\t\treadonly request: IRecursiveWatchRequest,\n\t\t/**\n\t\t * How often this watcher has been restarted in case of an unexpected\n\t\t * shutdown.\n\t\t */\n\t\treadonly restarts: number,\n\t\t/**\n\t\t * The cancellation token associated with the lifecycle of the watcher.\n\t\t */\n\t\treadonly token: CancellationToken,\n\t\t/**\n\t\t * An event aggregator to coalesce events and reduce duplicates.\n\t\t */\n\t\treadonly worker: RunOnceWorker<IFileChange>,\n\t\tprivate readonly stopFn: () => Promise<void>\n\t) {\n\t\tsuper();\n\n\t\tthis._register(toDisposable(() => this.subscriptions.clear()));\n\t}\n\n\tsubscribe(path: string, callback: (change: IFileChange) => void): IDisposable {\n\t\tpath = URI.file(path).fsPath; // make sure to store the path in `fsPath` form to match it with events later\n\n\t\tlet subscriptions = this.subscriptions.get(path);\n\t\tif (!subscriptions) {\n\t\t\tsubscriptions = new Set();\n\t\t\tthis.subscriptions.set(path, subscriptions);\n\t\t}\n\n\t\tsubscriptions.add(callback);\n\n\t\treturn toDisposable(() => {\n\t\t\tconst subscriptions = this.subscriptions.get(path);\n\t\t\tif (subscriptions) {\n\t\t\t\tsubscriptions.delete(callback);\n\n\t\t\t\tif (subscriptions.size === 0) {\n\t\t\t\t\tthis.subscriptions.delete(path);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tget subscriptionsCount(): number {\n\t\treturn this.subscriptions.size;\n\t}\n\n\tnotifyFileChange(path: string, change: IFileChange): void {\n\t\tconst subscriptions = this.subscriptions.get(path);\n\t\tif (subscriptions) {\n\t\t\tfor (const subscription of subscriptions) {\n\t\t\t\tsubscription(change);\n\t\t\t}\n\t\t}\n\t}\n\n\tnotifyWatchFailed(): void {\n\t\tthis.didFail = true;\n\n\t\tthis._onDidFail.fire();\n\t}\n\n\tinclude(path: string): boolean {\n\t\tif (!this.includes || this.includes.length === 0) {\n\t\t\treturn true; // no specific includes defined, include all\n\t\t}\n\n\t\treturn this.includes.some(include => include(path));\n\t}\n\n\texclude(path: string): boolean {\n\t\treturn Boolean(this.excludes?.some(exclude => exclude(path)));\n\t}\n\n\tasync stop(joinRestart: Promise<void> | undefined): Promise<void> {\n\t\tthis.didStop = true;\n\n\t\ttry {\n\t\t\tawait this.stopFn();\n\t\t} finally {\n\t\t\tthis._onDidStop.fire({ joinRestart });\n\t\t\tthis.dispose();\n\t\t}\n\t}\n}\n\nexport class ParcelWatcher extends BaseWatcher implements IRecursiveWatcherWithSubscribe {\n\n\tprivate static readonly MAP_PARCEL_WATCHER_ACTION_TO_FILE_CHANGE = new Map<parcelWatcher.EventType, number>(\n\t\t[\n\t\t\t['create', FileChangeType.ADDED],\n\t\t\t['update', FileChangeType.UPDATED],\n\t\t\t['delete', FileChangeType.DELETED]\n\t\t]\n\t);\n\n\tprivate static readonly PREDEFINED_EXCLUDES: { [platform: string]: string[] } = {\n\t\t'win32': [],\n\t\t'darwin': [\n\t\t\tjoin(homedir(), 'Library', 'Containers') // Triggers access dialog from macOS 14 (https://github.com/microsoft/vscode/issues/208105)\n\t\t],\n\t\t'linux': []\n\t};\n\n\tprivate static readonly PARCEL_WATCHER_BACKEND = isWindows ? 'windows' : isLinux ? 'inotify' : 'fs-events';\n\n\tprivate readonly _onDidError = this._register(new Emitter<IWatcherErrorEvent>());\n\treadonly onDidError = this._onDidError.event;\n\n\treadonly watchers = new Set<ParcelWatcherInstance>();\n\n\t// A delay for collecting file changes from Parcel\n\t// before collecting them for coalescing and emitting.\n\t// Parcel internally uses 50ms as delay, so we use 75ms,\n\t// to schedule sufficiently after Parcel.\n\t//\n\t// Note: since Parcel 2.0.7, the very first event is\n\t// emitted without delay if no events occured over a\n\t// duration of 500ms. But we always want to aggregate\n\t// events to apply our coleasing logic.\n\t//\n\tprivate static readonly FILE_CHANGES_HANDLER_DELAY = 75;\n\n\t// Reduce likelyhood of spam from file events via throttling.\n\t// (https://github.com/microsoft/vscode/issues/124723)\n\tprivate readonly throttledFileChangesEmitter = this._register(new ThrottledWorker<IFileChange>(\n\t\t{\n\t\t\tmaxWorkChunkSize: 500,\t// only process up to 500 changes at once before...\n\t\t\tthrottleDelay: 200,\t  \t// ...resting for 200ms until we process events again...\n\t\t\tmaxBufferedWork: 30000 \t// ...but never buffering more than 30000 events in memory\n\t\t},\n\t\tevents => this._onDidChangeFile.fire(events)\n\t));\n\n\tprivate enospcErrorLogged = false;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Error handling on process\n\t\tprocess.on('uncaughtException', error => this.onUnexpectedError(error));\n\t\tprocess.on('unhandledRejection', error => this.onUnexpectedError(error));\n\t}\n\n\tprotected override async doWatch(requests: IRecursiveWatchRequest[]): Promise<void> {\n\n\t\t// Figure out duplicates to remove from the requests\n\t\trequests = this.removeDuplicateRequests(requests);\n\n\t\t// Figure out which watchers to start and which to stop\n\t\tconst requestsToStart: IRecursiveWatchRequest[] = [];\n\t\tconst watchersToStop = new Set(Array.from(this.watchers));\n\t\tfor (const request of requests) {\n\t\t\tconst watcher = this.findWatcher(request);\n\t\t\tif (watcher && patternsEquals(watcher.request.excludes, request.excludes) && patternsEquals(watcher.request.includes, request.includes) && watcher.request.pollingInterval === request.pollingInterval) {\n\t\t\t\twatchersToStop.delete(watcher); // keep watcher\n\t\t\t} else {\n\t\t\t\trequestsToStart.push(request); // start watching\n\t\t\t}\n\t\t}\n\n\t\t// Logging\n\t\tif (requestsToStart.length) {\n\t\t\tthis.trace(`Request to start watching: ${requestsToStart.map(request => this.requestToString(request)).join(',')}`);\n\t\t}\n\n\t\tif (watchersToStop.size) {\n\t\t\tthis.trace(`Request to stop watching: ${Array.from(watchersToStop).map(watcher => this.requestToString(watcher.request)).join(',')}`);\n\t\t}\n\n\t\t// Stop watching as instructed\n\t\tfor (const watcher of watchersToStop) {\n\t\t\tawait this.stopWatching(watcher);\n\t\t}\n\n\t\t// Start watching as instructed\n\t\tfor (const request of requestsToStart) {\n\t\t\tif (request.pollingInterval) {\n\t\t\t\tthis.startPolling(request, request.pollingInterval);\n\t\t\t} else {\n\t\t\t\tawait this.startWatching(request);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate findWatcher(request: IRecursiveWatchRequest): ParcelWatcherInstance | undefined {\n\t\tfor (const watcher of this.watchers) {\n\n\t\t\t// Requests or watchers with correlation always match on that\n\t\t\tif (this.isCorrelated(request) || this.isCorrelated(watcher.request)) {\n\t\t\t\tif (watcher.request.correlationId === request.correlationId) {\n\t\t\t\t\treturn watcher;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Non-correlated requests or watchers match on path\n\t\t\telse {\n\t\t\t\tif (isEqual(watcher.request.path, request.path, !isLinux /* ignorecase */)) {\n\t\t\t\t\treturn watcher;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate startPolling(request: IRecursiveWatchRequest, pollingInterval: number, restarts = 0): void {\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst instance = new DeferredPromise<void>();\n\n\t\tconst snapshotFile = randomPath(tmpdir(), 'vscode-watcher-snapshot');\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: ParcelWatcherInstance = new ParcelWatcherInstance(\n\t\t\tinstance.p,\n\t\t\trequest,\n\t\t\trestarts,\n\t\t\tcts.token,\n\t\t\tnew RunOnceWorker<IFileChange>(events => this.handleParcelEvents(events, watcher), ParcelWatcher.FILE_CHANGES_HANDLER_DELAY),\n\t\t\tasync () => {\n\t\t\t\tcts.dispose(true);\n\n\t\t\t\twatcher.worker.flush();\n\t\t\t\twatcher.worker.dispose();\n\n\t\t\t\tpollingWatcher.dispose();\n\t\t\t\tunlinkSync(snapshotFile);\n\t\t\t}\n\t\t);\n\t\tthis.watchers.add(watcher);\n\n\t\t// Path checks for symbolic links / wrong casing\n\t\tconst { realPath, realPathDiffers, realPathLength } = this.normalizePath(request);\n\n\t\tthis.trace(`Started watching: '${realPath}' with polling interval '${pollingInterval}'`);\n\n\t\tlet counter = 0;\n\n\t\tconst pollingWatcher = new RunOnceScheduler(async () => {\n\t\t\tcounter++;\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// We already ran before, check for events since\n\t\t\tconst parcelWatcherLib = parcelWatcher;\n\t\t\tif (counter > 1) {\n\t\t\t\tconst parcelEvents = await parcelWatcherLib.getEventsSince(realPath, snapshotFile, { ignore: this.addPredefinedExcludes(request.excludes), backend: ParcelWatcher.PARCEL_WATCHER_BACKEND });\n\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Handle & emit events\n\t\t\t\tthis.onParcelEvents(parcelEvents, watcher, realPathDiffers, realPathLength);\n\t\t\t}\n\n\t\t\t// Store a snapshot of files to the snapshot file\n\t\t\tawait parcelWatcherLib.writeSnapshot(realPath, snapshotFile, { ignore: this.addPredefinedExcludes(request.excludes), backend: ParcelWatcher.PARCEL_WATCHER_BACKEND });\n\n\t\t\t// Signal we are ready now when the first snapshot was written\n\t\t\tif (counter === 1) {\n\t\t\t\tinstance.complete();\n\t\t\t}\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Schedule again at the next interval\n\t\t\tpollingWatcher.schedule();\n\t\t}, pollingInterval);\n\t\tpollingWatcher.schedule(0);\n\t}\n\n\tprivate async startWatching(request: IRecursiveWatchRequest, restarts = 0): Promise<void> {\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst instance = new DeferredPromise<parcelWatcher.AsyncSubscription | undefined>();\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: ParcelWatcherInstance = new ParcelWatcherInstance(\n\t\t\tinstance.p,\n\t\t\trequest,\n\t\t\trestarts,\n\t\t\tcts.token,\n\t\t\tnew RunOnceWorker<IFileChange>(events => this.handleParcelEvents(events, watcher), ParcelWatcher.FILE_CHANGES_HANDLER_DELAY),\n\t\t\tasync () => {\n\t\t\t\tcts.dispose(true);\n\n\t\t\t\twatcher.worker.flush();\n\t\t\t\twatcher.worker.dispose();\n\n\t\t\t\tconst watcherInstance = await instance.p;\n\t\t\t\tawait watcherInstance?.unsubscribe();\n\t\t\t}\n\t\t);\n\t\tthis.watchers.add(watcher);\n\n\t\t// Path checks for symbolic links / wrong casing\n\t\tconst { realPath, realPathDiffers, realPathLength } = this.normalizePath(request);\n\n\t\ttry {\n\t\t\tconst parcelWatcherLib = parcelWatcher;\n\t\t\tconst parcelWatcherInstance = await parcelWatcherLib.subscribe(realPath, (error, parcelEvents) => {\n\t\t\t\tif (watcher.token.isCancellationRequested) {\n\t\t\t\t\treturn; // return early when disposed\n\t\t\t\t}\n\n\t\t\t\t// In any case of an error, treat this like a unhandled exception\n\t\t\t\t// that might require the watcher to restart. We do not really know\n\t\t\t\t// the state of parcel at this point and as such will try to restart\n\t\t\t\t// up to our maximum of restarts.\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.onUnexpectedError(error, request);\n\t\t\t\t}\n\n\t\t\t\t// Handle & emit events\n\t\t\t\tthis.onParcelEvents(parcelEvents, watcher, realPathDiffers, realPathLength);\n\t\t\t}, {\n\t\t\t\tbackend: ParcelWatcher.PARCEL_WATCHER_BACKEND,\n\t\t\t\tignore: this.addPredefinedExcludes(watcher.request.excludes)\n\t\t\t});\n\n\t\t\tthis.trace(`Started watching: '${realPath}' with backend '${ParcelWatcher.PARCEL_WATCHER_BACKEND}'`);\n\n\t\t\tinstance.complete(parcelWatcherInstance);\n\t\t} catch (error) {\n\t\t\tthis.onUnexpectedError(error, request);\n\n\t\t\tinstance.complete(undefined);\n\n\t\t\twatcher.notifyWatchFailed();\n\t\t\tthis._onDidWatchFail.fire(request);\n\t\t}\n\t}\n\n\tprivate addPredefinedExcludes(initialExcludes: string[]): string[] {\n\t\tconst excludes = [...initialExcludes];\n\n\t\tconst predefinedExcludes = ParcelWatcher.PREDEFINED_EXCLUDES[process.platform];\n\t\tif (Array.isArray(predefinedExcludes)) {\n\t\t\tfor (const exclude of predefinedExcludes) {\n\t\t\t\tif (!excludes.includes(exclude)) {\n\t\t\t\t\texcludes.push(exclude);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn excludes;\n\t}\n\n\tprivate onParcelEvents(parcelEvents: parcelWatcher.Event[], watcher: ParcelWatcherInstance, realPathDiffers: boolean, realPathLength: number): void {\n\t\tif (parcelEvents.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Normalize events: handle NFC normalization and symlinks\n\t\t// It is important to do this before checking for includes\n\t\t// to check on the original path.\n\t\tthis.normalizeEvents(parcelEvents, watcher.request, realPathDiffers, realPathLength);\n\n\t\t// Check for includes\n\t\tconst includedEvents = this.handleIncludes(watcher, parcelEvents);\n\n\t\t// Add to event aggregator for later processing\n\t\tfor (const includedEvent of includedEvents) {\n\t\t\twatcher.worker.work(includedEvent);\n\t\t}\n\t}\n\n\tprivate handleIncludes(watcher: ParcelWatcherInstance, parcelEvents: parcelWatcher.Event[]): IFileChange[] {\n\t\tconst events: IFileChange[] = [];\n\n\t\tfor (const { path, type: parcelEventType } of parcelEvents) {\n\t\t\tconst type = ParcelWatcher.MAP_PARCEL_WATCHER_ACTION_TO_FILE_CHANGE.get(parcelEventType)!;\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.traceWithCorrelation(`${type === FileChangeType.ADDED ? '[ADDED]' : type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${path}`, watcher.request);\n\t\t\t}\n\n\t\t\t// Apply include filter if any\n\t\t\tif (!watcher.include(path)) {\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.traceWithCorrelation(` >> ignored (not included) ${path}`, watcher.request);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tevents.push({ type, resource: URI.file(path), cId: watcher.request.correlationId });\n\t\t\t}\n\t\t}\n\n\t\treturn events;\n\t}\n\n\tprivate handleParcelEvents(parcelEvents: IFileChange[], watcher: ParcelWatcherInstance): void {\n\n\t\t// Coalesce events: merge events of same kind\n\t\tconst coalescedEvents = coalesceEvents(parcelEvents);\n\n\t\t// Filter events: check for specific events we want to exclude\n\t\tconst { events: filteredEvents, rootDeleted } = this.filterEvents(coalescedEvents, watcher);\n\n\t\t// Broadcast to clients\n\t\tthis.emitEvents(filteredEvents, watcher);\n\n\t\t// Handle root path deletes\n\t\tif (rootDeleted) {\n\t\t\tthis.onWatchedPathDeleted(watcher);\n\t\t}\n\t}\n\n\tprivate emitEvents(events: IFileChange[], watcher: ParcelWatcherInstance): void {\n\t\tif (events.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Broadcast to clients via throttler\n\t\tconst worked = this.throttledFileChangesEmitter.work(events);\n\n\t\t// Logging\n\t\tif (!worked) {\n\t\t\tthis.warn(`started ignoring events due to too many file change events at once (incoming: ${events.length}, most recent change: ${events[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t} else {\n\t\t\tif (this.throttledFileChangesEmitter.pending > 0) {\n\t\t\t\tthis.trace(`started throttling events due to large amount of file change events at once (pending: ${this.throttledFileChangesEmitter.pending}, most recent change: ${events[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`, watcher);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate normalizePath(request: IRecursiveWatchRequest): { realPath: string; realPathDiffers: boolean; realPathLength: number } {\n\t\tlet realPath = request.path;\n\t\tlet realPathDiffers = false;\n\t\tlet realPathLength = request.path.length;\n\n\t\ttry {\n\n\t\t\t// First check for symbolic link\n\t\t\trealPath = realpathSync(request.path);\n\n\t\t\t// Second check for casing difference\n\t\t\t// Note: this will be a no-op on Linux platforms\n\t\t\tif (request.path === realPath) {\n\t\t\t\trealPath = realcaseSync(request.path) ?? request.path;\n\t\t\t}\n\n\t\t\t// Correct watch path as needed\n\t\t\tif (request.path !== realPath) {\n\t\t\t\trealPathLength = realPath.length;\n\t\t\t\trealPathDiffers = true;\n\n\t\t\t\tthis.trace(`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${request.path}, real: ${realPath})`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn { realPath, realPathDiffers, realPathLength };\n\t}\n\n\tprivate normalizeEvents(events: parcelWatcher.Event[], request: IRecursiveWatchRequest, realPathDiffers: boolean, realPathLength: number): void {\n\t\tfor (const event of events) {\n\n\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\tif (isMacintosh) {\n\t\t\t\tevent.path = normalizeNFC(event.path);\n\t\t\t}\n\n\t\t\t// Workaround for https://github.com/parcel-bundler/watcher/issues/68\n\t\t\t// where watching root drive letter adds extra backslashes.\n\t\t\tif (isWindows) {\n\t\t\t\tif (request.path.length <= 3) { // for ex. c:, C:\\\n\t\t\t\t\tevent.path = normalize(event.path);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Convert paths back to original form in case it differs\n\t\t\tif (realPathDiffers) {\n\t\t\t\tevent.path = request.path + event.path.substr(realPathLength);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate filterEvents(events: IFileChange[], watcher: ParcelWatcherInstance): { events: IFileChange[]; rootDeleted?: boolean } {\n\t\tconst filteredEvents: IFileChange[] = [];\n\t\tlet rootDeleted = false;\n\n\t\tconst filter = this.isCorrelated(watcher.request) ? watcher.request.filter : undefined; // filtering is only enabled when correlating because watchers are otherwise potentially reused\n\t\tfor (const event of events) {\n\n\t\t\t// Emit to instance subscriptions if any before filtering\n\t\t\tif (watcher.subscriptionsCount > 0) {\n\t\t\t\twatcher.notifyFileChange(event.resource.fsPath, event);\n\t\t\t}\n\n\t\t\t// Filtering\n\t\t\trootDeleted = event.type === FileChangeType.DELETED && isEqual(event.resource.fsPath, watcher.request.path, !isLinux);\n\t\t\tif (isFiltered(event, filter)) {\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.traceWithCorrelation(` >> ignored (filtered) ${event.resource.fsPath}`, watcher.request);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Logging\n\t\t\tthis.traceEvent(event, watcher.request);\n\n\t\t\tfilteredEvents.push(event);\n\t\t}\n\n\t\treturn { events: filteredEvents, rootDeleted };\n\t}\n\n\tprivate onWatchedPathDeleted(watcher: ParcelWatcherInstance): void {\n\t\tthis.warn('Watcher shutdown because watched path got deleted', watcher);\n\n\t\twatcher.notifyWatchFailed();\n\t\tthis._onDidWatchFail.fire(watcher.request);\n\t}\n\n\tprivate onUnexpectedError(error: unknown, request?: IRecursiveWatchRequest): void {\n\t\tconst msg = toErrorMessage(error);\n\n\t\t// Specially handle ENOSPC errors that can happen when\n\t\t// the watcher consumes so many file descriptors that\n\t\t// we are running into a limit. We only want to warn\n\t\t// once in this case to avoid log spam.\n\t\t// See https://github.com/microsoft/vscode/issues/7950\n\t\tif (msg.indexOf('No space left on device') !== -1) {\n\t\t\tif (!this.enospcErrorLogged) {\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)', request);\n\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Any other error is unexpected and we should try to\n\t\t// restart the watcher as a result to get into healthy\n\t\t// state again if possible and if not attempted too much\n\t\telse {\n\t\t\tthis.error(`Unexpected error: ${msg} (EUNKNOWN)`, request);\n\n\t\t\tthis._onDidError.fire({ request, error: msg });\n\t\t}\n\t}\n\n\toverride async stop(): Promise<void> {\n\t\tawait super.stop();\n\n\t\tfor (const watcher of this.watchers) {\n\t\t\tawait this.stopWatching(watcher);\n\t\t}\n\t}\n\n\tprotected restartWatching(watcher: ParcelWatcherInstance, delay = 800): void {\n\n\t\t// Restart watcher delayed to accomodate for\n\t\t// changes on disk that have triggered the\n\t\t// need for a restart in the first place.\n\t\tconst scheduler = new RunOnceScheduler(async () => {\n\t\t\tif (watcher.token.isCancellationRequested) {\n\t\t\t\treturn; // return early when disposed\n\t\t\t}\n\n\t\t\tconst restartPromise = new DeferredPromise<void>();\n\t\t\ttry {\n\n\t\t\t\t// Await the watcher having stopped, as this is\n\t\t\t\t// needed to properly re-watch the same path\n\t\t\t\tawait this.stopWatching(watcher, restartPromise.p);\n\n\t\t\t\t// Start watcher again counting the restarts\n\t\t\t\tif (watcher.request.pollingInterval) {\n\t\t\t\t\tthis.startPolling(watcher.request, watcher.request.pollingInterval, watcher.restarts + 1);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.startWatching(watcher.request, watcher.restarts + 1);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\trestartPromise.complete();\n\t\t\t}\n\t\t}, delay);\n\n\t\tscheduler.schedule();\n\t\twatcher.token.onCancellationRequested(() => scheduler.dispose());\n\t}\n\n\tprivate async stopWatching(watcher: ParcelWatcherInstance, joinRestart?: Promise<void>): Promise<void> {\n\t\tthis.trace(`stopping file watcher`, watcher);\n\n\t\tthis.watchers.delete(watcher);\n\n\t\ttry {\n\t\t\tawait watcher.stop(joinRestart);\n\t\t} catch (error) {\n\t\t\tthis.error(`Unexpected error stopping watcher: ${toErrorMessage(error)}`, watcher.request);\n\t\t}\n\t}\n\n\tprotected removeDuplicateRequests(requests: IRecursiveWatchRequest[], validatePaths = true): IRecursiveWatchRequest[] {\n\n\t\t// Sort requests by path length to have shortest first\n\t\t// to have a way to prevent children to be watched if\n\t\t// parents exist.\n\t\trequests.sort((requestA, requestB) => requestA.path.length - requestB.path.length);\n\n\t\t// Ignore requests for the same paths that have the same correlation\n\t\tconst mapCorrelationtoRequests = new Map<number | undefined /* correlation */, Map<string, IRecursiveWatchRequest>>();\n\t\tfor (const request of requests) {\n\t\t\tif (request.excludes.includes(GLOBSTAR)) {\n\t\t\t\tcontinue; // path is ignored entirely (via `**` glob exclude)\n\t\t\t}\n\n\t\t\tconst path = isLinux ? request.path : request.path.toLowerCase(); // adjust for case sensitivity\n\n\t\t\tlet requestsForCorrelation = mapCorrelationtoRequests.get(request.correlationId);\n\t\t\tif (!requestsForCorrelation) {\n\t\t\t\trequestsForCorrelation = new Map<string, IRecursiveWatchRequest>();\n\t\t\t\tmapCorrelationtoRequests.set(request.correlationId, requestsForCorrelation);\n\t\t\t}\n\n\t\t\tif (requestsForCorrelation.has(path)) {\n\t\t\t\tthis.trace(`ignoring a request for watching who's path is already watched: ${this.requestToString(request)}`);\n\t\t\t}\n\n\t\t\trequestsForCorrelation.set(path, request);\n\t\t}\n\n\t\tconst normalizedRequests: IRecursiveWatchRequest[] = [];\n\n\t\tfor (const requestsForCorrelation of mapCorrelationtoRequests.values()) {\n\n\t\t\t// Only consider requests for watching that are not\n\t\t\t// a child of an existing request path to prevent\n\t\t\t// duplication. In addition, drop any request where\n\t\t\t// everything is excluded (via `**` glob).\n\t\t\t//\n\t\t\t// However, allow explicit requests to watch folders\n\t\t\t// that are symbolic links because the Parcel watcher\n\t\t\t// does not allow to recursively watch symbolic links.\n\n\t\t\tconst requestTrie = TernarySearchTree.forPaths<IRecursiveWatchRequest>(!isLinux);\n\n\t\t\tfor (const request of requestsForCorrelation.values()) {\n\n\t\t\t\t// Check for overlapping requests\n\t\t\t\tif (requestTrie.findSubstr(request.path)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst realpath = realpathSync(request.path);\n\t\t\t\t\t\tif (realpath === request.path) {\n\t\t\t\t\t\t\tthis.trace(`ignoring a request for watching who's parent is already watched: ${this.requestToString(request)}`);\n\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.trace(`ignoring a request for watching who's realpath failed to resolve: ${this.requestToString(request)} (error: ${error})`);\n\n\t\t\t\t\t\tthis._onDidWatchFail.fire(request);\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Check for invalid paths\n\t\t\t\tif (validatePaths && !this.isPathValid(request.path)) {\n\t\t\t\t\tthis._onDidWatchFail.fire(request);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\trequestTrie.set(request.path, request);\n\t\t\t}\n\n\t\t\tnormalizedRequests.push(...Array.from(requestTrie).map(([, request]) => request));\n\t\t}\n\n\t\treturn normalizedRequests;\n\t}\n\n\tprivate isPathValid(path: string): boolean {\n\t\ttry {\n\t\t\tconst stat = statSync(path);\n\t\t\tif (!stat.isDirectory()) {\n\t\t\t\tthis.trace(`ignoring a path for watching that is a file and not a folder: ${path}`);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.trace(`ignoring a path for watching who's stat info failed to resolve: ${path} (error: ${error})`);\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsubscribe(path: string, callback: (error: true | null, change?: IFileChange) => void): IDisposable | undefined {\n\t\tfor (const watcher of this.watchers) {\n\t\t\tif (watcher.failed) {\n\t\t\t\tcontinue; // watcher has already failed\n\t\t\t}\n\n\t\t\tif (!isEqualOrParent(path, watcher.request.path, !isLinux)) {\n\t\t\t\tcontinue; // watcher does not consider this path\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\twatcher.exclude(path) ||\n\t\t\t\t!watcher.include(path)\n\t\t\t) {\n\t\t\t\tcontinue; // parcel instance does not consider this path\n\t\t\t}\n\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tdisposables.add(Event.once(watcher.onDidStop)(async e => {\n\t\t\t\tawait e.joinRestart; // if we are restarting, await that so that we can possibly reuse this watcher again\n\t\t\t\tif (disposables.isDisposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcallback(true /* error */);\n\t\t\t}));\n\t\t\tdisposables.add(Event.once(watcher.onDidFail)(() => callback(true /* error */)));\n\t\t\tdisposables.add(watcher.subscribe(path, change => callback(null, change)));\n\n\t\t\treturn disposables;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprotected trace(message: string, watcher?: ParcelWatcherInstance): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: this.toMessage(message, watcher?.request) });\n\t\t}\n\t}\n\n\tprotected warn(message: string, watcher?: ParcelWatcherInstance) {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: this.toMessage(message, watcher?.request) });\n\t}\n\n\tprivate error(message: string, request?: IRecursiveWatchRequest) {\n\t\tthis._onDidLogMessage.fire({ type: 'error', message: this.toMessage(message, request) });\n\t}\n\n\tprivate toMessage(message: string, request?: IRecursiveWatchRequest): string {\n\t\treturn request ? `[File Watcher] ${message} (path: ${request.path})` : `[File Watcher ('parcel')] ${message}`;\n\t}\n\n\tprotected get recursiveWatcher() { return this; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from './arrays.js';\nimport * as types from './types.js';\nimport * as nls from '../../nls.js';\nimport { IAction } from './actions.js';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// Custom node.js error from us\n\tif (exception.code === 'ERR_UNC_HOST_NOT_ALLOWED') {\n\t\treturn `${exception.message}. Please update the 'security.allowedUNCHosts' setting if you want to allow this host.`;\n\t}\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n\nexport interface IErrorWithActions extends Error {\n\tactions: IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(messageOrError: string | Error, actions: IAction[]): IErrorWithActions {\n\tlet error: IErrorWithActions;\n\tif (typeof messageOrError === 'string') {\n\t\terror = new Error(messageOrError) as IErrorWithActions;\n\t} else {\n\t\terror = messageOrError as IErrorWithActions;\n\t}\n\n\terror.actions = actions;\n\n\treturn error;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watchFile, unwatchFile, Stats } from 'fs';\nimport { Disposable, DisposableMap, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ILogMessage, IRecursiveWatcherWithSubscribe, IUniversalWatchRequest, IWatchRequestWithCorrelation, IWatcher, IWatcherErrorEvent, isWatchRequestWithCorrelation, requestFilterToString } from '../../common/watcher.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { FileChangeType, IFileChange } from '../../common/files.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DeferredPromise, ThrottledDelayer } from '../../../../base/common/async.js';\nimport { hash } from '../../../../base/common/hash.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\n\ninterface ISuspendedWatchRequest {\n\treadonly id: number;\n\treadonly correlationId: number | undefined;\n\treadonly path: string;\n}\n\nexport abstract class BaseWatcher extends Disposable implements IWatcher {\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprotected readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = this._onDidLogMessage.event;\n\n\tprotected readonly _onDidWatchFail = this._register(new Emitter<IUniversalWatchRequest>());\n\tprivate readonly onDidWatchFail = this._onDidWatchFail.event;\n\n\tprivate readonly correlatedWatchRequests = new Map<number /* request ID */, IWatchRequestWithCorrelation>();\n\tprivate readonly nonCorrelatedWatchRequests = new Map<number /* request ID */, IUniversalWatchRequest>();\n\n\tprivate readonly suspendedWatchRequests = this._register(new DisposableMap<number /* request ID */>());\n\tprivate readonly suspendedWatchRequestsWithPolling = new Set<number /* request ID */>();\n\n\tprivate readonly updateWatchersDelayer = this._register(new ThrottledDelayer<void>(this.getUpdateWatchersDelay()));\n\n\tprotected readonly suspendedWatchRequestPollingInterval: number = 5007; // node.js default\n\n\tprivate joinWatch = new DeferredPromise<void>();\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.onDidWatchFail(request => this.suspendWatchRequest({\n\t\t\tid: this.computeId(request),\n\t\t\tcorrelationId: this.isCorrelated(request) ? request.correlationId : undefined,\n\t\t\tpath: request.path\n\t\t})));\n\t}\n\n\tprotected isCorrelated(request: IUniversalWatchRequest): request is IWatchRequestWithCorrelation {\n\t\treturn isWatchRequestWithCorrelation(request);\n\t}\n\n\tprivate computeId(request: IUniversalWatchRequest): number {\n\t\tif (this.isCorrelated(request)) {\n\t\t\treturn request.correlationId;\n\t\t} else {\n\t\t\t// Requests without correlation do not carry any unique identifier, so we have to\n\t\t\t// come up with one based on the options of the request. This matches what the\n\t\t\t// file service does (vs/platform/files/common/fileService.ts#L1178).\n\t\t\treturn hash(request);\n\t\t}\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tif (!this.joinWatch.isSettled) {\n\t\t\tthis.joinWatch.complete();\n\t\t}\n\t\tthis.joinWatch = new DeferredPromise<void>();\n\n\t\ttry {\n\t\t\tthis.correlatedWatchRequests.clear();\n\t\t\tthis.nonCorrelatedWatchRequests.clear();\n\n\t\t\t// Figure out correlated vs. non-correlated requests\n\t\t\tfor (const request of requests) {\n\t\t\t\tif (this.isCorrelated(request)) {\n\t\t\t\t\tthis.correlatedWatchRequests.set(request.correlationId, request);\n\t\t\t\t} else {\n\t\t\t\t\tthis.nonCorrelatedWatchRequests.set(this.computeId(request), request);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove all suspended watch requests that are no longer watched\n\t\t\tfor (const [id] of this.suspendedWatchRequests) {\n\t\t\t\tif (!this.nonCorrelatedWatchRequests.has(id) && !this.correlatedWatchRequests.has(id)) {\n\t\t\t\t\tthis.suspendedWatchRequests.deleteAndDispose(id);\n\t\t\t\t\tthis.suspendedWatchRequestsWithPolling.delete(id);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await this.updateWatchers(false /* not delayed */);\n\t\t} finally {\n\t\t\tthis.joinWatch.complete();\n\t\t}\n\t}\n\n\tprivate updateWatchers(delayed: boolean): Promise<void> {\n\t\tconst nonSuspendedRequests: IUniversalWatchRequest[] = [];\n\t\tfor (const [id, request] of [...this.nonCorrelatedWatchRequests, ...this.correlatedWatchRequests]) {\n\t\t\tif (!this.suspendedWatchRequests.has(id)) {\n\t\t\t\tnonSuspendedRequests.push(request);\n\t\t\t}\n\t\t}\n\n\t\treturn this.updateWatchersDelayer.trigger(() => this.doWatch(nonSuspendedRequests), delayed ? this.getUpdateWatchersDelay() : 0).catch(error => onUnexpectedError(error));\n\t}\n\n\tprotected getUpdateWatchersDelay(): number {\n\t\treturn 800;\n\t}\n\n\tisSuspended(request: IUniversalWatchRequest): 'polling' | boolean {\n\t\tconst id = this.computeId(request);\n\t\treturn this.suspendedWatchRequestsWithPolling.has(id) ? 'polling' : this.suspendedWatchRequests.has(id);\n\t}\n\n\tprivate async suspendWatchRequest(request: ISuspendedWatchRequest): Promise<void> {\n\t\tif (this.suspendedWatchRequests.has(request.id)) {\n\t\t\treturn; // already suspended\n\t\t}\n\n\t\tconst disposables = new DisposableStore();\n\t\tthis.suspendedWatchRequests.set(request.id, disposables);\n\n\t\t// It is possible that a watch request fails right during watch()\n\t\t// phase while other requests succeed. To increase the chance of\n\t\t// reusing another watcher for suspend/resume tracking, we await\n\t\t// all watch requests having processed.\n\n\t\tawait this.joinWatch.p;\n\n\t\tif (disposables.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.monitorSuspendedWatchRequest(request, disposables);\n\n\t\tthis.updateWatchers(true /* delay this call as we might accumulate many failing watch requests on startup */);\n\t}\n\n\tprivate resumeWatchRequest(request: ISuspendedWatchRequest): void {\n\t\tthis.suspendedWatchRequests.deleteAndDispose(request.id);\n\t\tthis.suspendedWatchRequestsWithPolling.delete(request.id);\n\n\t\tthis.updateWatchers(false);\n\t}\n\n\tprivate monitorSuspendedWatchRequest(request: ISuspendedWatchRequest, disposables: DisposableStore): void {\n\t\tif (this.doMonitorWithExistingWatcher(request, disposables)) {\n\t\t\tthis.trace(`reusing an existing recursive watcher to monitor ${request.path}`);\n\t\t\tthis.suspendedWatchRequestsWithPolling.delete(request.id);\n\t\t} else {\n\t\t\tthis.doMonitorWithNodeJS(request, disposables);\n\t\t\tthis.suspendedWatchRequestsWithPolling.add(request.id);\n\t\t}\n\t}\n\n\tprivate doMonitorWithExistingWatcher(request: ISuspendedWatchRequest, disposables: DisposableStore): boolean {\n\t\tconst subscription = this.recursiveWatcher?.subscribe(request.path, (error, change) => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // return early if already disposed\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tthis.monitorSuspendedWatchRequest(request, disposables);\n\t\t\t} else if (change?.type === FileChangeType.ADDED) {\n\t\t\t\tthis.onMonitoredPathAdded(request);\n\t\t\t}\n\t\t});\n\n\t\tif (subscription) {\n\t\t\tdisposables.add(subscription);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate doMonitorWithNodeJS(request: ISuspendedWatchRequest, disposables: DisposableStore): void {\n\t\tlet pathNotFound = false;\n\n\t\tconst watchFileCallback: (curr: Stats, prev: Stats) => void = (curr, prev) => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // return early if already disposed\n\t\t\t}\n\n\t\t\tconst currentPathNotFound = this.isPathNotFound(curr);\n\t\t\tconst previousPathNotFound = this.isPathNotFound(prev);\n\t\t\tconst oldPathNotFound = pathNotFound;\n\t\t\tpathNotFound = currentPathNotFound;\n\n\t\t\t// Watch path created: resume watching request\n\t\t\tif (!currentPathNotFound && (previousPathNotFound || oldPathNotFound)) {\n\t\t\t\tthis.onMonitoredPathAdded(request);\n\t\t\t}\n\t\t};\n\n\t\tthis.trace(`starting fs.watchFile() on ${request.path} (correlationId: ${request.correlationId})`);\n\t\ttry {\n\t\t\twatchFile(request.path, { persistent: false, interval: this.suspendedWatchRequestPollingInterval }, watchFileCallback);\n\t\t} catch (error) {\n\t\t\tthis.warn(`fs.watchFile() failed with error ${error} on path ${request.path} (correlationId: ${request.correlationId})`);\n\t\t}\n\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tthis.trace(`stopping fs.watchFile() on ${request.path} (correlationId: ${request.correlationId})`);\n\n\t\t\ttry {\n\t\t\t\tunwatchFile(request.path, watchFileCallback);\n\t\t\t} catch (error) {\n\t\t\t\tthis.warn(`fs.unwatchFile() failed with error ${error} on path ${request.path} (correlationId: ${request.correlationId})`);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate onMonitoredPathAdded(request: ISuspendedWatchRequest): void {\n\t\tthis.trace(`detected ${request.path} exists again, resuming watcher (correlationId: ${request.correlationId})`);\n\n\t\t// Emit as event\n\t\tconst event: IFileChange = { resource: URI.file(request.path), type: FileChangeType.ADDED, cId: request.correlationId };\n\t\tthis._onDidChangeFile.fire([event]);\n\t\tthis.traceEvent(event, request);\n\n\t\t// Resume watching\n\t\tthis.resumeWatchRequest(request);\n\t}\n\n\tprivate isPathNotFound(stats: Stats): boolean {\n\t\treturn stats.ctimeMs === 0 && stats.ino === 0;\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tthis.suspendedWatchRequests.clearAndDisposeAll();\n\t\tthis.suspendedWatchRequestsWithPolling.clear();\n\t}\n\n\tprotected traceEvent(event: IFileChange, request: IUniversalWatchRequest | ISuspendedWatchRequest): void {\n\t\tif (this.verboseLogging) {\n\t\t\tconst traceMsg = ` >> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.resource.fsPath}`;\n\t\t\tthis.traceWithCorrelation(traceMsg, request);\n\t\t}\n\t}\n\n\tprotected traceWithCorrelation(message: string, request: IUniversalWatchRequest | ISuspendedWatchRequest): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis.trace(`${message}${typeof request.correlationId === 'number' ? ` <${request.correlationId}> ` : ``}`);\n\t\t}\n\t}\n\n\tprotected requestToString(request: IUniversalWatchRequest): string {\n\t\treturn `${request.path} (excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'}, filter: ${requestFilterToString(request.filter)}, correlationId: ${typeof request.correlationId === 'number' ? request.correlationId : '<none>'})`;\n\t}\n\n\tprotected abstract doWatch(requests: IUniversalWatchRequest[]): Promise<void>;\n\n\tprotected abstract readonly recursiveWatcher: IRecursiveWatcherWithSubscribe | undefined;\n\n\tprotected abstract trace(message: string): void;\n\tprotected abstract warn(message: string): void;\n\n\tabstract onDidError: Event<IWatcherErrorEvent>;\n\n\tprotected verboseLogging = false;\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from './buffer.js';\nimport * as strings from './strings.js';\n\ntype NotSyncHashable = ArrayBufferLike | ArrayBufferView;\n\n/**\n * Return a hash value for an object.\n *\n * Note that this should not be used for binary data types. Instead,\n * prefer {@link hashAsync}.\n */\nexport function hash<T>(obj: T extends NotSyncHashable ? never : T): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\n/** Hashes the input as SHA-1, returning a hex-encoded string. */\nexport const hashAsync = (input: string | ArrayBufferView | VSBuffer) => {\n\t// Note: I would very much like to expose a streaming interface for hashing\n\t// generally, but this is not available in web crypto yet, see\n\t// https://github.com/w3c/webcrypto/issues/73\n\n\t// StringSHA1 is faster for small string input, use it since we have it:\n\tif (typeof input === 'string' && input.length < 250) {\n\t\tconst sha = new StringSHA1();\n\t\tsha.update(input);\n\t\treturn Promise.resolve(sha.digest());\n\t}\n\n\tlet buff: ArrayBufferView;\n\tif (typeof input === 'string') {\n\t\tbuff = new TextEncoder().encode(input);\n\t} else if (input instanceof VSBuffer) {\n\t\tbuff = input.buffer;\n\t} else {\n\t\tbuff = input;\n\t}\n\n\treturn crypto.subtle.digest('sha-1', buff).then(toHexString);\n};\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction toHexString(buffer: ArrayBuffer): string;\nfunction toHexString(value: number, bitsize?: number): string;\nfunction toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn (bufferOrValue >>> 0).toString(16).padStart(bitsize / 4, '0');\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n *\n * Prefer to use {@link hashAsync} in async contexts\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tthis._buff.subarray(this._buffLen).fill(0);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tthis._buff.fill(0);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { CancellationToken } from '../common/cancellation.js';\nimport { basename, dirname, join, normalize, sep } from '../common/path.js';\nimport { isLinux } from '../common/platform.js';\nimport { rtrim } from '../common/strings.js';\nimport { Promises, readdirSync } from './pfs.js';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realcase(path: string, token?: CancellationToken): Promise<string | null> {\n\tif (isLinux) {\n\t\t// This method is unsupported on OS that have case sensitive\n\t\t// file system where the same path can exist in different forms\n\t\t// (see also https://github.com/microsoft/vscode/issues/139709)\n\t\treturn path;\n\t}\n\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tif (token?.isCancellationRequested) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst entries = await Promises.readdir(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = await realcase(dir, token);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = await realcase(dir, token);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait fs.promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watch, promises } from 'fs';\nimport { RunOnceWorker, ThrottledWorker } from '../../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { isEqualOrParent } from '../../../../../base/common/extpath.js';\nimport { Disposable, DisposableStore, IDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { normalizeNFC } from '../../../../../base/common/normalization.js';\nimport { basename, dirname, join } from '../../../../../base/common/path.js';\nimport { isLinux, isMacintosh } from '../../../../../base/common/platform.js';\nimport { joinPath } from '../../../../../base/common/resources.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { realcase } from '../../../../../base/node/extpath.js';\nimport { Promises } from '../../../../../base/node/pfs.js';\nimport { FileChangeType, IFileChange } from '../../../common/files.js';\nimport { ILogMessage, coalesceEvents, INonRecursiveWatchRequest, parseWatcherPatterns, IRecursiveWatcherWithSubscribe, isFiltered, isWatchRequestWithCorrelation } from '../../../common/watcher.js';\n\nexport class NodeJSFileWatcherLibrary extends Disposable {\n\n\t// A delay in reacting to file deletes to support\n\t// atomic save operations where a tool may chose\n\t// to delete a file before creating it again for\n\t// an update.\n\tprivate static readonly FILE_DELETE_HANDLER_DELAY = 100;\n\n\t// A delay for collecting file changes from node.js\n\t// before collecting them for coalescing and emitting\n\t// Same delay as used for the recursive watcher.\n\tprivate static readonly FILE_CHANGES_HANDLER_DELAY = 75;\n\n\t// Reduce likelyhood of spam from file events via throttling.\n\t// These numbers are a bit more aggressive compared to the\n\t// recursive watcher because we can have many individual\n\t// node.js watchers per request.\n\t// (https://github.com/microsoft/vscode/issues/124723)\n\tprivate readonly throttledFileChangesEmitter = this._register(new ThrottledWorker<IFileChange>(\n\t\t{\n\t\t\tmaxWorkChunkSize: 100,\t// only process up to 100 changes at once before...\n\t\t\tthrottleDelay: 200,\t  \t// ...resting for 200ms until we process events again...\n\t\t\tmaxBufferedWork: 10000 \t// ...but never buffering more than 10000 events in memory\n\t\t},\n\t\tevents => this.onDidFilesChange(events)\n\t));\n\n\t// Aggregate file changes over FILE_CHANGES_HANDLER_DELAY\n\t// to coalesce events and reduce spam.\n\tprivate readonly fileChangesAggregator = this._register(new RunOnceWorker<IFileChange>(events => this.handleFileChanges(events), NodeJSFileWatcherLibrary.FILE_CHANGES_HANDLER_DELAY));\n\n\tprivate readonly excludes = parseWatcherPatterns(this.request.path, this.request.excludes);\n\tprivate readonly includes = this.request.includes ? parseWatcherPatterns(this.request.path, this.request.includes) : undefined;\n\tprivate readonly filter = isWatchRequestWithCorrelation(this.request) ? this.request.filter : undefined; // filtering is only enabled when correlating because watchers are otherwise potentially reused\n\n\tprivate readonly cts = new CancellationTokenSource();\n\n\treadonly ready = this.watch();\n\n\tprivate _isReusingRecursiveWatcher = false;\n\tget isReusingRecursiveWatcher(): boolean { return this._isReusingRecursiveWatcher; }\n\n\tprivate didFail = false;\n\tget failed(): boolean { return this.didFail; }\n\n\tconstructor(\n\t\tprivate readonly request: INonRecursiveWatchRequest,\n\t\tprivate readonly recursiveWatcher: IRecursiveWatcherWithSubscribe | undefined,\n\t\tprivate readonly onDidFilesChange: (changes: IFileChange[]) => void,\n\t\tprivate readonly onDidWatchFail?: () => void,\n\t\tprivate readonly onLogMessage?: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging?: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprivate async watch(): Promise<void> {\n\t\ttry {\n\t\t\tconst realPath = await this.normalizePath(this.request);\n\n\t\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stat = await promises.stat(realPath);\n\n\t\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._register(await this.doWatch(realPath, stat.isDirectory()));\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.error(error);\n\t\t\t} else {\n\t\t\t\tthis.trace(`ignoring a path for watching who's stat info failed to resolve: ${this.request.path} (error: ${error})`);\n\t\t\t}\n\n\t\t\tthis.notifyWatchFailed();\n\t\t}\n\t}\n\n\tprivate notifyWatchFailed(): void {\n\t\tthis.didFail = true;\n\n\t\tthis.onDidWatchFail?.();\n\t}\n\n\tprivate async normalizePath(request: INonRecursiveWatchRequest): Promise<string> {\n\t\tlet realPath = request.path;\n\n\t\ttry {\n\n\t\t\t// First check for symbolic link\n\t\t\trealPath = await Promises.realpath(request.path);\n\n\t\t\t// Second check for casing difference\n\t\t\t// Note: this will be a no-op on Linux platforms\n\t\t\tif (request.path === realPath) {\n\t\t\t\trealPath = await realcase(request.path, this.cts.token) ?? request.path;\n\t\t\t}\n\n\t\t\t// Correct watch path as needed\n\t\t\tif (request.path !== realPath) {\n\t\t\t\tthis.trace(`correcting a path to watch that seems to be a symbolic link or wrong casing (original: ${request.path}, real: ${realPath})`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore\n\t\t}\n\n\t\treturn realPath;\n\t}\n\n\tprivate async doWatch(realPath: string, isDirectory: boolean): Promise<IDisposable> {\n\t\tconst disposables = new DisposableStore();\n\n\t\tif (this.doWatchWithExistingWatcher(realPath, isDirectory, disposables)) {\n\t\t\tthis.trace(`reusing an existing recursive watcher for ${this.request.path}`);\n\t\t\tthis._isReusingRecursiveWatcher = true;\n\t\t} else {\n\t\t\tthis._isReusingRecursiveWatcher = false;\n\t\t\tawait this.doWatchWithNodeJS(realPath, isDirectory, disposables);\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate doWatchWithExistingWatcher(realPath: string, isDirectory: boolean, disposables: DisposableStore): boolean {\n\t\tif (isDirectory) {\n\t\t\t// TODO@bpasero recursive watcher re-use is currently not enabled\n\t\t\t// for when folders are watched. this is because the dispatching\n\t\t\t// in the recursive watcher for non-recurive requests is optimized\n\t\t\t// for file changes  where we really only match on the exact path\n\t\t\t// and not child paths.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst resource = URI.file(this.request.path);\n\t\tconst subscription = this.recursiveWatcher?.subscribe(this.request.path, async (error, change) => {\n\t\t\tif (disposables.isDisposed) {\n\t\t\t\treturn; // return early if already disposed\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tconst watchDisposable = await this.doWatch(realPath, isDirectory);\n\t\t\t\tif (!disposables.isDisposed) {\n\t\t\t\t\tdisposables.add(watchDisposable);\n\t\t\t\t} else {\n\t\t\t\t\twatchDisposable.dispose();\n\t\t\t\t}\n\t\t\t} else if (change) {\n\t\t\t\tif (typeof change.cId === 'number' || typeof this.request.correlationId === 'number') {\n\t\t\t\t\t// Re-emit this change with the correlation id of the request\n\t\t\t\t\t// so that the client can correlate the event with the request\n\t\t\t\t\t// properly. Without correlation, we do not have to do that\n\t\t\t\t\t// because the event will appear on the global listener already.\n\t\t\t\t\tthis.onFileChange({ resource, type: change.type, cId: this.request.correlationId }, true /* skip excludes/includes (file is explicitly watched) */);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (subscription) {\n\t\t\tdisposables.add(subscription);\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate async doWatchWithNodeJS(realPath: string, isDirectory: boolean, disposables: DisposableStore): Promise<void> {\n\n\t\t// macOS: watching samba shares can crash VSCode so we do\n\t\t// a simple check for the file path pointing to /Volumes\n\t\t// (https://github.com/microsoft/vscode/issues/106879)\n\t\t// TODO@electron this needs a revisit when the crash is\n\t\t// fixed or mitigated upstream.\n\t\tif (isMacintosh && isEqualOrParent(realPath, '/Volumes/', true)) {\n\t\t\tthis.error(`Refusing to watch ${realPath} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource(this.cts.token);\n\t\tdisposables.add(toDisposable(() => cts.dispose(true)));\n\n\t\tconst watcherDisposables = new DisposableStore(); // we need a separate disposable store because we re-create the watcher from within in some cases\n\t\tdisposables.add(watcherDisposables);\n\n\t\ttry {\n\t\t\tconst requestResource = URI.file(this.request.path);\n\t\t\tconst pathBasename = basename(realPath);\n\n\t\t\t// Creating watcher can fail with an exception\n\t\t\tconst watcher = watch(realPath);\n\t\t\twatcherDisposables.add(toDisposable(() => {\n\t\t\t\twatcher.removeAllListeners();\n\t\t\t\twatcher.close();\n\t\t\t}));\n\n\t\t\tthis.trace(`Started watching: '${realPath}'`);\n\n\t\t\t// Folder: resolve children to emit proper events\n\t\t\tconst folderChildren = new Set<string>();\n\t\t\tif (isDirectory) {\n\t\t\t\ttry {\n\t\t\t\t\tfor (const child of await Promises.readdir(realPath)) {\n\t\t\t\t\t\tfolderChildren.add(child);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\t\t\twatcherDisposables.add(toDisposable(() => {\n\t\t\t\tfor (const [, disposable] of mapPathToStatDisposable) {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t}\n\t\t\t\tmapPathToStatDisposable.clear();\n\t\t\t}));\n\n\t\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.error(`Failed to watch ${realPath} for changes using fs.watch() (${code}, ${signal})`);\n\n\t\t\t\tthis.notifyWatchFailed();\n\t\t\t});\n\n\t\t\twatcher.on('change', (type, raw) => {\n\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\treturn; // ignore if already disposed\n\t\t\t\t}\n\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.traceWithCorrelation(`[raw] [\"${type}\"] ${raw}`);\n\t\t\t\t}\n\n\t\t\t\t// Normalize file name\n\t\t\t\tlet changedFileName = '';\n\t\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\t\treturn; // ignore unexpected events\n\t\t\t\t}\n\n\t\t\t\t// Folder\n\t\t\t\tif (isDirectory) {\n\n\t\t\t\t\t// Folder child added/deleted\n\t\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t\t// Cancel any previous stats for this file if existing\n\t\t\t\t\t\tmapPathToStatDisposable.get(changedFileName)?.dispose();\n\n\t\t\t\t\t\t// Wait a bit and try see if the file still exists on disk\n\t\t\t\t\t\t// to decide on the resulting event\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFileName);\n\n\t\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t\t// folder path is being deleted:\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// -   macOS: not reported but events continue to\n\t\t\t\t\t\t\t//            work even when the folder is brought\n\t\t\t\t\t\t\t//            back, though it seems every change\n\t\t\t\t\t\t\t//            to a file is reported as \"rename\"\n\t\t\t\t\t\t\t// -   Linux: \"rename\" event is reported with the\n\t\t\t\t\t\t\t//            name of the folder and events stop\n\t\t\t\t\t\t\t//            working\n\t\t\t\t\t\t\t// - Windows: an EPERM error is thrown that we\n\t\t\t\t\t\t\t//            handle from the `on('error')` event\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// We do not re-attach the watcher after timeout\n\t\t\t\t\t\t\t// though as we do for file watches because for\n\t\t\t\t\t\t\t// file watching specifically we want to handle\n\t\t\t\t\t\t\t// the atomic-write cases where the file is being\n\t\t\t\t\t\t\t// deleted and recreated with different contents.\n\t\t\t\t\t\t\tif (changedFileName === pathBasename && !await Promises.exists(realPath)) {\n\t\t\t\t\t\t\t\tthis.onWatchedPathDeleted(requestResource);\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// In order to properly detect renames on a case-insensitive\n\t\t\t\t\t\t\t// file system, we need to use `existsChildStrictCase` helper\n\t\t\t\t\t\t\t// because otherwise we would wrongly assume a file exists\n\t\t\t\t\t\t\t// when it was renamed to same name but different case.\n\t\t\t\t\t\t\tconst fileExists = await this.existsChildStrictCase(join(realPath, changedFileName));\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t\t// File Exists: either 'added' or 'updated' if known before\n\t\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\t\ttype = FileChangeType.DELETED;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.onFileChange({ resource: joinPath(requestResource, changedFileName), type, cId: this.request.correlationId });\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\tmapPathToStatDisposable.set(changedFileName, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Folder child changed\n\t\t\t\t\telse {\n\n\t\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\t\tlet type: FileChangeType;\n\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\ttype = FileChangeType.UPDATED;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttype = FileChangeType.ADDED;\n\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.onFileChange({ resource: joinPath(requestResource, changedFileName), type, cId: this.request.correlationId });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// File\n\t\t\t\telse {\n\n\t\t\t\t\t// File added/deleted\n\t\t\t\t\tif (type === 'rename' || changedFileName !== pathBasename) {\n\n\t\t\t\t\t\t// Depending on the OS the watcher runs on, there\n\t\t\t\t\t\t// is different behaviour for when the watched\n\t\t\t\t\t\t// file path is being deleted:\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// -   macOS: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// -   Linux: \"rename\" event is reported and events\n\t\t\t\t\t\t//            stop working\n\t\t\t\t\t\t// - Windows: \"rename\" event is reported and events\n\t\t\t\t\t\t//            continue to work when file is restored\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// As opposed to folder watching, we re-attach the\n\t\t\t\t\t\t// watcher after brief timeout to support \"atomic save\"\n\t\t\t\t\t\t// operations where a tool may decide to delete a file\n\t\t\t\t\t\t// and then create it with the updated contents.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Different to folder watching, we emit a delete event\n\t\t\t\t\t\t// though we never detect when the file is brought back\n\t\t\t\t\t\t// because the watcher is disposed then.\n\n\t\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\t\tconst fileExists = await Promises.exists(realPath);\n\n\t\t\t\t\t\t\tif (cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\tthis.onFileChange({ resource: requestResource, type: FileChangeType.UPDATED, cId: this.request.correlationId }, true /* skip excludes/includes (file is explicitly watched) */);\n\n\t\t\t\t\t\t\t\twatcherDisposables.add(await this.doWatch(realPath, false));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// File seems to be really gone, so emit a deleted and failed event\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.onWatchedPathDeleted(requestResource);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, NodeJSFileWatcherLibrary.FILE_DELETE_HANDLER_DELAY);\n\n\t\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\t\twatcherDisposables.clear();\n\t\t\t\t\t\twatcherDisposables.add(toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t\t}\n\n\t\t\t\t\t// File changed\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.onFileChange({ resource: requestResource, type: FileChangeType.UPDATED, cId: this.request.correlationId }, true /* skip excludes/includes (file is explicitly watched) */);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (!cts.token.isCancellationRequested) {\n\t\t\t\tthis.error(`Failed to watch ${realPath} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\n\t\t\tthis.notifyWatchFailed();\n\t\t}\n\t}\n\n\tprivate onWatchedPathDeleted(resource: URI): void {\n\t\tthis.warn('Watcher shutdown because watched path got deleted');\n\n\t\t// Emit events and flush in case the watcher gets disposed\n\t\tthis.onFileChange({ resource, type: FileChangeType.DELETED, cId: this.request.correlationId }, true /* skip excludes/includes (file is explicitly watched) */);\n\t\tthis.fileChangesAggregator.flush();\n\n\t\tthis.notifyWatchFailed();\n\t}\n\n\tprivate onFileChange(event: IFileChange, skipIncludeExcludeChecks = false): void {\n\t\tif (this.cts.token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.traceWithCorrelation(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.resource.fsPath}`);\n\t\t}\n\n\t\t// Add to aggregator unless excluded or not included (not if explicitly disabled)\n\t\tif (!skipIncludeExcludeChecks && this.excludes.some(exclude => exclude(event.resource.fsPath))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.traceWithCorrelation(` >> ignored (excluded) ${event.resource.fsPath}`);\n\t\t\t}\n\t\t} else if (!skipIncludeExcludeChecks && this.includes && this.includes.length > 0 && !this.includes.some(include => include(event.resource.fsPath))) {\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tthis.traceWithCorrelation(` >> ignored (not included) ${event.resource.fsPath}`);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.fileChangesAggregator.work(event);\n\t\t}\n\t}\n\n\tprivate handleFileChanges(fileChanges: IFileChange[]): void {\n\n\t\t// Coalesce events: merge events of same kind\n\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t// Filter events: based on request filter property\n\t\tconst filteredEvents: IFileChange[] = [];\n\t\tfor (const event of coalescedFileChanges) {\n\t\t\tif (isFiltered(event, this.filter)) {\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tthis.traceWithCorrelation(` >> ignored (filtered) ${event.resource.fsPath}`);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfilteredEvents.push(event);\n\t\t}\n\n\t\tif (filteredEvents.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tfor (const event of filteredEvents) {\n\t\t\t\tthis.traceWithCorrelation(` >> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.resource.fsPath}`);\n\t\t\t}\n\t\t}\n\n\t\t// Broadcast to clients via throttled emitter\n\t\tconst worked = this.throttledFileChangesEmitter.work(filteredEvents);\n\n\t\t// Logging\n\t\tif (!worked) {\n\t\t\tthis.warn(`started ignoring events due to too many file change events at once (incoming: ${filteredEvents.length}, most recent change: ${filteredEvents[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t} else {\n\t\t\tif (this.throttledFileChangesEmitter.pending > 0) {\n\t\t\t\tthis.trace(`started throttling events due to large amount of file change events at once (pending: ${this.throttledFileChangesEmitter.pending}, most recent change: ${filteredEvents[0].resource.fsPath}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async existsChildStrictCase(path: string): Promise<boolean> {\n\t\tif (isLinux) {\n\t\t\treturn Promises.exists(path);\n\t\t}\n\n\t\ttry {\n\t\t\tconst pathBasename = basename(path);\n\t\t\tconst children = await Promises.readdir(dirname(path));\n\n\t\t\treturn children.some(child => child === pathBasename);\n\t\t} catch (error) {\n\t\t\tthis.trace(error);\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate error(error: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate warn(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested) {\n\t\t\tthis.onLogMessage?.({ type: 'warn', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tprivate trace(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested && this.verboseLogging) {\n\t\t\tthis.onLogMessage?.({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tprivate traceWithCorrelation(message: string): void {\n\t\tif (!this.cts.token.isCancellationRequested && this.verboseLogging) {\n\t\t\tthis.trace(`${message}${typeof this.request.correlationId === 'number' ? ` <${this.request.correlationId}> ` : ``}`);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.cts.dispose(true);\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * Watch the provided `path` for changes and return\n * the data in chunks of `Uint8Array` for further use.\n */\nexport async function watchFileContents(path: string, onData: (chunk: Uint8Array) => void, onReady: () => void, token: CancellationToken, bufferSize = 512): Promise<void> {\n\tconst handle = await Promises.open(path, 'r');\n\tconst buffer = Buffer.allocUnsafe(bufferSize);\n\n\tconst cts = new CancellationTokenSource(token);\n\n\tlet error: Error | undefined = undefined;\n\tlet isReading = false;\n\n\tconst request: INonRecursiveWatchRequest = { path, excludes: [], recursive: false };\n\tconst watcher = new NodeJSFileWatcherLibrary(request, undefined, changes => {\n\t\t(async () => {\n\t\t\tfor (const { type } of changes) {\n\t\t\t\tif (type === FileChangeType.UPDATED) {\n\n\t\t\t\t\tif (isReading) {\n\t\t\t\t\t\treturn; // return early if we are already reading the output\n\t\t\t\t\t}\n\n\t\t\t\t\tisReading = true;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Consume the new contents of the file until finished\n\t\t\t\t\t\t// everytime there is a change event signalling a change\n\t\t\t\t\t\twhile (!cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\tconst { bytesRead } = await Promises.read(handle, buffer, 0, bufferSize, null);\n\t\t\t\t\t\t\tif (!bytesRead || cts.token.isCancellationRequested) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tonData(buffer.slice(0, bytesRead));\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\terror = new Error(err);\n\t\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tisReading = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n\n\tawait watcher.ready;\n\tonReady();\n\n\treturn new Promise<void>((resolve, reject) => {\n\t\tcts.token.onCancellationRequested(async () => {\n\t\t\twatcher.dispose();\n\n\t\t\ttry {\n\t\t\t\tawait Promises.close(handle);\n\t\t\t} catch (err) {\n\t\t\t\terror = new Error(err);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../../../base/common/event.js';\nimport { patternsEquals } from '../../../../../base/common/glob.js';\nimport { BaseWatcher } from '../baseWatcher.js';\nimport { isLinux } from '../../../../../base/common/platform.js';\nimport { INonRecursiveWatchRequest, INonRecursiveWatcher, IRecursiveWatcherWithSubscribe } from '../../../common/watcher.js';\nimport { NodeJSFileWatcherLibrary } from './nodejsWatcherLib.js';\nimport { isEqual } from '../../../../../base/common/extpath.js';\n\nexport interface INodeJSWatcherInstance {\n\n\t/**\n\t * The watcher instance.\n\t */\n\treadonly instance: NodeJSFileWatcherLibrary;\n\n\t/**\n\t * The watch request associated to the watcher.\n\t */\n\treadonly request: INonRecursiveWatchRequest;\n}\n\nexport class NodeJSWatcher extends BaseWatcher implements INonRecursiveWatcher {\n\n\treadonly onDidError = Event.None;\n\n\treadonly watchers = new Set<INodeJSWatcherInstance>();\n\n\tconstructor(protected readonly recursiveWatcher: IRecursiveWatcherWithSubscribe | undefined) {\n\t\tsuper();\n\t}\n\n\tprotected override async doWatch(requests: INonRecursiveWatchRequest[]): Promise<void> {\n\n\t\t// Figure out duplicates to remove from the requests\n\t\trequests = this.removeDuplicateRequests(requests);\n\n\t\t// Figure out which watchers to start and which to stop\n\t\tconst requestsToStart: INonRecursiveWatchRequest[] = [];\n\t\tconst watchersToStop = new Set(Array.from(this.watchers));\n\t\tfor (const request of requests) {\n\t\t\tconst watcher = this.findWatcher(request);\n\t\t\tif (watcher && patternsEquals(watcher.request.excludes, request.excludes) && patternsEquals(watcher.request.includes, request.includes)) {\n\t\t\t\twatchersToStop.delete(watcher); // keep watcher\n\t\t\t} else {\n\t\t\t\trequestsToStart.push(request); // start watching\n\t\t\t}\n\t\t}\n\n\t\t// Logging\n\n\t\tif (requestsToStart.length) {\n\t\t\tthis.trace(`Request to start watching: ${requestsToStart.map(request => this.requestToString(request)).join(',')}`);\n\t\t}\n\n\t\tif (watchersToStop.size) {\n\t\t\tthis.trace(`Request to stop watching: ${Array.from(watchersToStop).map(watcher => this.requestToString(watcher.request)).join(',')}`);\n\t\t}\n\n\t\t// Stop watching as instructed\n\t\tfor (const watcher of watchersToStop) {\n\t\t\tthis.stopWatching(watcher);\n\t\t}\n\n\t\t// Start watching as instructed\n\t\tfor (const request of requestsToStart) {\n\t\t\tthis.startWatching(request);\n\t\t}\n\t}\n\n\tprivate findWatcher(request: INonRecursiveWatchRequest): INodeJSWatcherInstance | undefined {\n\t\tfor (const watcher of this.watchers) {\n\n\t\t\t// Requests or watchers with correlation always match on that\n\t\t\tif (typeof request.correlationId === 'number' || typeof watcher.request.correlationId === 'number') {\n\t\t\t\tif (watcher.request.correlationId === request.correlationId) {\n\t\t\t\t\treturn watcher;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Non-correlated requests or watchers match on path\n\t\t\telse {\n\t\t\t\tif (isEqual(watcher.request.path, request.path, !isLinux /* ignorecase */)) {\n\t\t\t\t\treturn watcher;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate startWatching(request: INonRecursiveWatchRequest): void {\n\n\t\t// Start via node.js lib\n\t\tconst instance = new NodeJSFileWatcherLibrary(request, this.recursiveWatcher, changes => this._onDidChangeFile.fire(changes), () => this._onDidWatchFail.fire(request), msg => this._onDidLogMessage.fire(msg), this.verboseLogging);\n\n\t\t// Remember as watcher instance\n\t\tconst watcher: INodeJSWatcherInstance = { request, instance };\n\t\tthis.watchers.add(watcher);\n\t}\n\n\toverride async stop(): Promise<void> {\n\t\tawait super.stop();\n\n\t\tfor (const watcher of this.watchers) {\n\t\t\tthis.stopWatching(watcher);\n\t\t}\n\t}\n\n\tprivate stopWatching(watcher: INodeJSWatcherInstance): void {\n\t\tthis.trace(`stopping file watcher`, watcher);\n\n\t\tthis.watchers.delete(watcher);\n\n\t\twatcher.instance.dispose();\n\t}\n\n\tprivate removeDuplicateRequests(requests: INonRecursiveWatchRequest[]): INonRecursiveWatchRequest[] {\n\t\tconst mapCorrelationtoRequests = new Map<number | undefined /* correlation */, Map<string, INonRecursiveWatchRequest>>();\n\n\t\t// Ignore requests for the same paths that have the same correlation\n\t\tfor (const request of requests) {\n\t\t\tconst path = isLinux ? request.path : request.path.toLowerCase(); // adjust for case sensitivity\n\n\t\t\tlet requestsForCorrelation = mapCorrelationtoRequests.get(request.correlationId);\n\t\t\tif (!requestsForCorrelation) {\n\t\t\t\trequestsForCorrelation = new Map<string, INonRecursiveWatchRequest>();\n\t\t\t\tmapCorrelationtoRequests.set(request.correlationId, requestsForCorrelation);\n\t\t\t}\n\n\t\t\tif (requestsForCorrelation.has(path)) {\n\t\t\t\tthis.trace(`ignoring a request for watching who's path is already watched: ${this.requestToString(request)}`);\n\t\t\t}\n\n\t\t\trequestsForCorrelation.set(path, request);\n\t\t}\n\n\t\treturn Array.from(mapCorrelationtoRequests.values()).map(requests => Array.from(requests.values())).flat();\n\t}\n\n\toverride async setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tsuper.setVerboseLogging(enabled);\n\n\t\tfor (const watcher of this.watchers) {\n\t\t\twatcher.instance.setVerboseLogging(enabled);\n\t\t}\n\t}\n\n\tprotected trace(message: string, watcher?: INodeJSWatcherInstance): void {\n\t\tif (this.verboseLogging) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: this.toMessage(message, watcher) });\n\t\t}\n\t}\n\n\tprotected warn(message: string): void {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: this.toMessage(message) });\n\t}\n\n\tprivate toMessage(message: string, watcher?: INodeJSWatcherInstance): string {\n\t\treturn watcher ? `[File Watcher (node.js)] ${message} (${this.requestToString(watcher.request)})` : `[File Watcher (node.js)] ${message}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INonRecursiveWatchRequest, IRecursiveWatchRequest, isRecursiveWatchRequest, IUniversalWatchRequest, requestFilterToString } from '../../common/watcher.js';\nimport { INodeJSWatcherInstance, NodeJSWatcher } from './nodejs/nodejsWatcher.js';\nimport { ParcelWatcher, ParcelWatcherInstance } from './parcel/parcelWatcher.js';\n\nexport function computeStats(\n\trequests: IUniversalWatchRequest[],\n\tfailedRecursiveRequests: number,\n\trecursiveWatcher: ParcelWatcher,\n\tnonRecursiveWatcher: NodeJSWatcher\n): string {\n\tconst lines: string[] = [];\n\n\tconst allRecursiveRequests = sortByPathPrefix(requests.filter(request => isRecursiveWatchRequest(request)));\n\tconst nonSuspendedRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === false);\n\tconst suspendedPollingRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === 'polling');\n\tconst suspendedNonPollingRecursiveRequests = allRecursiveRequests.filter(request => recursiveWatcher.isSuspended(request) === true);\n\n\tconst recursiveRequestsStatus = computeRequestStatus(allRecursiveRequests, recursiveWatcher);\n\tconst recursiveWatcherStatus = computeRecursiveWatchStatus(recursiveWatcher);\n\n\tconst allNonRecursiveRequests = sortByPathPrefix(requests.filter(request => !isRecursiveWatchRequest(request)));\n\tconst nonSuspendedNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === false);\n\tconst suspendedPollingNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === 'polling');\n\tconst suspendedNonPollingNonRecursiveRequests = allNonRecursiveRequests.filter(request => nonRecursiveWatcher.isSuspended(request) === true);\n\n\tconst nonRecursiveRequestsStatus = computeRequestStatus(allNonRecursiveRequests, nonRecursiveWatcher);\n\tconst nonRecursiveWatcherStatus = computeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\n\tlines.push('[Summary]');\n\tlines.push(`- Recursive Requests:     total: ${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling}, failed: ${failedRecursiveRequests}`);\n\tlines.push(`- Non-Recursive Requests: total: ${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling}`);\n\tlines.push(`- Recursive Watchers:     total: ${recursiveWatcher.watchers.size}, active: ${recursiveWatcherStatus.active}, failed: ${recursiveWatcherStatus.failed}, stopped: ${recursiveWatcherStatus.stopped}`);\n\tlines.push(`- Non-Recursive Watchers: total: ${nonRecursiveWatcher.watchers.size}, active: ${nonRecursiveWatcherStatus.active}, failed: ${nonRecursiveWatcherStatus.failed}, reusing: ${nonRecursiveWatcherStatus.reusing}`);\n\tlines.push(`- I/O Handles Impact:     total: ${recursiveRequestsStatus.polling + nonRecursiveRequestsStatus.polling + recursiveWatcherStatus.active + nonRecursiveWatcherStatus.active}`);\n\n\tlines.push(`\\n[Recursive Requests (${allRecursiveRequests.length}, suspended: ${recursiveRequestsStatus.suspended}, polling: ${recursiveRequestsStatus.polling})]:`);\n\tconst recursiveRequestLines: string[] = [];\n\tfor (const request of [nonSuspendedRecursiveRequests, suspendedPollingRecursiveRequests, suspendedNonPollingRecursiveRequests].flat()) {\n\t\tfillRequestStats(recursiveRequestLines, request, recursiveWatcher);\n\t}\n\tlines.push(...alignTextColumns(recursiveRequestLines));\n\n\tconst recursiveWatcheLines: string[] = [];\n\tfillRecursiveWatcherStats(recursiveWatcheLines, recursiveWatcher);\n\tlines.push(...alignTextColumns(recursiveWatcheLines));\n\n\tlines.push(`\\n[Non-Recursive Requests (${allNonRecursiveRequests.length}, suspended: ${nonRecursiveRequestsStatus.suspended}, polling: ${nonRecursiveRequestsStatus.polling})]:`);\n\tconst nonRecursiveRequestLines: string[] = [];\n\tfor (const request of [nonSuspendedNonRecursiveRequests, suspendedPollingNonRecursiveRequests, suspendedNonPollingNonRecursiveRequests].flat()) {\n\t\tfillRequestStats(nonRecursiveRequestLines, request, nonRecursiveWatcher);\n\t}\n\tlines.push(...alignTextColumns(nonRecursiveRequestLines));\n\n\tconst nonRecursiveWatcheLines: string[] = [];\n\tfillNonRecursiveWatcherStats(nonRecursiveWatcheLines, nonRecursiveWatcher);\n\tlines.push(...alignTextColumns(nonRecursiveWatcheLines));\n\n\treturn `\\n\\n[File Watcher] request stats:\\n\\n${lines.join('\\n')}\\n\\n`;\n}\n\nfunction alignTextColumns(lines: string[]) {\n\tlet maxLength = 0;\n\tfor (const line of lines) {\n\t\tmaxLength = Math.max(maxLength, line.split('\\t')[0].length);\n\t}\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst line = lines[i];\n\t\tconst parts = line.split('\\t');\n\t\tif (parts.length === 2) {\n\t\t\tconst padding = ' '.repeat(maxLength - parts[0].length);\n\t\t\tlines[i] = `${parts[0]}${padding}\\t${parts[1]}`;\n\t\t}\n\t}\n\n\treturn lines;\n}\n\nfunction computeRequestStatus(requests: IUniversalWatchRequest[], watcher: ParcelWatcher | NodeJSWatcher): { suspended: number; polling: number } {\n\tlet polling = 0;\n\tlet suspended = 0;\n\n\tfor (const request of requests) {\n\t\tconst isSuspended = watcher.isSuspended(request);\n\t\tif (isSuspended === false) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsuspended++;\n\n\t\tif (isSuspended === 'polling') {\n\t\t\tpolling++;\n\t\t}\n\t}\n\n\treturn { suspended, polling };\n}\n\nfunction computeRecursiveWatchStatus(recursiveWatcher: ParcelWatcher): { active: number; failed: number; stopped: number } {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet stopped = 0;\n\n\tfor (const watcher of recursiveWatcher.watchers.values()) {\n\t\tif (!watcher.failed && !watcher.stopped) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tstopped++;\n\t\t}\n\t}\n\n\treturn { active, failed, stopped };\n}\n\nfunction computeNonRecursiveWatchStatus(nonRecursiveWatcher: NodeJSWatcher): { active: number; failed: number; reusing: number } {\n\tlet active = 0;\n\tlet failed = 0;\n\tlet reusing = 0;\n\n\tfor (const watcher of nonRecursiveWatcher.watchers) {\n\t\tif (!watcher.instance.failed && !watcher.instance.isReusingRecursiveWatcher) {\n\t\t\tactive++;\n\t\t}\n\t\tif (watcher.instance.failed) {\n\t\t\tfailed++;\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\treusing++;\n\t\t}\n\t}\n\n\treturn { active, failed, reusing };\n}\n\nfunction sortByPathPrefix(requests: IRecursiveWatchRequest[]): IRecursiveWatchRequest[];\nfunction sortByPathPrefix(requests: INonRecursiveWatchRequest[]): INonRecursiveWatchRequest[];\nfunction sortByPathPrefix(requests: IUniversalWatchRequest[]): IUniversalWatchRequest[];\nfunction sortByPathPrefix(requests: INodeJSWatcherInstance[]): INodeJSWatcherInstance[];\nfunction sortByPathPrefix(requests: ParcelWatcherInstance[]): ParcelWatcherInstance[];\nfunction sortByPathPrefix(requests: IUniversalWatchRequest[] | INodeJSWatcherInstance[] | ParcelWatcherInstance[]): IUniversalWatchRequest[] | INodeJSWatcherInstance[] | ParcelWatcherInstance[] {\n\trequests.sort((r1, r2) => {\n\t\tconst p1 = isUniversalWatchRequest(r1) ? r1.path : r1.request.path;\n\t\tconst p2 = isUniversalWatchRequest(r2) ? r2.path : r2.request.path;\n\n\t\tconst minLength = Math.min(p1.length, p2.length);\n\t\tfor (let i = 0; i < minLength; i++) {\n\t\t\tif (p1[i] !== p2[i]) {\n\t\t\t\treturn (p1[i] < p2[i]) ? -1 : 1;\n\t\t\t}\n\t\t}\n\n\t\treturn p1.length - p2.length;\n\t});\n\n\treturn requests;\n}\n\nfunction isUniversalWatchRequest(obj: unknown): obj is IUniversalWatchRequest {\n\tconst candidate = obj as IUniversalWatchRequest | undefined;\n\n\treturn typeof candidate?.path === 'string';\n}\n\nfunction fillRequestStats(lines: string[], request: IUniversalWatchRequest, watcher: ParcelWatcher | NodeJSWatcher): void {\n\tconst decorations = [];\n\tconst suspended = watcher.isSuspended(request);\n\tif (suspended !== false) {\n\t\tif (suspended === 'polling') {\n\t\t\tdecorations.push('[SUSPENDED <polling>]');\n\t\t} else {\n\t\t\tdecorations.push('[SUSPENDED <non-polling>]');\n\t\t}\n\t}\n\n\tlines.push(` ${request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(request)})`);\n}\n\nfunction requestDetailsToString(request: IUniversalWatchRequest): string {\n\treturn `excludes: ${request.excludes.length > 0 ? request.excludes : '<none>'}, includes: ${request.includes && request.includes.length > 0 ? JSON.stringify(request.includes) : '<all>'}, filter: ${requestFilterToString(request.filter)}, correlationId: ${typeof request.correlationId === 'number' ? request.correlationId : '<none>'}`;\n}\n\nfunction fillRecursiveWatcherStats(lines: string[], recursiveWatcher: ParcelWatcher): void {\n\tconst watchers = sortByPathPrefix(Array.from(recursiveWatcher.watchers.values()));\n\n\tconst { active, failed, stopped } = computeRecursiveWatchStatus(recursiveWatcher);\n\tlines.push(`\\n[Recursive Watchers (${watchers.length}, active: ${active}, failed: ${failed}, stopped: ${stopped})]:`);\n\n\tfor (const watcher of watchers) {\n\t\tconst decorations = [];\n\t\tif (watcher.failed) {\n\t\t\tdecorations.push('[FAILED]');\n\t\t}\n\t\tif (watcher.stopped) {\n\t\t\tdecorations.push('[STOPPED]');\n\t\t}\n\t\tif (watcher.subscriptionsCount > 0) {\n\t\t\tdecorations.push(`[SUBSCRIBED:${watcher.subscriptionsCount}]`);\n\t\t}\n\t\tif (watcher.restarts > 0) {\n\t\t\tdecorations.push(`[RESTARTED:${watcher.restarts}]`);\n\t\t}\n\t\tlines.push(` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(watcher.request)})`);\n\t}\n}\n\nfunction fillNonRecursiveWatcherStats(lines: string[], nonRecursiveWatcher: NodeJSWatcher): void {\n\tconst allWatchers = sortByPathPrefix(Array.from(nonRecursiveWatcher.watchers.values()));\n\tconst activeWatchers = allWatchers.filter(watcher => !watcher.instance.failed && !watcher.instance.isReusingRecursiveWatcher);\n\tconst failedWatchers = allWatchers.filter(watcher => watcher.instance.failed);\n\tconst reusingWatchers = allWatchers.filter(watcher => watcher.instance.isReusingRecursiveWatcher);\n\n\tconst { active, failed, reusing } = computeNonRecursiveWatchStatus(nonRecursiveWatcher);\n\tlines.push(`\\n[Non-Recursive Watchers (${allWatchers.length}, active: ${active}, failed: ${failed}, reusing: ${reusing})]:`);\n\n\tfor (const watcher of [activeWatchers, failedWatchers, reusingWatchers].flat()) {\n\t\tconst decorations = [];\n\t\tif (watcher.instance.failed) {\n\t\t\tdecorations.push('[FAILED]');\n\t\t}\n\t\tif (watcher.instance.isReusingRecursiveWatcher) {\n\t\t\tdecorations.push('[REUSING]');\n\t\t}\n\t\tlines.push(` ${watcher.request.path}\\t${decorations.length > 0 ? decorations.join(' ') + ' ' : ''}(${requestDetailsToString(watcher.request)})`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { ILogMessage, isRecursiveWatchRequest, IUniversalWatcher, IUniversalWatchRequest } from '../../common/watcher.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { ParcelWatcher } from './parcel/parcelWatcher.js';\nimport { NodeJSWatcher } from './nodejs/nodejsWatcher.js';\nimport { Promises } from '../../../../base/common/async.js';\nimport { computeStats } from './watcherStats.js';\n\nexport class UniversalWatcher extends Disposable implements IUniversalWatcher {\n\n\tprivate readonly recursiveWatcher = this._register(new ParcelWatcher());\n\tprivate readonly nonRecursiveWatcher = this._register(new NodeJSWatcher(this.recursiveWatcher));\n\n\treadonly onDidChangeFile = Event.any(this.recursiveWatcher.onDidChangeFile, this.nonRecursiveWatcher.onDidChangeFile);\n\treadonly onDidError = Event.any(this.recursiveWatcher.onDidError, this.nonRecursiveWatcher.onDidError);\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage = Event.any(this._onDidLogMessage.event, this.recursiveWatcher.onDidLogMessage, this.nonRecursiveWatcher.onDidLogMessage);\n\n\tprivate requests: IUniversalWatchRequest[] = [];\n\tprivate failedRecursiveRequests = 0;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.recursiveWatcher.onDidError(e => {\n\t\t\tif (e.request) {\n\t\t\t\tthis.failedRecursiveRequests++;\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync watch(requests: IUniversalWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\t\tthis.failedRecursiveRequests = 0;\n\n\t\t// Watch recursively first to give recursive watchers a chance\n\t\t// to step in for non-recursive watch requests, thus reducing\n\t\t// watcher duplication.\n\n\t\tlet error: Error | undefined;\n\t\ttry {\n\t\t\tawait this.recursiveWatcher.watch(requests.filter(request => isRecursiveWatchRequest(request)));\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.nonRecursiveWatcher.watch(requests.filter(request => !isRecursiveWatchRequest(request)));\n\t\t} catch (e) {\n\t\t\tif (!error) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\n\t\t// Log stats\n\t\tif (enabled && this.requests.length > 0) {\n\t\t\tthis._onDidLogMessage.fire({ type: 'trace', message: computeStats(this.requests, this.failedRecursiveRequests, this.recursiveWatcher, this.nonRecursiveWatcher) });\n\t\t}\n\n\t\t// Forward to watchers\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.setVerboseLogging(enabled),\n\t\t\tthis.nonRecursiveWatcher.setVerboseLogging(enabled)\n\t\t]);\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tawait Promises.settled([\n\t\t\tthis.recursiveWatcher.stop(),\n\t\t\tthis.nonRecursiveWatcher.stop()\n\t\t]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ProxyChannel } from '../../../../base/parts/ipc/common/ipc.js';\nimport { Server as ChildProcessServer } from '../../../../base/parts/ipc/node/ipc.cp.js';\nimport { Server as UtilityProcessServer } from '../../../../base/parts/ipc/node/ipc.mp.js';\nimport { isUtilityProcess } from '../../../../base/parts/sandbox/node/electronTypes.js';\nimport { UniversalWatcher } from './watcher.js';\n\nlet server: ChildProcessServer<string> | UtilityProcessServer;\nif (isUtilityProcess(process)) {\n\tserver = new UtilityProcessServer();\n} else {\n\tserver = new ChildProcessServer('watcher');\n}\n\nconst service = new UniversalWatcher();\nserver.registerChannel('watcher', ProxyChannel.fromService(service, new DisposableStore()));\n"],"mappings":"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","names":["$4","array","predicate","startIdx","endIdxEx","i","j","k","$8","_$8","item","idx","$bb","e","$ub","listener","newUnexpectedErrorHandler","$cb","$gb","$kb","canceledName","error","$lb","_$ub","msg","err","result","$zb","one","other","itemEquals","a","b","len","$Mb","$Zb","_seed","rand","seed","x","temp","$6b","arr","CompareResult","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","$9b","selector","comparator","$$b","$cc","_$cc","_callback","iterate","handler","cb","mapFn","first","$a","data","groupFn","element","key","target","$e","values","_a","value","entry","callbackfn","thisArg","ResourceMapEntry","uri","isEntries","arg","$Ec","_$Ec","resource","toKey","clb","_","$Fc","entriesOrKey","_b","_value","Touch","$Gc","_c","touch","state","current","map","iterator","newSize","currentSize","next","previous","Cache","limit","ratio","$Hc","$Lc","fn","$Qc","fnDidRunCallback","_this","didCall","Iterable","is","thing","_empty","empty","single","wrap","iterableOrElement","from","iterable","reverse","isEmpty","some","find","filter","index","flatMap","concat","iterables","reduce","reducer","initialValue","slice","to","consume","atMost","consumed","asyncToArray","TRACK_DISPOSABLES","disposableTracker","$Rc","_$Rc","d","val","child","parent","disposable","cache","cacheValue","rootParentCache","v","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","getStackTracePath","leaking","removePrefix","linesToRemove","regexp","lines","p","stackTraceStarts","stackTracePath","l","message","stackTraceFormattedLines","line","prevStarts","continuations","cont","set","$Sc","tracker","__is_disposable_tracked__","stack","$3c","$Tc","$Uc","setParentOfDisposable","setParentOfDisposables","children","$Xc","errors","$Zc","disposables","$1c","self","$2c","_$2c","$4c","oldValue","$_c","skipDisposeOnOverwrite","Node","_Node","hasPerformanceNow","$se","_$se","highResolution","_enableListenerGCedWarning","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","count","defer","event","debounce","once","thisArgs","didFire","onceIf","condition","snapshot","forEach","each","signal","any","events","addAndReturnDisposable","merge","initial","output","emitter","$ye","store","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","numDebouncedCalls","doFire","cur","_output","accumulate","last","latch","equals","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","chain","sythensize","cs","ChainableSynthesis","HaltChainable","step","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","resolve","fromPromise","promise","res","forward","runAndSubscribe","EmitterObserver","_observable","_change","fromObservable","obs","fromObservableLight","observable","didChange","observer","$ue","_$ue","name","listenerCount","elapsed","_globalLeakWarningThreshold","LeakageMonitor","_LeakageMonitor","threshold","topStack","topCount","$we","_Stacktrace","$xe","UniqueContainer","compactionThreshold","forEachListener","listeners","_listenerFinalizers","leaks","heldValue","callback","tuple","contained","removeMonitor","EventDeliveryQueuePrivate","match","adjustDeliveryQueue","n","errorHandler","dq","end","$Ee","r","$He","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","$ad","cancel","$f","$g","isPseudo","_format","rest","localize","lookupMessage","fallback","$j","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_platformLocale","_translationsConfigFile","_userAgent","$globalThis","nodeProcess","isElectronProcess","isElectronRenderer","rawNlsConfig","nlsConfig","Platform","_platform","$l","$m","$n","$p","$r","$s","$t","$y","$z","Language","isDefaultVariant","isDefault","$D","$E","pending","candidate","lastId","myId","OperatingSystem","$H","$I","$J","$K","$L","safeProcess","vscodeGlobal","sandboxProcess","cwd","env","$hc","$ic","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","type","validateObject","pathObject","validateString","platformIsWin32","isPathSeparator","code","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","formatExt","ext","sep","dir","base","$jc","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","length","lastCommonSep","fromCode","out","resolvedPath","offset","matchedSlash","suffix","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posixCwd","$kc","trailingSeparator","hasRoot","$lc","$mc","$nc","$oc","$pc","$qc","$rc","$sc","$tc","$uc","$vc","$xc","$of","$pf","arg1","arg2","$rf","$zf","$Ef","haystack","needle","needleLen","$Ff","haystackLen","$Rf","$Sf","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","$Tf","$Uf","$Wf","diff","$Xf","$Yf","$Zf","str","candidateLength","$3f","charCode","$4f","$5f","highSurrogate","lowSurrogate","$kg","GraphemeBreakType","GraphemeBreakTree","_GraphemeBreakTree","getGraphemeBreakRawData","codePoint","nodeCount","nodeIndex","CodePoint","$vg","_$vg","locales","arrayToMap","mergeMaps","map1","map2","intersectMaps","filteredLocales","languageSpecificMap","locale","commonMap","f","$wg","_$wg","$xg","$Bg","obj","$Eg","$Gg","$Hg","$Lg","$Qg","$Rg","osPath","$Sg","$Tg","firstLetter","pos","$Yg","$Wg","pathA","pathB","ignoreCase","identityEquals","$Xg","parentCandidate","sepOffset","char0","$2g","pathNormalized","$3g","isWindowsOS","pathChars","windowsSafePathFirstChars","$7g","prefix","randomLength","pathCharsTouse","randomFileName","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","_URI","schemeOrData","authority","query","fragment","$Ac","change","Uri","percentDecode","components","strict","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","Schemas","$$g","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","$ah","host","port","connectionToken","$_g","basePath","$fh","FileAccessImpl","_FileAccessImpl","resourcePath","uriOrModule","moduleIdToUrl","rootUriOrPath","modulePath","$gh","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","$hh","$ih","uri1","uri2","ignoreFragment","$yh","$qh","dirname","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","fsp","$zh","isRootSep","$jh","$kh","$lh","$mh","$nh","$oh","$ph","$rh","$sh","$th","$uh","$vh","$wh","$xh","$Ah","$Bh","DataUri","parseMetaData","dataUri","metadata","property","mime","$te","$Eh","$Fh","source","thenable","reject","onfinally","$Mh","promiseFactory","onComplete","timeoutDeferred","timeout","scheduled","microtaskDeferred","$Ph","defaultDelay","task","$Qh","$Th","millis","token","$Yh","maxDegreeOfParalellism","factory","c","iLimitedTask","$Zh","$2h","$di","queue","extUri","drainListenerId","drainListener","drainer","$5h","runner","$7h","unit","units","$8h","h","timeSinceLastExecution","$9h","$0h","_targetWindow","disposed","targetWindow","DeferredOutcome","Promises","settled","promises","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","$gi","_$gi","items","writer","executor","onReturn","filterFn","hasBuffer","indexOfTable","textEncoder","textDecoder","$zi","_$zi","byteLength","buffers","totalLength","$Di","$Ei","$Fi","$Gi","$Hi","$Ii","subarray","$Ai","table","destination","$5t","_target","descriptor","fnKey","memoizeKey","$0t","depth","RequestType","requestTypeToStr","ResponseType","responseTypeToStr","State","readIntVQL","reader","vqlZero","createOneByteBuffer","writeInt32VQL","v2","scratch","$$t","bytes","$_t","DataType","BufferPresets","$au","el","$bu","$cu","channelName","channel","response","msgLength","header","body","request","cancellationTokenSource","pendingRequests","timer","requests","RequestInitiator","$du","logger","that","command","cancellationToken","doRequest","uninitializedPromise","cancellationTokenListener","$eu","ctx","onDidClientConnect","ipcLogger","timeoutDelay","protocol","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","connection","routerOrClientFilter","connectionPromise","channelPromise","$gu","clientFilter","eventMultiplexer","onDidAddConnection","onDidRemoveConnection","relay","ProxyChannel","fromService","service","disableMarshalling","mapEventNameToEvent","propertyIsEvent","eventImpl","propertyIsDynamicEvent","toService","propKey","methodArgs","Source","TerminateResponseCode","fs","tmpdir","promisify","nfcCache","$Ls","normalize","nfdCache","nonAsciiCharactersPattern","form","normalizedCache","cached","RimRafMode","rimraf","mode","moveToPath","rimrafUnlink","rimrafMove","readdir","handleDirectoryChildren","safeReaddirWithFileTypes","isFile","isDirectory","isSymbolicLink","lstat","readdirSync","readDirsInDir","dirPath","directories","SymlinkSupport","stat","lstats","existsFile","symbolicLink","existsDirectory","writeQueues","writeFile","ensuredOptions","ensureWriteOptions","doWriteFileAndFlush","canFlush","configureFlushOnWrite","enabled","openError","fd","writeError","syncError","closeError","rename","windowsRetryTimeout","renameWithRetry","copy","startTime","retryTimeout","attempt","abortRetry","doCopy","COPY_MODE_MASK","payload","doCopySymlink","doCopyDirectory","doCopyFile","files","file","linkTarget","position","bytesRead","bytesWritten","win32","findExecutable","fileExists","statValue","pathEntry","fullPath","withExtension","$ey","$s3","process","Protocol","$t3","_$t3","onCreateMessageChannel","$Al","$Bl","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","$Cl","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","parseRegExp","regEx","segment","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","choice","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","patternKey","parsedPattern","wrapRelativePattern","trivia1","trimForExclusions","trivia2","trivia3","trivia4and5","toRegExp","wrappedPattern","basename","slashBase","backslashBase","basenames","parsedPatterns","aggregateBasenameMatches","patternsLength","withBasenames","allPaths","all","targetPath","matchPathEnds","usingPosixSep","nativePath","nativePathEnd","targetPathEnd","regExp","$El","$Fl","resultPattern","parsedExpression","rp","expression","parseExpressionPattern","resultExpression","resultPromises","resultPromise","hasSibling","when","clausePattern","matched","basenamePatterns","patterns","aggregate","ch","aggregatedPatterns","$Il","patternsA","patternsB","$Vk","aCode","thisCode","$Wk","justSeps","$Xk","g","UriIteratorState","$Yk","TernarySearchTreeNode","tmp","Dir","$Zk","_$Zk","ignorePathCasing","ignoreQueryAndFragment","keys","iter","node","oldElement","bf","d1","d2","superStr","min","newChild","allowValue","bucket","nodeIsBalanced","_util","getServiceDependencies","ctor","$Sk","$Tk","storeServiceDependency","serviceId","$lm","FileType","FilePermission","FileChangeFilter","FileSystemProviderCapabilities","FileSystemProviderErrorCode","FileOperation","FileChangeType","$Em","_$Em","changes","added","updated","deleted","types","hasTypesFilter","correlationId","$Fm","FileOperationResult","FileKind","$Tm","_$Tm","size","$2s","$3s","$4s","_$4s","m","failedRequest","verboseLogging","$8s","coalescer","EventCoalescer","$9s","$0s","existingEvent","keepEvent","currentChangeType","newChangeType","addOrChangeEvents","deletedPaths","e1","e2","deletedPath","$$s","$_s","filters","parcelWatcher","statSync","unlinkSync","homedir","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","$2m","detail","watchFile","unwatchFile","$Ui","$Vi","hashVal","$Wi","arrayHash","objectHash","$Xi","booleanHash","initialHashVal","s","SHA1Constant","leftRotate","bits","totalBits","delta","mask","toHexString","bufferOrValue","bitsize","$Zi","_$Zi","strLen","buff","buffLen","leftoverHighSurrogate","nextCharCode","ml","bigBlock32","$hy","delayed","nonSuspendedRequests","pathNotFound","watchFileCallback","curr","prev","currentPathNotFound","previousPathNotFound","oldPathNotFound","stats","traceMsg","$Xs","found","ix","$Ys","$1s","fs2","normalizePath","$Dqc","ready","restarts","worker","subscriptions","include","exclude","joinRestart","$Eqc","_$Eqc","requestsToStart","watchersToStop","watcher","pollingInterval","cts","instance","snapshotFile","pollingWatcher","realPath","realPathDiffers","realPathLength","counter","parcelWatcherLib","parcelEvents","parcelWatcherInstance","initialExcludes","excludes","predefinedExcludes","includedEvents","includedEvent","parcelEventType","coalescedEvents","filteredEvents","rootDeleted","scheduler","restartPromise","validatePaths","requestA","requestB","mapCorrelationtoRequests","requestsForCorrelation","normalizedRequests","requestTrie","watch","$at","_$at","t","u","w","y","z","watchDisposable","watcherDisposables","requestResource","pathBasename","folderChildren","mapPathToStatDisposable","raw","changedFileName","timeoutHandle","skipIncludeExcludeChecks","fileChanges","coalescedFileChanges","$iy","O","$Fqc","failedRecursiveRequests","recursiveWatcher","nonRecursiveWatcher","allRecursiveRequests","sortByPathPrefix","nonSuspendedRecursiveRequests","suspendedPollingRecursiveRequests","suspendedNonPollingRecursiveRequests","recursiveRequestsStatus","computeRequestStatus","recursiveWatcherStatus","computeRecursiveWatchStatus","allNonRecursiveRequests","nonSuspendedNonRecursiveRequests","suspendedPollingNonRecursiveRequests","suspendedNonPollingNonRecursiveRequests","nonRecursiveRequestsStatus","nonRecursiveWatcherStatus","computeNonRecursiveWatchStatus","recursiveRequestLines","fillRequestStats","alignTextColumns","recursiveWatcheLines","fillRecursiveWatcherStats","nonRecursiveRequestLines","nonRecursiveWatcheLines","fillNonRecursiveWatcherStats","maxLength","parts","padding","polling","suspended","isSuspended","active","failed","stopped","reusing","r1","r2","p1","isUniversalWatchRequest","p2","minLength","decorations","requestDetailsToString","watchers","allWatchers","activeWatchers","failedWatchers","reusingWatchers","$Gqc","server"],"file":"watcherMain.js"}