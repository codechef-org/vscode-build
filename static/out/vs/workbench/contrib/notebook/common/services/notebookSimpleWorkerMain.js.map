{"version":3,"sources":["out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/errors.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/collections.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/functional.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/arraysFind.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/arrays.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/map.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/iterator.ts","out-vscode-reh-web/vs/base/common/vs/base/common/iterator.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/lifecycle.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/linkedList.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/stopwatch.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/event.ts","out-vscode-reh-web/vs/file:/root/vscode/src/vs/nls.messages.ts","out-vscode-reh-web/vs/file:/root/vscode/src/vs/nls.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/platform.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/cancellation.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/cache.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/lazy.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/strings.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/process.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/path.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/uri.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/network.ts","out-vscode-reh-web/vs/base/common/worker/file:/root/vscode/src/vs/base/common/worker/simpleWorker.ts","out-vscode-reh-web/vs/base/common/worker/file:/root/vscode/src/vs/base/common/worker/simpleWorkerBootstrap.ts","out-vscode-reh-web/vs/base/common/diff/file:/root/vscode/src/vs/base/common/diff/diffChange.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/buffer.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/hash.ts","out-vscode-reh-web/vs/base/common/diff/file:/root/vscode/src/vs/base/common/diff/diff.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/position.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/range.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/objects.ts","out-vscode-reh-web/vs/editor/common/file:/root/vscode/src/vs/editor/common/model.ts","out-vscode-reh-web/vs/editor/common/model/pieceTreeTextBuffer/file:/root/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/uint.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/characterClassifier.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/wordCharacterClassifier.ts","out-vscode-reh-web/vs/editor/common/model/file:/root/vscode/src/vs/editor/common/model/textModelSearch.ts","out-vscode-reh-web/vs/editor/common/model/pieceTreeTextBuffer/file:/root/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/eolCounter.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/stringBuilder.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/textChange.ts","out-vscode-reh-web/vs/editor/common/model/pieceTreeTextBuffer/file:/root/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.ts","out-vscode-reh-web/vs/editor/common/model/pieceTreeTextBuffer/file:/root/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/extpath.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/resources.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/symbols.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/async.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/glob.ts","out-vscode-reh-web/vs/base/common/file:/root/vscode/src/vs/base/common/mime.ts","out-vscode-reh-web/vs/platform/contextkey/common/vs/platform/contextkey/common/scanner.ts","out-vscode-reh-web/vs/platform/instantiation/common/file:/root/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode-reh-web/vs/platform/contextkey/common/vs/platform/contextkey/common/contextkey.ts","out-vscode-reh-web/vs/platform/instantiation/common/file:/root/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode-reh-web/vs/platform/instantiation/common/file:/root/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode-reh-web/vs/workbench/services/notebook/common/file:/root/vscode/src/vs/workbench/services/notebook/common/notebookDocumentService.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/file:/root/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","out-vscode-reh-web/vs/editor/common/core/file:/root/vscode/src/vs/editor/common/core/wordHelper.ts","out-vscode-reh-web/vs/editor/common/model/file:/root/vscode/src/vs/editor/common/model/prefixSumComputer.ts","out-vscode-reh-web/vs/editor/common/model/file:/root/vscode/src/vs/editor/common/model/mirrorTextModel.ts","out-vscode-reh-web/vs/editor/common/services/textModelSync/file:/root/vscode/src/vs/editor/common/services/textModelSync/textModelSync.impl.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/root/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorker.ts","out-vscode-reh-web/vs/workbench/contrib/notebook/common/services/file:/root/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorkerMain.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tif (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n\t\t\t\t\t\tthrow new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\n/** @skipMangle */\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\n/**\n * Returns if the error is a SIGPIPE error. SIGPIPE errors should generally be\n * logged at most once, to avoid a loop.\n *\n * @see https://github.com/microsoft/vscode-remote-release/issues/6481\n */\nexport function isSigPipeError(e: unknown): e is Error {\n\tif (!e || typeof e !== 'object') {\n\t\treturn false;\n\t}\n\n\tconst cast = e as Record<string, string | undefined>;\n\treturn cast.code === 'EPIPE' && cast.syscall?.toUpperCase() === 'WRITE';\n}\n\n/**\n * This function should only be called with errors that indicate a bug in the product.\n * E.g. buggy extensions/invalid user-input/network issues should not be able to trigger this code path.\n * If they are, this indicates there is also a bug in the product.\n*/\nexport function onBugIndicatingError(e: any): undefined {\n\terrorHandler.onUnexpectedError(e);\n\treturn undefined;\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isCancellationError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n\treadonly noTelemetry: boolean;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tconst { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack,\n\t\t\tnoTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\nexport function transformErrorFromSerialization(data: SerializedError): Error {\n\tlet error: Error;\n\tif (data.noTelemetry) {\n\t\terror = new ErrorNoTelemetry();\n\t} else {\n\t\terror = new Error();\n\t\terror.name = data.name;\n\t}\n\terror.message = data.message;\n\terror.stack = data.stack;\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): unknown;\n\tgetTypeName(): string | null;\n\tgetFunction(): Function | undefined;\n\tgetFunctionName(): string | null;\n\tgetMethodName(): string | null;\n\tgetFileName(): string | null;\n\tgetLineNumber(): number | null;\n\tgetColumnNumber(): number | null;\n\tgetEvalOrigin(): string | undefined;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error: any): boolean {\n\tif (error instanceof CancellationError) {\n\t\treturn true;\n\t}\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport class ReadonlyError extends TypeError {\n\tconstructor(name?: string) {\n\t\tsuper(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n\t}\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\n/**\n * Error that when thrown won't be logged in telemetry as an unhandled error.\n */\nexport class ErrorNoTelemetry extends Error {\n\toverride readonly name: string;\n\n\tconstructor(msg?: string) {\n\t\tsuper(msg);\n\t\tthis.name = 'CodeExpectedError';\n\t}\n\n\tpublic static fromError(err: Error): ErrorNoTelemetry {\n\t\tif (err instanceof ErrorNoTelemetry) {\n\t\t\treturn err;\n\t\t}\n\n\t\tconst result = new ErrorNoTelemetry();\n\t\tresult.message = err.message;\n\t\tresult.stack = err.stack;\n\t\treturn result;\n\t}\n\n\tpublic static isErrorNoTelemetry(err: Error): err is ErrorNoTelemetry {\n\t\treturn err.name === 'CodeExpectedError';\n\t}\n}\n\n/**\n * This error indicates a bug.\n * Do not throw this for invalid user input.\n * Only catch this error to recover gracefully from bugs.\n */\nexport class BugIndicatingError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message || 'An unexpected bug occurred.');\n\t\tObject.setPrototypeOf(this, BugIndicatingError.prototype);\n\n\t\t// Because we know for sure only buggy code throws this,\n\t\t// we definitely want to break here and fix the bug.\n\t\t// debugger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<K extends string | number | symbol, V>(data: V[], groupFn: (element: V) => K): Record<K, V[]> {\n\tconst result: Record<K, V[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function diffSets<T>(before: ReadonlySet<T>, after: ReadonlySet<T>): { removed: T[]; added: T[] } {\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\tfor (const element of before) {\n\t\tif (!after.has(element)) {\n\t\t\tremoved.push(element);\n\t\t}\n\t}\n\tfor (const element of after) {\n\t\tif (!before.has(element)) {\n\t\t\tadded.push(element);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[]; added: V[] } {\n\tconst removed: V[] = [];\n\tconst added: V[] = [];\n\tfor (const [index, value] of before) {\n\t\tif (!after.has(index)) {\n\t\t\tremoved.push(value);\n\t\t}\n\t}\n\tfor (const [index, value] of after) {\n\t\tif (!before.has(index)) {\n\t\t\tadded.push(value);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection<T>(setA: Set<T>, setB: Iterable<T>): Set<T> {\n\tconst result = new Set<T>();\n\tfor (const elem of setB) {\n\t\tif (setA.has(elem)) {\n\t\t\tresult.add(elem);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class SetWithKey<T> implements Set<T> {\n\tprivate _map = new Map<any, T>();\n\n\tconstructor(values: T[], private toKey: (t: T) => unknown) {\n\t\tfor (const value of values) {\n\t\t\tthis.add(value);\n\t\t}\n\t}\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: T): this {\n\t\tconst key = this.toKey(value);\n\t\tthis._map.set(key, value);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\treturn this._map.delete(this.toKey(value));\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this._map.has(this.toKey(value));\n\t}\n\n\t*entries(): IterableIterator<[T, T]> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield [entry, entry];\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this._map.values()) {\n\t\t\tyield entry;\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tforEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void {\n\t\tthis._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n\t}\n\n\t[Symbol.iterator](): IterableIterator<T> {\n\t\treturn this.values();\n\t}\n\n\t[Symbol.toStringTag]: string = 'SetWithKey';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Given a function, returns a function that is only calling that function once.\n */\nexport function createSingleCallFunction<T extends Function>(this: unknown, fn: T, fnDidRunCallback?: () => void): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tif (fnDidRunCallback) {\n\t\t\ttry {\n\t\t\t\tresult = fn.apply(_this, arguments);\n\t\t\t} finally {\n\t\t\t\tfnDidRunCallback();\n\t\t\t}\n\t\t} else {\n\t\t\tresult = fn.apply(_this, arguments);\n\t\t}\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Comparator } from './arrays.js';\n\nexport function findLast<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findLastIdx(array, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn array[idx];\n}\n\nexport function findLastIdx<T>(array: readonly T[], predicate: (item: T) => boolean, fromIndex = array.length - 1): number {\n\tfor (let i = fromIndex; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (predicate(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `undefined` if no item matches, otherwise the last item that matches the predicate.\n */\nexport function findLastMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findLastIdxMonotonous(array, predicate);\n\treturn idx === -1 ? undefined : array[idx];\n}\n\n/**\n * Finds the last item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n *\n * @returns `startIdx - 1` if predicate is false for all items, otherwise the index of the last item that matches the predicate.\n */\nexport function findLastIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\ti = k + 1;\n\t\t} else {\n\t\t\tj = k;\n\t\t}\n\t}\n\treturn i - 1;\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `undefined` if no item matches, otherwise the first item that matches the predicate.\n */\nexport function findFirstMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n\treturn idx === array.length ? undefined : array[idx];\n}\n\n/**\n * Finds the first item where predicate is true using binary search.\n * `predicate` must be monotonous, i.e. `arr.map(predicate)` must be like `[false, ..., false, true, ..., true]`!\n *\n * @returns `endIdxEx` if predicate is false for all items, otherwise the index of the first item that matches the predicate.\n */\nexport function findFirstIdxMonotonousOrArrLen<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tlet i = startIdx;\n\tlet j = endIdxEx;\n\twhile (i < j) {\n\t\tconst k = Math.floor((i + j) / 2);\n\t\tif (predicate(array[k])) {\n\t\t\tj = k;\n\t\t} else {\n\t\t\ti = k + 1;\n\t\t}\n\t}\n\treturn i;\n}\n\nexport function findFirstIdxMonotonous<T>(array: readonly T[], predicate: (item: T) => boolean, startIdx = 0, endIdxEx = array.length): number {\n\tconst idx = findFirstIdxMonotonousOrArrLen(array, predicate, startIdx, endIdxEx);\n\treturn idx === array.length ? -1 : idx;\n}\n\n/**\n * Use this when\n * * You have a sorted array\n * * You query this array with a monotonous predicate to find the last item that has a certain property.\n * * You query this array multiple times with monotonous predicates that get weaker and weaker.\n */\nexport class MonotonousArray<T> {\n\tpublic static assertInvariants = false;\n\n\tprivate _findLastMonotonousLastIdx = 0;\n\tprivate _prevFindLastPredicate: ((item: T) => boolean) | undefined;\n\n\tconstructor(private readonly _array: readonly T[]) {\n\t}\n\n\t/**\n\t * The predicate must be monotonous, i.e. `arr.map(predicate)` must be like `[true, ..., true, false, ..., false]`!\n\t * For subsequent calls, current predicate must be weaker than (or equal to) the previous predicate, i.e. more entries must be `true`.\n\t */\n\tfindLastMonotonous(predicate: (item: T) => boolean): T | undefined {\n\t\tif (MonotonousArray.assertInvariants) {\n\t\t\tif (this._prevFindLastPredicate) {\n\t\t\t\tfor (const item of this._array) {\n\t\t\t\t\tif (this._prevFindLastPredicate(item) && !predicate(item)) {\n\t\t\t\t\t\tthrow new Error('MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prevFindLastPredicate = predicate;\n\t\t}\n\n\t\tconst idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n\t\tthis._findLastMonotonousLastIdx = idx + 1;\n\t\treturn idx === -1 ? undefined : this._array[idx];\n\t}\n}\n\n/**\n * Returns the first item that is equal to or greater than every other item.\n*/\nexport function findFirstMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) > 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the last item that is equal to or greater than every other item.\n*/\nexport function findLastMax<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\tif (array.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tlet max = array[0];\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, max) >= 0) {\n\t\t\tmax = item;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * Returns the first item that is equal to or less than every other item.\n*/\nexport function findFirstMin<T>(array: readonly T[], comparator: Comparator<T>): T | undefined {\n\treturn findFirstMax(array, (a, b) => -comparator(a, b));\n}\n\nexport function findMaxIdx<T>(array: readonly T[], comparator: Comparator<T>): number {\n\tif (array.length === 0) {\n\t\treturn -1;\n\t}\n\n\tlet maxIdx = 0;\n\tfor (let i = 1; i < array.length; i++) {\n\t\tconst item = array[i];\n\t\tif (comparator(item, array[maxIdx]) > 0) {\n\t\t\tmaxIdx = i;\n\t\t}\n\t}\n\treturn maxIdx;\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFindFirst<T, R>(items: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of items) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nimport { CancellationToken } from './cancellation.js';\nimport { CancellationError } from './errors.js';\nimport { ISplice } from './sequence.js';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T | undefined {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder<T>(array: T[], index: number) {\n\tconst last = array.length - 1;\n\tif (index < last) {\n\t\tarray[index] = array[last];\n\t}\n\tarray.pop();\n}\n\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\treturn binarySearch2(array.length, i => comparator(array[i], key));\n}\n\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length: number, compareToKey: (index: number) => number): number {\n\tlet low = 0,\n\t\thigh = length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = compareToKey(mid);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tconst pivotValue = data[Math.floor(data.length * Math.random())];\n\tconst lower: T[] = [];\n\tconst higher: T[] = [];\n\tconst pivots: T[] = [];\n\n\tfor (const value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy<T>(items: Iterable<T>, shouldBeGrouped: (item1: T, item2: T) => boolean): Iterable<T[]> {\n\tlet currentGroup: T[] | undefined;\n\tlet last: T | undefined;\n\tfor (const item of items) {\n\t\tif (last !== undefined && shouldBeGrouped(last, item)) {\n\t\t\tcurrentGroup!.push(item);\n\t\t} else {\n\t\t\tif (currentGroup) {\n\t\t\t\tyield currentGroup;\n\t\t\t}\n\t\t\tcurrentGroup = [item];\n\t\t}\n\t\tlast = item;\n\t}\n\tif (currentGroup) {\n\t\tyield currentGroup;\n\t}\n}\n\nexport function forEachAdjacent<T>(arr: T[], f: (item1: T | undefined, item2: T | undefined) => void): void {\n\tfor (let i = 0; i <= arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n\t}\n}\n\nexport function forEachWithNeighbors<T>(arr: T[], f: (before: T | undefined, element: T, after: T | undefined) => void): void {\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tf(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[]; added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow new CancellationError();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn array.filter((e): e is T => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): asserts array is Array<T> {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * @deprecated Use `Array.copyWithin` instead\n */\nexport function move(array: unknown[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => unknown = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T, R>(keyFn: (t: T) => R): (t: T) => boolean {\n\tconst seen = new Set<R>();\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(key);\n\t\treturn true;\n\t};\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n *\n * @deprecated In almost all cases, use a `Set<T>` instead.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function pushMany<T>(arr: T[], items: ReadonlyArray<T>): void {\n\tfor (const item of items) {\n\t\tarr.push(item);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tlet result = array.splice(index, deleteCount);\n\tif (result === undefined) {\n\t\t// see https://bugs.webkit.org/show_bug.cgi?id=261140\n\t\tresult = [];\n\t}\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * When comparing two values,\n * a negative number indicates that the first value is less than the second,\n * a positive number indicates that the first value is greater than the second,\n * and zero indicates that neither is the case.\n*/\nexport type CompareResult = number;\n\nexport namespace CompareResult {\n\texport function isLessThan(result: CompareResult): boolean {\n\t\treturn result < 0;\n\t}\n\n\texport function isLessThanOrEqual(result: CompareResult): boolean {\n\t\treturn result <= 0;\n\t}\n\n\texport function isGreaterThan(result: CompareResult): boolean {\n\t\treturn result > 0;\n\t}\n\n\texport function isNeitherLessOrGreaterThan(result: CompareResult): boolean {\n\t\treturn result === 0;\n\t}\n\n\texport const greaterThan = 1;\n\texport const lessThan = -1;\n\texport const neitherLessOrGreaterThan = 0;\n}\n\n/**\n * A comparator `c` defines a total order `<=` on `T` as following:\n * `c(a, b) <= 0` iff `a` <= `b`.\n * We also have `c(a, b) == 0` iff `c(b, a) == 0`.\n*/\nexport type Comparator<T> = (a: T, b: T) => CompareResult;\n\nexport function compareBy<TItem, TCompareBy>(selector: (item: TItem) => TCompareBy, comparator: Comparator<TCompareBy>): Comparator<TItem> {\n\treturn (a, b) => comparator(selector(a), selector(b));\n}\n\nexport function tieBreakComparators<TItem>(...comparators: Comparator<TItem>[]): Comparator<TItem> {\n\treturn (item1, item2) => {\n\t\tfor (const comparator of comparators) {\n\t\t\tconst result = comparator(item1, item2);\n\t\t\tif (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn CompareResult.neitherLessOrGreaterThan;\n\t};\n}\n\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator: Comparator<number> = (a, b) => a - b;\n\nexport const booleanComparator: Comparator<boolean> = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\n\nexport function reverseOrder<TItem>(comparator: Comparator<TItem>): Comparator<TItem> {\n\treturn (a, b) => -comparator(a, b);\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: readonly T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tpeekLast(): T | undefined {\n\t\tif (this.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.items[this.lastIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\tremoveLast(): T | undefined {\n\t\tconst result = this.items[this.lastIdx];\n\t\tthis.lastIdx--;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable<T> {\n\tpublic static readonly empty = new CallbackIterable<never>(_callback => { });\n\n\tconstructor(\n\t\t/**\n\t\t * Calls the callback for every item.\n\t\t * Stops when the callback returns false.\n\t\t*/\n\t\tpublic readonly iterate: (callback: (item: T) => boolean) => void\n\t) {\n\t}\n\n\tforEach(handler: (item: T) => void) {\n\t\tthis.iterate(item => { handler(item); return true; });\n\t}\n\n\ttoArray(): T[] {\n\t\tconst result: T[] = [];\n\t\tthis.iterate(item => { result.push(item); return true; });\n\t\treturn result;\n\t}\n\n\tfilter(predicate: (item: T) => boolean): CallbackIterable<T> {\n\t\treturn new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n\t}\n\n\tmap<TResult>(mapFn: (item: T) => TResult): CallbackIterable<TResult> {\n\t\treturn new CallbackIterable<TResult>(cb => this.iterate(item => cb(mapFn(item))));\n\t}\n\n\tsome(predicate: (item: T) => boolean): boolean {\n\t\tlet result = false;\n\t\tthis.iterate(item => { result = predicate(item); return !result; });\n\t\treturn result;\n\t}\n\n\tfindFirst(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLast(predicate: (item: T) => boolean): T | undefined {\n\t\tlet result: T | undefined;\n\t\tthis.iterate(item => {\n\t\t\tif (predicate(item)) {\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n\n\tfindLastMaxBy(comparator: Comparator<T>): T | undefined {\n\t\tlet result: T | undefined;\n\t\tlet first = true;\n\t\tthis.iterate(item => {\n\t\t\tif (first || CompareResult.isGreaterThan(comparator(item, result!))) {\n\t\t\t\tfirst = false;\n\t\t\t\tresult = item;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn result;\n\t}\n}\n\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n\tconstructor(private readonly _indexMap: readonly number[]) { }\n\n\t/**\n\t * Returns a permutation that sorts the given array according to the given compare function.\n\t */\n\tpublic static createSortPermutation<T>(arr: readonly T[], compareFn: (a: T, b: T) => number): Permutation {\n\t\tconst sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n\t\treturn new Permutation(sortIndices);\n\t}\n\n\t/**\n\t * Returns a new array with the elements of the given array re-arranged according to this permutation.\n\t */\n\tapply<T>(arr: readonly T[]): T[] {\n\t\treturn arr.map((_, index) => arr[this._indexMap[index]]);\n\t}\n\n\t/**\n\t * Returns a new permutation that undoes the re-arrangement of this permutation.\n\t*/\n\tinverse(): Permutation {\n\t\tconst inverseIndexMap = this._indexMap.slice();\n\t\tfor (let i = 0; i < this._indexMap.length; i++) {\n\t\t\tinverseIndexMap[this._indexMap[i]] = i;\n\t\t}\n\t\treturn new Permutation(inverseIndexMap);\n\t}\n}\n\n/**\n * Asynchronous variant of `Array.find()`, returning the first element in\n * the array for which the predicate returns true.\n *\n * This implementation does not bail early and waits for all promises to\n * resolve before returning.\n */\nexport async function findAsync<T>(array: readonly T[], predicate: (element: T, index: number) => Promise<boolean>): Promise<T | undefined> {\n\tconst results = await Promise.all(array.map(\n\t\tasync (element, index) => ({ element, ok: await predicate(element, index) })\n\t));\n\n\treturn results.find(r => r.ok)?.element;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from './uri.js';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nfunction isEntries<T>(arg: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[] | undefined): arg is readonly (readonly [URI, T])[] {\n\treturn Array.isArray(arg);\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(entries?: readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn);\n\n\tconstructor(arg?: ResourceMap<T> | ResourceMapKeyFn | readonly (readonly [URI, T])[], toKey?: ResourceMapKeyFn) {\n\t\tif (arg instanceof ResourceMap) {\n\t\t\tthis.map = new Map(arg.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else if (isEntries(arg)) {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\n\t\t\tfor (const [resource, value] of arg) {\n\t\t\t\tthis.set(resource, value);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = arg ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (const [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (const entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (const [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\nexport class ResourceSet implements Set<URI> {\n\n\treadonly [Symbol.toStringTag]: string = 'ResourceSet';\n\n\tprivate readonly _map: ResourceMap<URI>;\n\n\tconstructor(toKey?: ResourceMapKeyFn);\n\tconstructor(entries: readonly URI[], toKey?: ResourceMapKeyFn);\n\tconstructor(entriesOrKey?: readonly URI[] | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (!entriesOrKey || typeof entriesOrKey === 'function') {\n\t\t\tthis._map = new ResourceMap(entriesOrKey);\n\t\t} else {\n\t\t\tthis._map = new ResourceMap(toKey);\n\t\t\tentriesOrKey.forEach(this.add, this);\n\t\t}\n\t}\n\n\n\tget size(): number {\n\t\treturn this._map.size;\n\t}\n\n\tadd(value: URI): this {\n\t\tthis._map.set(value, value);\n\t\treturn this;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t}\n\n\tdelete(value: URI): boolean {\n\t\treturn this._map.delete(value);\n\t}\n\n\tforEach(callbackfn: (value: URI, value2: URI, set: Set<URI>) => void, thisArg?: any): void {\n\t\tthis._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n\t}\n\n\thas(value: URI): boolean {\n\t\treturn this._map.has(value);\n\t}\n\n\tentries(): IterableIterator<[URI, URI]> {\n\t\treturn this._map.entries();\n\t}\n\n\tkeys(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\tvalues(): IterableIterator<URI> {\n\t\treturn this._map.keys();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<URI> {\n\t\treturn this.keys();\n\t}\n}\n\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprotected trimNew(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._tail;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.previous;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._tail = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.next = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nabstract class Cache<K, V> extends LinkedMap<K, V> {\n\n\tprotected _limit: number;\n\tprotected _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\treturn this;\n\t}\n\n\tprotected checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n\n\tprotected abstract trim(newSize: number): void;\n}\n\nexport class LRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimOld(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n}\n\nexport class MRUCache<K, V> extends Cache<K, V> {\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper(limit, ratio);\n\t}\n\n\tprotected override trim(newSize: number) {\n\t\tthis.trimNew(newSize);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tif (this._limit <= this.size && !this.has(key)) {\n\t\t\tthis.trim(Math.round(this._limit * this._ratio) - 1);\n\t\t}\n\n\t\tsuper.set(key, value);\n\t\treturn this;\n\t}\n}\n\nexport class CounterSet<T> {\n\n\tprivate map = new Map<T, number>();\n\n\tadd(value: T): CounterSet<T> {\n\t\tthis.map.set(value, (this.map.get(value) || 0) + 1);\n\t\treturn this;\n\t}\n\n\tdelete(value: T): boolean {\n\t\tlet counter = this.map.get(value) || 0;\n\n\t\tif (counter === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tcounter--;\n\n\t\tif (counter === 0) {\n\t\t\tthis.map.delete(value);\n\t\t} else {\n\t\t\tthis.map.set(value, counter);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\thas(value: T): boolean {\n\t\treturn this.map.has(value);\n\t}\n}\n\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap<K, V> {\n\n\tprivate readonly _m1 = new Map<K, V>();\n\tprivate readonly _m2 = new Map<V, K>();\n\n\tconstructor(entries?: readonly (readonly [K, V])[]) {\n\t\tif (entries) {\n\t\t\tfor (const [key, value] of entries) {\n\t\t\t\tthis.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._m1.clear();\n\t\tthis._m2.clear();\n\t}\n\n\tset(key: K, value: V): void {\n\t\tthis._m1.set(key, value);\n\t\tthis._m2.set(value, key);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._m1.get(key);\n\t}\n\n\tgetKey(value: V): K | undefined {\n\t\treturn this._m2.get(value);\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst value = this._m1.get(key);\n\t\tif (value === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._m1.delete(key);\n\t\tthis._m2.delete(value);\n\t\treturn true;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: BidirectionalMap<K, V>) => void, thisArg?: any): void {\n\t\tthis._m1.forEach((value, key) => {\n\t\t\tcallbackfn.call(thisArg, value, key, this);\n\t\t});\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._m1.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._m1.values();\n\t}\n}\n\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n\n\tget(key: K): ReadonlySet<V> {\n\t\tconst values = this.map.get(key);\n\t\tif (!values) {\n\t\t\treturn new Set<V>();\n\t\t}\n\t\treturn values;\n\t}\n}\n\nexport function mapsStrictEqualIgnoreOrder(a: Map<unknown, unknown>, b: Map<unknown, unknown>): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\n\tif (a.size !== b.size) {\n\t\treturn false;\n\t}\n\n\tfor (const [key, value] of a) {\n\t\tif (!b.has(key) || b.get(key) !== value) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tfor (const [key] of b) {\n\t\tif (!a.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * A map that is addressable with 2 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n\tprivate _data: { [key: string | number]: { [key: string | number]: TValue | undefined } | undefined } = {};\n\n\tpublic set(first: TFirst, second: TSecond, value: TValue): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = {};\n\t\t}\n\t\tthis._data[first as string | number]![second] = value;\n\t}\n\n\tpublic get(first: TFirst, second: TSecond): TValue | undefined {\n\t\treturn this._data[first as string | number]?.[second];\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const second in this._data[first]) {\n\t\t\t\tconst value = this._data[first]![second];\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 3 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class ThreeKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TValue> {\n\tprivate _data: { [key: string | number]: TwoKeyMap<TSecond, TThird, TValue> | undefined } = {};\n\n\tpublic set(first: TFirst, second: TSecond, third: TThird, value: TValue): void {\n\t\tif (!this._data[first]) {\n\t\t\tthis._data[first] = new TwoKeyMap();\n\t\t}\n\t\tthis._data[first as string | number]!.set(second, third, value);\n\t}\n\n\tpublic get(first: TFirst, second: TSecond, third: TThird): TValue | undefined {\n\t\treturn this._data[first as string | number]?.get(second, third);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data = {};\n\t}\n\n\tpublic *values(): IterableIterator<TValue> {\n\t\tfor (const first in this._data) {\n\t\t\tfor (const value of this._data[first]!.values()) {\n\t\t\t\tif (value) {\n\t\t\t\t\tyield value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A map that is addressable with 4 separate keys. This is useful in high performance scenarios\n * where creating a composite key whenever the data is accessed is too expensive.\n */\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n\tprivate _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n\tpublic set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n\t\tif (!this._data.get(first, second)) {\n\t\t\tthis._data.set(first, second, new TwoKeyMap());\n\t\t}\n\t\tthis._data.get(first, second)!.set(third, fourth, value);\n\t}\n\n\tpublic get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n\t\treturn this._data.get(first, second)?.get(third, fourth);\n\t}\n\n\tpublic clear(): void {\n\t\tthis._data.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is Iterable<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function wrap<T>(iterableOrElement: Iterable<T> | T): Iterable<T> {\n\t\tif (is(iterableOrElement)) {\n\t\t\treturn iterableOrElement;\n\t\t} else {\n\t\t\treturn single(iterableOrElement);\n\t\t}\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function* reverse<T>(array: Array<T>): Iterable<T> {\n\t\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\t\tyield array[i];\n\t\t}\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element, i++)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): R | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* flatMap<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => Iterable<R>): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield* fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tyield* iterable;\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\texport async function asyncToArray<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is Iterable<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function wrap<T>(iterableOrElement: Iterable<T> | T): Iterable<T> {\n\t\tif (is(iterableOrElement)) {\n\t\t\treturn iterableOrElement;\n\t\t} else {\n\t\t\treturn single(iterableOrElement);\n\t\t}\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function* reverse<T>(array: Array<T>): Iterable<T> {\n\t\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\t\tyield array[i];\n\t\t}\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T, i: number) => unknown): boolean {\n\t\tlet i = 0;\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element, i++)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): R | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* flatMap<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => Iterable<R>): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield* fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tyield* iterable;\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\texport async function asyncToArray<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn Promise.resolve(result);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n\n// #region Disposable Tracking\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport interface DisposableInfo {\n\tvalue: IDisposable;\n\tsource: string | null;\n\tparent: IDisposable | null;\n\tisSingleton: boolean;\n\tidx: number;\n}\n\nexport class DisposableTracker implements IDisposableTracker {\n\tprivate static idx = 0;\n\n\tprivate readonly livingDisposables = new Map<IDisposable, DisposableInfo>();\n\n\tprivate getDisposableData(d: IDisposable): DisposableInfo {\n\t\tlet val = this.livingDisposables.get(d);\n\t\tif (!val) {\n\t\t\tval = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n\t\t\tthis.livingDisposables.set(d, val);\n\t\t}\n\t\treturn val;\n\t}\n\n\ttrackDisposable(d: IDisposable): void {\n\t\tconst data = this.getDisposableData(d);\n\t\tif (!data.source) {\n\t\t\tdata.source =\n\t\t\t\tnew Error().stack!;\n\t\t}\n\t}\n\n\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\tconst data = this.getDisposableData(child);\n\t\tdata.parent = parent;\n\t}\n\n\tmarkAsDisposed(x: IDisposable): void {\n\t\tthis.livingDisposables.delete(x);\n\t}\n\n\tmarkAsSingleton(disposable: IDisposable): void {\n\t\tthis.getDisposableData(disposable).isSingleton = true;\n\t}\n\n\tprivate getRootParent(data: DisposableInfo, cache: Map<DisposableInfo, DisposableInfo>): DisposableInfo {\n\t\tconst cacheValue = cache.get(data);\n\t\tif (cacheValue) {\n\t\t\treturn cacheValue;\n\t\t}\n\n\t\tconst result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n\t\tcache.set(data, result);\n\t\treturn result;\n\t}\n\n\tgetTrackedDisposables(): IDisposable[] {\n\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\tconst leaking = [...this.livingDisposables.entries()]\n\t\t\t.filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n\t\t\t.flatMap(([k]) => k);\n\n\t\treturn leaking;\n\t}\n\n\tcomputeLeakingDisposables(maxReported = 10, preComputedLeaks?: DisposableInfo[]): { leaks: DisposableInfo[]; details: string } | undefined {\n\t\tlet uncoveredLeakingObjs: DisposableInfo[] | undefined;\n\t\tif (preComputedLeaks) {\n\t\t\tuncoveredLeakingObjs = preComputedLeaks;\n\t\t} else {\n\t\t\tconst rootParentCache = new Map<DisposableInfo, DisposableInfo>();\n\n\t\t\tconst leakingObjects = [...this.livingDisposables.values()]\n\t\t\t\t.filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n\n\t\t\tif (leakingObjects.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst leakingObjsSet = new Set(leakingObjects.map(o => o.value));\n\n\t\t\t// Remove all objects that are a child of other leaking objects. Assumes there are no cycles.\n\t\t\tuncoveredLeakingObjs = leakingObjects.filter(l => {\n\t\t\t\treturn !(l.parent && leakingObjsSet.has(l.parent));\n\t\t\t});\n\n\t\t\tif (uncoveredLeakingObjs.length === 0) {\n\t\t\t\tthrow new Error('There are cyclic diposable chains!');\n\t\t\t}\n\t\t}\n\n\t\tif (!uncoveredLeakingObjs) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfunction getStackTracePath(leaking: DisposableInfo): string[] {\n\t\t\tfunction removePrefix(array: string[], linesToRemove: (string | RegExp)[]) {\n\t\t\t\twhile (array.length > 0 && linesToRemove.some(regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp))) {\n\t\t\t\t\tarray.shift();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lines = leaking.source!.split('\\n').map(p => p.trim().replace('at ', '')).filter(l => l !== '');\n\t\t\tremovePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n\t\t\treturn lines.reverse();\n\t\t}\n\n\t\tconst stackTraceStarts = new SetMap<string, DisposableInfo>();\n\t\tfor (const leaking of uncoveredLeakingObjs) {\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tfor (let i = 0; i <= stackTracePath.length; i++) {\n\t\t\t\tstackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n\t\t\t}\n\t\t}\n\n\t\t// Put earlier leaks first\n\t\tuncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n\n\t\tlet message = '';\n\n\t\tlet i = 0;\n\t\tfor (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n\t\t\ti++;\n\t\t\tconst stackTracePath = getStackTracePath(leaking);\n\t\t\tconst stackTraceFormattedLines = [];\n\n\t\t\tfor (let i = 0; i < stackTracePath.length; i++) {\n\t\t\t\tlet line = stackTracePath[i];\n\t\t\t\tconst starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n\t\t\t\tline = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n\n\t\t\t\tconst prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n\t\t\t\tconst continuations = groupBy([...prevStarts].map(d => getStackTracePath(d)[i]), v => v);\n\t\t\t\tdelete continuations[stackTracePath[i]];\n\t\t\t\tfor (const [cont, set] of Object.entries(continuations)) {\n\t\t\t\t\tstackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n\t\t\t\t}\n\n\t\t\t\tstackTraceFormattedLines.unshift(line);\n\t\t\t}\n\n\t\t\tmessage += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n\t\t}\n\n\t\tif (uncoveredLeakingObjs.length > maxReported) {\n\t\t\tmessage += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n\t\t}\n\n\t\treturn { leaks: uncoveredLeakingObjs, details: message };\n\t}\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nexport function markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\n// #endregion\n\n/**\n * An object that performs a cleanup operation when `.dispose()` is called.\n *\n * Some examples of how disposables are used:\n *\n * - An event listener that removes itself when `.dispose()` is called.\n * - A resource such as a file system watcher that cleans up the resource when `.dispose()` is called.\n * - The return value from registering a provider. When `.dispose()` is called, the provider is unregistered.\n */\nexport interface IDisposable {\n\tdispose(): void;\n}\n\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable<E extends any>(thing: E): thing is E & IDisposable {\n\treturn typeof thing === 'object' && thing !== null && typeof (<IDisposable><any>thing).dispose === 'function' && (<IDisposable><any>thing).dispose.length === 0;\n}\n\n/**\n * Disposes of the value(s) passed in.\n */\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends Iterable<T> = Iterable<T>>(disposables: A): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | Iterable<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tconst errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new AggregateError(errors, 'Encountered errors while disposing of store');\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\nexport function disposeIfDisposable<T extends IDisposable | object>(disposables: Array<T>): Array<T> {\n\tfor (const d of disposables) {\n\t\tif (isDisposable(d)) {\n\t\t\td.dispose();\n\t\t}\n\t}\n\treturn [];\n}\n\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: createSingleCallFunction(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate readonly _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * @return `true` if this object has been disposed of.\n\t */\n\tpublic get isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\tif (this._toDispose.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._toDispose);\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Add a new {@link IDisposable disposable} to the collection.\n\t */\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n\n\t/**\n\t * Deletes a disposable from store and disposes of it. This will not throw or warn and proceed to dispose the\n\t * disposable even when the disposable is not part in the store.\n\t */\n\tpublic delete<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot dispose a disposable on itself!');\n\t\t}\n\t\tthis._toDispose.delete(o);\n\t\to.dispose();\n\t}\n\n\t/**\n\t * Deletes the value from the store, but does not dispose it.\n\t */\n\tpublic deleteAndLeak<T extends IDisposable>(o: T): void {\n\t\tif (!o) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._toDispose.has(o)) {\n\t\t\tthis._toDispose.delete(o);\n\t\t\tsetParentOfDisposable(o, null);\n\t\t}\n\t}\n}\n\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport abstract class Disposable implements IDisposable {\n\n\t/**\n\t * A disposable that does nothing when it is disposed of.\n\t *\n\t * TODO: This should not be a static property.\n\t */\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprotected readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\t/**\n\t * Adds `o` to the collection of disposables managed by this object.\n\t */\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * Resets the stored value and disposed of the previously stored value.\n\t */\n\tclear(): void {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed like {@link MutableDisposable}, but the value must\n * exist and cannot be undefined.\n */\nexport class MandatoryMutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate readonly _disposable = new MutableDisposable<T>();\n\tprivate _isDisposed = false;\n\n\tconstructor(initialValue: T) {\n\t\tthis._disposable.value = initialValue;\n\t}\n\n\tget value(): T {\n\t\treturn this._disposable.value!;\n\t}\n\n\tset value(value: T) {\n\t\tif (this._isDisposed || value === this._disposable.value) {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposable.value = value;\n\t}\n\n\tdispose() {\n\t\tthis._isDisposed = true;\n\t\tthis._disposable.dispose();\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable implements IDisposable {\n\n\tdispose: () => void = () => { };\n\tunset: () => void = () => { };\n\tisset: () => boolean = () => false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tset(fn: Function) {\n\t\tlet callback: Function | undefined = fn;\n\t\tthis.unset = () => callback = undefined;\n\t\tthis.isset = () => callback !== undefined;\n\t\tthis.dispose = () => {\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t\tcallback = undefined;\n\t\t\t\tmarkAsDisposed(this);\n\t\t\t}\n\t\t};\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = createSingleCallFunction(() => {\n\t\t\tif (--reference.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap<K, V extends IDisposable = IDisposable> implements IDisposable {\n\n\tprivate readonly _store = new Map<K, V>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Disposes of all stored values and mark this object as disposed.\n\t *\n\t * Trying to use this object after it has been disposed of is an error.\n\t */\n\tdispose(): void {\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clearAndDisposeAll();\n\t}\n\n\t/**\n\t * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n\t */\n\tclearAndDisposeAll(): void {\n\t\tif (!this._store.size) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdispose(this._store.values());\n\t\t} finally {\n\t\t\tthis._store.clear();\n\t\t}\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._store.has(key);\n\t}\n\n\tget size(): number {\n\t\treturn this._store.size;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._store.get(key);\n\t}\n\n\tset(key: K, value: V, skipDisposeOnOverwrite = false): void {\n\t\tif (this._isDisposed) {\n\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n\t\t}\n\n\t\tif (!skipDisposeOnOverwrite) {\n\t\t\tthis._store.get(key)?.dispose();\n\t\t}\n\n\t\tthis._store.set(key, value);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map and also dispose of it.\n\t */\n\tdeleteAndDispose(key: K): void {\n\t\tthis._store.get(key)?.dispose();\n\t\tthis._store.delete(key);\n\t}\n\n\t/**\n\t * Delete the value stored for `key` from this map but return it. The caller is\n\t * responsible for disposing of the value.\n\t */\n\tdeleteAndLeak(key: K): V | undefined {\n\t\tconst value = this._store.get(key);\n\t\tthis._store.delete(key);\n\t\treturn value;\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this._store.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this._store.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this._store[Symbol.iterator]();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// fake definition so that the valid layers check won't trip on this\ndeclare const globalThis: { performance?: { now(): number } };\n\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tprivate readonly _now: () => number;\n\n\tpublic static create(highResolution?: boolean): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution?: boolean) {\n\t\tthis._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance!.now.bind(globalThis.performance);\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic reset(): void {\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from './cancellation.js';\nimport { diffSets } from './collections.js';\nimport { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { combinedDisposable, Disposable, DisposableMap, DisposableStore, IDisposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { IObservable, IObserver } from './observable.js';\nimport { StopWatch } from './stopwatch.js';\nimport { MicrotaskDelay } from './symbols.js';\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a listener is GC'ed without having been disposed. This is a LEAK.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableListenerGCedWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableDisposeWithListenerWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nconst _enableSnapshotPotentialLeakWarning = false\n\t// || Boolean(\"TRUE\") // causes a linter warning so that it cannot be pushed\n\t;\n\n/**\n * An event with zero or one parameters that can be subscribed to. The event is a function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\tfunction _addLeakageTraceLogic(options: EmitterOptions) {\n\t\tif (_enableSnapshotPotentialLeakWarning) {\n\t\t\tconst { onDidAddListener: origListenerDidAdd } = options;\n\t\t\tconst stack = Stacktrace.create();\n\t\t\tlet count = 0;\n\t\t\toptions.onDidAddListener = () => {\n\t\t\t\tif (++count === 2) {\n\t\t\t\t\tconsole.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n\t\t\t\t\tstack.print();\n\t\t\t\t}\n\t\t\t\torigListenerDidAdd?.();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Given an event, returns another event which debounces calls and defers the listeners to a later task via a shared\n\t * `setTimeout`. The event is converted into a signal (`Event<void>`) to avoid additional object creation as a\n\t * result of merging events and to try prevent race conditions that could arise when using related deferred and\n\t * non-deferred events.\n\t *\n\t * This is useful for deferring non-critical work (eg. general UI updates) to ensure it does not block critical work\n\t * (eg. latency of keypress to text rendered).\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function defer(event: Event<unknown>, disposable?: DisposableStore): Event<void> {\n\t\treturn debounce<unknown, void>(event, () => void 0, 0, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable | undefined = undefined;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event, returns another event which only fires once, and only when the condition is met.\n\t *\n\t * @param event The event source for the new event.\n\t */\n\texport function onceIf<T>(event: Event<T>, condition: (e: T) => boolean): Event<T> {\n\t\treturn Event.once(Event.filter(event, condition));\n\t}\n\n\t/**\n\t * Maps an event of one type into an event of another type using a mapping function, similar to how\n\t * `Array.prototype.map` works.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param map The mapping function.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O, disposable?: DisposableStore): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that performs some function on the event object before firing.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param each The function to perform on the event object.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void, disposable?: DisposableStore): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n\t}\n\n\t/**\n\t * Wraps an event in another event that fires only when some condition is met.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param filter The filter function that defines the condition. The event will fire for the object if this function\n\t * returns true.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T, disposable?: DisposableStore): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R, disposable?: DisposableStore): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean, disposable?: DisposableStore): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\tconst disposable = combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e))));\n\t\t\treturn addAndReturnDisposable(disposable, disposables);\n\t\t};\n\t}\n\n\t/**\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O, disposable?: DisposableStore): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t}, disposable);\n\t}\n\n\tfunction snapshot<T>(event: Event<T>, disposable: DisposableStore | undefined): Event<T> {\n\t\tlet listener: IDisposable | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tlistener?.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<T>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Adds the IDisposable to the store if it's set, and returns it. Useful to\n\t * Event function implementation.\n\t */\n\tfunction addAndReturnDisposable<T extends IDisposable>(d: T, store: DisposableStore | IDisposable[] | undefined): T {\n\t\tif (store instanceof Array) {\n\t\t\tstore.push(d);\n\t\t} else if (store) {\n\t\t\tstore.add(d);\n\t\t}\n\t\treturn d;\n\t}\n\n\t/**\n\t * Given an event, creates a new emitter that event that will debounce events based on {@link delay} and give an\n\t * array event object of all events that fired.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The original event to debounce.\n\t * @param merge A function that reduces all events into a single event.\n\t * @param delay The number of milliseconds to debounce.\n\t * @param leading Whether to fire a leading event without debouncing.\n\t * @param flushOnListenerRemove Whether to fire all debounced events when a listener is removed. If this is not\n\t * specified, some events could go missing. Use this if it's important that all events are processed, even if the\n\t * listener gets disposed before the debounced event fires.\n\t * @param leakWarningThreshold See {@link EmitterOptions.leakWarningThreshold}.\n\t * @param disposable A disposable store to register the debounce emitter to.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number | typeof MicrotaskDelay, leading?: boolean, flushOnListenerRemove?: boolean, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number | typeof MicrotaskDelay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold?: number, disposable?: DisposableStore): Event<O> {\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\t\tlet doFire: (() => void) | undefined;\n\n\t\tconst options: EmitterOptions | undefined = {\n\t\t\tleakWarningThreshold,\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tdoFire = () => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof delay === 'number') {\n\t\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\t\thandle = setTimeout(doFire, delay);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (handle === undefined) {\n\t\t\t\t\t\t\thandle = 0;\n\t\t\t\t\t\t\tqueueMicrotask(doFire);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tonWillRemoveListener() {\n\t\t\t\tif (flushOnListenerRemove && numDebouncedCalls > 0) {\n\t\t\t\t\tdoFire?.();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tdoFire = undefined;\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t};\n\n\t\tif (!disposable) {\n\t\t\t_addLeakageTraceLogic(options);\n\t\t}\n\n\t\tconst emitter = new Emitter<O>(options);\n\n\t\tdisposable?.add(emitter);\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces an event, firing after some delay (default=0) with an array of all event original objects.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t */\n\texport function accumulate<T>(event: Event<T>, delay: number = 0, disposable?: DisposableStore): Event<T[]> {\n\t\treturn Event.debounce<T, T[]>(event, (last, e) => {\n\t\t\tif (!last) {\n\t\t\t\treturn [e];\n\t\t\t}\n\t\t\tlast.push(e);\n\t\t\treturn last;\n\t\t}, delay, undefined, true, undefined, disposable);\n\t}\n\n\t/**\n\t * Filters an event such that some condition is _not_ met more than once in a row, effectively ensuring duplicate\n\t * event objects from different sources do not fire the same event object.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param equals The equality condition.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t *\n\t * @example\n\t * ```\n\t * // Fire only one time when a single window is opened or focused\n\t * Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow))\n\t * ```\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b, disposable?: DisposableStore): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t}, disposable);\n\t}\n\n\t/**\n\t * Splits an event whose parameter is a union type into 2 separate events for each type in the union.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @example\n\t * ```\n\t * const event = new EventEmitter<number | undefined>().event;\n\t * const [numberEvent, undefinedEvent] = Event.split(event, isUndefined);\n\t * ```\n\t *\n\t * @param event The event source for the new event.\n\t * @param isT A function that determines what event is of the first type.\n\t * @param disposable A disposable store to add the new EventEmitter to.\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T, disposable?: DisposableStore): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT, disposable),\n\t\t\tEvent.filter(event, e => !isT(e), disposable) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * Buffers an event until it has a listener attached.\n\t *\n\t * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n\t * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n\t * returned event causes this utility to leak a listener on the original event.\n\t *\n\t * @param event The event source for the new event.\n\t * @param flushAfterTimeout Determines whether to flush the buffer after a timeout immediately or after a\n\t * `setTimeout` when the first event listener is added.\n\t * @param _buffer Internal: A source event array used for tests.\n\t *\n\t * @example\n\t * ```\n\t * // Start accumulating events, when the first listener is attached, flush\n\t * // the event after a timeout such that multiple listeners attached before\n\t * // the timeout would receive the event\n\t * this.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = [], disposable?: DisposableStore): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(listener);\n\t\t}\n\n\t\tconst flush = () => {\n\t\t\tbuffer?.forEach(e => emitter.fire(e));\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t\tif (disposable) {\n\t\t\t\t\t\tdisposable.add(listener);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidAddFirstListener() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonDidRemoveLastListener() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\tif (disposable) {\n\t\t\tdisposable.add(emitter);\n\t\t}\n\n\t\treturn emitter.event;\n\t}\n\t/**\n\t * Wraps the event in an {@link IChainableEvent}, allowing a more functional programming style.\n\t *\n\t * @example\n\t * ```\n\t * // Normal\n\t * const onEnterPressNormal = Event.filter(\n\t *   Event.map(onKeyPress.event, e => new StandardKeyboardEvent(e)),\n\t *   e.keyCode === KeyCode.Enter\n\t * ).event;\n\t *\n\t * // Using chain\n\t * const onEnterPressChain = Event.chain(onKeyPress.event, $ => $\n\t *   .map(e => new StandardKeyboardEvent(e))\n\t *   .filter(e => e.keyCode === KeyCode.Enter)\n\t * );\n\t * ```\n\t */\n\texport function chain<T, R>(event: Event<T>, sythensize: ($: IChainableSythensis<T>) => IChainableSythensis<R>): Event<R> {\n\t\tconst fn: Event<R> = (listener, thisArgs, disposables) => {\n\t\t\tconst cs = sythensize(new ChainableSynthesis()) as ChainableSynthesis;\n\t\t\treturn event(function (value) {\n\t\t\t\tconst result = cs.evaluate(value);\n\t\t\t\tif (result !== HaltChainable) {\n\t\t\t\t\tlistener.call(thisArgs, result);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\n\t\treturn fn;\n\t}\n\n\tconst HaltChainable = Symbol('HaltChainable');\n\n\tclass ChainableSynthesis implements IChainableSythensis<any> {\n\t\tprivate readonly steps: ((input: any) => unknown)[] = [];\n\n\t\tmap<O>(fn: (i: any) => O): this {\n\t\t\tthis.steps.push(fn);\n\t\t\treturn this;\n\t\t}\n\n\t\tforEach(fn: (i: any) => void): this {\n\t\t\tthis.steps.push(v => {\n\t\t\t\tfn(v);\n\t\t\t\treturn v;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tfilter(fn: (e: any) => boolean): this {\n\t\t\tthis.steps.push(v => fn(v) ? v : HaltChainable);\n\t\t\treturn this;\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: any) => R, initial?: R | undefined): this {\n\t\t\tlet last = initial;\n\t\t\tthis.steps.push(v => {\n\t\t\t\tlast = merge(last, v);\n\t\t\t\treturn last;\n\t\t\t});\n\t\t\treturn this;\n\t\t}\n\n\t\tlatch(equals: (a: any, b: any) => boolean = (a, b) => a === b): ChainableSynthesis {\n\t\t\tlet firstCall = true;\n\t\t\tlet cache: any;\n\t\t\tthis.steps.push(value => {\n\t\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\t\tfirstCall = false;\n\t\t\t\tcache = value;\n\t\t\t\treturn shouldEmit ? value : HaltChainable;\n\t\t\t});\n\n\t\t\treturn this;\n\t\t}\n\n\t\tpublic evaluate(value: any) {\n\t\t\tfor (const step of this.steps) {\n\t\t\t\tvalue = step(value);\n\t\t\t\tif (value === HaltChainable) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\t}\n\n\texport interface IChainableSythensis<T> {\n\t\tmap<O>(fn: (i: T) => O): IChainableSythensis<O>;\n\t\tforEach(fn: (i: T) => void): IChainableSythensis<T>;\n\t\tfilter<R extends T>(fn: (e: T) => e is R): IChainableSythensis<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableSythensis<T>;\n\t\treduce<R>(merge: (last: R, event: T) => R, initial: R): IChainableSythensis<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R): IChainableSythensis<R>;\n\t\tlatch(equals?: (a: T, b: T) => boolean): IChainableSythensis<T>;\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a node event emitter.\n\t */\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\t/**\n\t * Creates an {@link Event} from a DOM event emitter.\n\t */\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\t/**\n\t * Creates a promise out of an event, using the {@link Event.once} helper.\n\t */\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n\n\t/**\n\t * Creates an event out of a promise that fires once when the promise is\n\t * resolved with the result of the promise or `undefined`.\n\t */\n\texport function fromPromise<T>(promise: Promise<T>): Event<T | undefined> {\n\t\tconst result = new Emitter<T | undefined>();\n\n\t\tpromise.then(res => {\n\t\t\tresult.fire(res);\n\t\t}, () => {\n\t\t\tresult.fire(undefined);\n\t\t}).finally(() => {\n\t\t\tresult.dispose();\n\t\t});\n\n\t\treturn result.event;\n\t}\n\n\t/**\n\t * A convenience function for forwarding an event to another emitter which\n\t * improves readability.\n\t *\n\t * This is similar to {@link Relay} but allows instantiating and forwarding\n\t * on a single line and also allows for multiple source events.\n\t * @param from The event to forward.\n\t * @param to The emitter to forward the event to.\n\t * @example\n\t * Event.forward(event, emitter);\n\t * // equivalent to\n\t * event(e => emitter.fire(e));\n\t * // equivalent to\n\t * event(emitter.fire, emitter);\n\t */\n\texport function forward<T>(from: Event<T>, to: Emitter<T>): IDisposable {\n\t\treturn from(e => to.fire(e));\n\t}\n\n\t/**\n\t * Adds a listener to an event and calls the listener immediately with undefined as the event object.\n\t *\n\t * @example\n\t * ```\n\t * // Initialize the UI and update it when dataChangeEvent fires\n\t * runAndSubscribe(dataChangeEvent, () => this._updateUI());\n\t * ```\n\t */\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T) => unknown, initial: T): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown): IDisposable;\n\texport function runAndSubscribe<T>(event: Event<T>, handler: (e: T | undefined) => unknown, initial?: T): IDisposable {\n\t\thandler(initial);\n\t\treturn event(e => handler(e));\n\t}\n\n\tclass EmitterObserver<T> implements IObserver {\n\n\t\treadonly emitter: Emitter<T>;\n\n\t\tprivate _counter = 0;\n\t\tprivate _hasChanged = false;\n\n\t\tconstructor(readonly _observable: IObservable<T, any>, store: DisposableStore | undefined) {\n\t\t\tconst options: EmitterOptions = {\n\t\t\t\tonWillAddFirstListener: () => {\n\t\t\t\t\t_observable.addObserver(this);\n\n\t\t\t\t\t// Communicate to the observable that we received its current value and would like to be notified about future changes.\n\t\t\t\t\tthis._observable.reportChanges();\n\t\t\t\t},\n\t\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\t\t_observable.removeObserver(this);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (!store) {\n\t\t\t\t_addLeakageTraceLogic(options);\n\t\t\t}\n\t\t\tthis.emitter = new Emitter<T>(options);\n\t\t\tif (store) {\n\t\t\t\tstore.add(this.emitter);\n\t\t\t}\n\t\t}\n\n\t\tbeginUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter++;\n\t\t}\n\n\t\thandlePossibleChange<T>(_observable: IObservable<T, unknown>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t}\n\n\t\thandleChange<T, TChange>(_observable: IObservable<T, TChange>, _change: TChange): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._hasChanged = true;\n\t\t}\n\n\t\tendUpdate<T>(_observable: IObservable<T, void>): void {\n\t\t\t// assert(_observable === this.obs);\n\t\t\tthis._counter--;\n\t\t\tif (this._counter === 0) {\n\t\t\t\tthis._observable.reportChanges();\n\t\t\t\tif (this._hasChanged) {\n\t\t\t\t\tthis._hasChanged = false;\n\t\t\t\t\tthis.emitter.fire(this._observable.get());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an event emitter that is fired when the observable changes.\n\t * Each listeners subscribes to the emitter.\n\t */\n\texport function fromObservable<T>(obs: IObservable<T, any>, store?: DisposableStore): Event<T> {\n\t\tconst observer = new EmitterObserver(obs, store);\n\t\treturn observer.emitter.event;\n\t}\n\n\t/**\n\t * Each listener is attached to the observable directly.\n\t */\n\texport function fromObservableLight(observable: IObservable<any>): Event<void> {\n\t\treturn (listener, thisArgs, disposables) => {\n\t\t\tlet count = 0;\n\t\t\tlet didChange = false;\n\t\t\tconst observer: IObserver = {\n\t\t\t\tbeginUpdate() {\n\t\t\t\t\tcount++;\n\t\t\t\t},\n\t\t\t\tendUpdate() {\n\t\t\t\t\tcount--;\n\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\tobservable.reportChanges();\n\t\t\t\t\t\tif (didChange) {\n\t\t\t\t\t\t\tdidChange = false;\n\t\t\t\t\t\t\tlistener.call(thisArgs);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\thandlePossibleChange() {\n\t\t\t\t\t// noop\n\t\t\t\t},\n\t\t\t\thandleChange() {\n\t\t\t\t\tdidChange = true;\n\t\t\t\t}\n\t\t\t};\n\t\t\tobservable.addObserver(observer);\n\t\t\tobservable.reportChanges();\n\t\t\tconst disposable = {\n\t\t\t\tdispose() {\n\t\t\t\t\tobservable.removeObserver(observer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(disposable);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(disposable);\n\t\t\t}\n\n\t\t\treturn disposable;\n\t\t};\n\t}\n}\n\nexport interface EmitterOptions {\n\t/**\n\t * Optional function that's called *before* the very first listener is added\n\t */\n\tonWillAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called *after* the very first listener is added\n\t */\n\tonDidAddFirstListener?: Function;\n\t/**\n\t * Optional function that's called after a listener is added\n\t */\n\tonDidAddListener?: Function;\n\t/**\n\t * Optional function that's called *after* remove the very last listener\n\t */\n\tonDidRemoveLastListener?: Function;\n\t/**\n\t * Optional function that's called *before* a listener is removed\n\t */\n\tonWillRemoveListener?: Function;\n\t/**\n\t * Optional function that's called when a listener throws an error. Defaults to\n\t * {@link onUnexpectedError}\n\t */\n\tonListenerError?: (e: any) => void;\n\t/**\n\t * Number of listeners that are allowed before assuming a leak. Default to\n\t * a globally configured value\n\t *\n\t * @see setGlobalLeakWarningThreshold\n\t */\n\tleakWarningThreshold?: number;\n\t/**\n\t * Pass in a delivery queue, which is useful for ensuring\n\t * in order event delivery across multiple emitters.\n\t */\n\tdeliveryQueue?: EventDeliveryQueue;\n\n\t/** ONLY enable this during development */\n\t_profName?: string;\n}\n\n\nexport class EventProfiling {\n\n\tstatic readonly all = new Set<EventProfiling>();\n\n\tprivate static _idPool = 0;\n\n\treadonly name: string;\n\tpublic listenerCount: number = 0;\n\tpublic invocationCount = 0;\n\tpublic elapsedOverall = 0;\n\tpublic durations: number[] = [];\n\n\tprivate _stopWatch?: StopWatch;\n\n\tconstructor(name: string) {\n\t\tthis.name = `${name}_${EventProfiling._idPool++}`;\n\t\tEventProfiling.all.add(this);\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch();\n\t\tthis.listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis.durations.push(elapsed);\n\t\t\tthis.elapsedOverall += elapsed;\n\t\t\tthis.invocationCount += 1;\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate static _idPool = 1;\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\tprivate readonly _errorHandler: (err: Error) => void,\n\t\treadonly threshold: number,\n\t\treadonly name: string = (LeakageMonitor._idPool++).toString(16).padStart(3, '0')\n\t) { }\n\n\tdispose(): void {\n\t\tthis._stacks?.clear();\n\t}\n\n\tcheck(stack: Stacktrace, listenerCount: number): undefined | (() => void) {\n\n\t\tconst threshold = this.threshold;\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst count = (this._stacks.get(stack.value) || 0);\n\t\tthis._stacks.set(stack.value, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\tconst [topStack, topCount] = this.getMostFrequentStack()!;\n\t\t\tconst message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n\t\t\tconsole.warn(message);\n\t\t\tconsole.warn(topStack!);\n\n\t\t\tconst error = new ListenerLeakError(message, topStack);\n\t\t\tthis._errorHandler(error);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack.value) || 0);\n\t\t\tthis._stacks!.set(stack.value, count - 1);\n\t\t};\n\t}\n\n\tgetMostFrequentStack(): [string, number] | undefined {\n\t\tif (!this._stacks) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet topStack: [string, number] | undefined;\n\t\tlet topCount: number = 0;\n\t\tfor (const [stack, count] of this._stacks) {\n\t\t\tif (!topStack || topCount < count) {\n\t\t\t\ttopStack = [stack, count];\n\t\t\t\ttopCount = count;\n\t\t\t}\n\t\t}\n\t\treturn topStack;\n\t}\n}\n\nclass Stacktrace {\n\n\tstatic create() {\n\t\tconst err = new Error();\n\t\treturn new Stacktrace(err.stack ?? '');\n\t}\n\n\tprivate constructor(readonly value: string) { }\n\n\tprint() {\n\t\tconsole.warn(this.value.split('\\n').slice(2).join('\\n'));\n\t}\n}\n\n// error that is logged when going over the configured listener threshold\nexport class ListenerLeakError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerLeakError';\n\t\tthis.stack = stack;\n\t}\n}\n\n// SEVERE error that is logged when having gone way over the configured listener\n// threshold so that the emitter refuses to accept more listeners\nexport class ListenerRefusalError extends Error {\n\tconstructor(message: string, stack: string) {\n\t\tsuper(message);\n\t\tthis.name = 'ListenerRefusalError';\n\t\tthis.stack = stack;\n\t}\n}\n\nlet id = 0;\nclass UniqueContainer<T> {\n\tstack?: Stacktrace;\n\tpublic id = id++;\n\tconstructor(public readonly value: T) { }\n}\nconst compactionThreshold = 2;\n\ntype ListenerContainer<T> = UniqueContainer<(data: T) => void>;\ntype ListenerOrListeners<T> = (ListenerContainer<T> | undefined)[] | ListenerContainer<T>;\n\nconst forEachListener = <T>(listeners: ListenerOrListeners<T>, fn: (c: ListenerContainer<T>) => void) => {\n\tif (listeners instanceof UniqueContainer) {\n\t\tfn(listeners);\n\t} else {\n\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\tconst l = listeners[i];\n\t\t\tif (l) {\n\t\t\t\tfn(l);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\nlet _listenerFinalizers: FinalizationRegistry<string> | undefined;\n\nif (_enableListenerGCedWarning) {\n\tconst leaks: string[] = [];\n\n\tsetInterval(() => {\n\t\tif (leaks.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.warn('[LEAKING LISTENERS] GC\\'ed these listeners that were NOT yet disposed:');\n\t\tconsole.warn(leaks.join('\\n'));\n\t\tleaks.length = 0;\n\t}, 3000);\n\n\t_listenerFinalizers = new FinalizationRegistry(heldValue => {\n\t\tif (typeof heldValue === 'string') {\n\t\t\tleaks.push(heldValue);\n\t\t}\n\t});\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed?: true;\n\tprivate _event?: Event<T>;\n\n\t/**\n\t * A listener, or list of listeners. A single listener is the most common\n\t * for event emitters (#185789), so we optimize that special case to avoid\n\t * wrapping it in an array (just like Node.js itself.)\n\t *\n\t * A list of listeners never 'downgrades' back to a plain function if\n\t * listeners are removed, for two reasons:\n\t *\n\t *  1. That's complicated (especially with the deliveryQueue)\n\t *  2. A listener with >1 listener is likely to have >1 listener again at\n\t *     some point, and swapping between arrays and functions may[citation needed]\n\t *     introduce unnecessary work and garbage.\n\t *\n\t * The array listeners can be 'sparse', to avoid reallocating the array\n\t * whenever any listener is added or removed. If more than `1 / compactionThreshold`\n\t * of the array is empty, only then is it resized.\n\t */\n\tprotected _listeners?: ListenerOrListeners<T>;\n\n\t/**\n\t * Always to be defined if _listeners is an array. It's no longer a true\n\t * queue, but holds the dispatching 'state'. If `fire()` is called on an\n\t * emitter, any work left in the _deliveryQueue is finished first.\n\t */\n\tprivate _deliveryQueue?: EventDeliveryQueuePrivate;\n\tprotected _size = 0;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n\t\t\t? new LeakageMonitor(options?.onListenerError ?? onUnexpectedError, this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold) :\n\t\t\tundefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t\tthis._deliveryQueue = this._options?.deliveryQueue as EventDeliveryQueuePrivate | undefined;\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\t// It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n\t\t\t// alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n\t\t\t// unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n\t\t\t// the following programming pattern is very popular:\n\t\t\t//\n\t\t\t// const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n\t\t\t// this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n\t\t\t// ...later...\n\t\t\t// this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n\n\t\t\tif (this._deliveryQueue?.current === this) {\n\t\t\t\tthis._deliveryQueue.reset();\n\t\t\t}\n\t\t\tif (this._listeners) {\n\t\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\t\tconst listeners = this._listeners;\n\t\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\t\tforEachListener(listeners, l => l.stack?.print());\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._listeners = undefined;\n\t\t\t\tthis._size = 0;\n\t\t\t}\n\t\t\tthis._options?.onDidRemoveLastListener?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tthis._event ??= (callback: (e: T) => unknown, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\tif (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n\t\t\t\tconst message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n\t\t\t\tconsole.warn(message);\n\n\t\t\t\tconst tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n\t\t\t\tconst error = new ListenerRefusalError(`${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`, tuple[0]);\n\t\t\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\t\t\terrorHandler(error);\n\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (this._disposed) {\n\t\t\t\t// todo: should we warn if a listener is added to a disposed emitter? This happens often\n\t\t\t\treturn Disposable.None;\n\t\t\t}\n\n\t\t\tif (thisArgs) {\n\t\t\t\tcallback = callback.bind(thisArgs);\n\t\t\t}\n\n\t\t\tconst contained = new UniqueContainer(callback);\n\n\t\t\tlet removeMonitor: Function | undefined;\n\t\t\tlet stack: Stacktrace | undefined;\n\t\t\tif (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tcontained.stack = Stacktrace.create();\n\t\t\t\tremoveMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n\t\t\t}\n\n\t\t\tif (_enableDisposeWithListenerWarning) {\n\t\t\t\tcontained.stack = stack ?? Stacktrace.create();\n\t\t\t}\n\n\t\t\tif (!this._listeners) {\n\t\t\t\tthis._options?.onWillAddFirstListener?.(this);\n\t\t\t\tthis._listeners = contained;\n\t\t\t\tthis._options?.onDidAddFirstListener?.(this);\n\t\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\t\tthis._deliveryQueue ??= new EventDeliveryQueuePrivate();\n\t\t\t\tthis._listeners = [this._listeners, contained];\n\t\t\t} else {\n\t\t\t\tthis._listeners.push(contained);\n\t\t\t}\n\t\t\tthis._options?.onDidAddListener?.(this);\n\n\t\t\tthis._size++;\n\n\n\t\t\tconst result = toDisposable(() => {\n\t\t\t\t_listenerFinalizers?.unregister(result);\n\t\t\t\tremoveMonitor?.();\n\t\t\t\tthis._removeListener(contained);\n\t\t\t});\n\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\tdisposables.add(result);\n\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\tdisposables.push(result);\n\t\t\t}\n\n\t\t\tif (_listenerFinalizers) {\n\t\t\t\tconst stack = new Error().stack!.split('\\n').slice(2, 3).join('\\n').trim();\n\t\t\t\tconst match = /(file:|vscode-file:\\/\\/vscode-app)?(\\/[^:]*:\\d+:\\d+)/.exec(stack);\n\t\t\t\t_listenerFinalizers.register(result, match?.[2] ?? stack, result);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\treturn this._event;\n\t}\n\n\tprivate _removeListener(listener: ListenerContainer<T>) {\n\t\tthis._options?.onWillRemoveListener?.(this);\n\n\t\tif (!this._listeners) {\n\t\t\treturn; // expected if a listener gets disposed\n\t\t}\n\n\t\tif (this._size === 1) {\n\t\t\tthis._listeners = undefined;\n\t\t\tthis._options?.onDidRemoveLastListener?.(this);\n\t\t\tthis._size = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// size > 1 which requires that listeners be a list:\n\t\tconst listeners = this._listeners as (ListenerContainer<T> | undefined)[];\n\n\t\tconst index = listeners.indexOf(listener);\n\t\tif (index === -1) {\n\t\t\tconsole.log('disposed?', this._disposed);\n\t\t\tconsole.log('size?', this._size);\n\t\t\tconsole.log('arr?', JSON.stringify(this._listeners));\n\t\t\tthrow new Error('Attempted to dispose unknown listener');\n\t\t}\n\n\t\tthis._size--;\n\t\tlisteners[index] = undefined;\n\n\t\tconst adjustDeliveryQueue = this._deliveryQueue!.current === this;\n\t\tif (this._size * compactionThreshold <= listeners.length) {\n\t\t\tlet n = 0;\n\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\tif (listeners[i]) {\n\t\t\t\t\tlisteners[n++] = listeners[i];\n\t\t\t\t} else if (adjustDeliveryQueue && n < this._deliveryQueue!.end) {\n\t\t\t\t\tthis._deliveryQueue!.end--;\n\t\t\t\t\tif (n < this._deliveryQueue!.i) {\n\t\t\t\t\t\tthis._deliveryQueue!.i--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlisteners.length = n;\n\t\t}\n\t}\n\n\tprivate _deliver(listener: undefined | UniqueContainer<(value: T) => void>, value: T) {\n\t\tif (!listener) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst errorHandler = this._options?.onListenerError || onUnexpectedError;\n\t\tif (!errorHandler) {\n\t\t\tlistener.value(value);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tlistener.value(value);\n\t\t} catch (e) {\n\t\t\terrorHandler(e);\n\t\t}\n\t}\n\n\t/** Delivers items in the queue. Assumes the queue is ready to go. */\n\tprivate _deliverQueue(dq: EventDeliveryQueuePrivate) {\n\t\tconst listeners = dq.current!._listeners! as (ListenerContainer<T> | undefined)[];\n\t\twhile (dq.i < dq.end) {\n\t\t\t// important: dq.i is incremented before calling deliver() because it might reenter deliverQueue()\n\t\t\tthis._deliver(listeners[dq.i++], dq.value as T);\n\t\t}\n\t\tdq.reset();\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._deliveryQueue?.current) {\n\t\t\tthis._deliverQueue(this._deliveryQueue);\n\t\t\tthis._perfMon?.stop(); // last fire() will have starting perfmon, stop it before starting the next dispatch\n\t\t}\n\n\t\tthis._perfMon?.start(this._size);\n\n\t\tif (!this._listeners) {\n\t\t\t// no-op\n\t\t} else if (this._listeners instanceof UniqueContainer) {\n\t\t\tthis._deliver(this._listeners, event);\n\t\t} else {\n\t\t\tconst dq = this._deliveryQueue!;\n\t\t\tdq.enqueue(this, event, this._listeners.length);\n\t\t\tthis._deliverQueue(dq);\n\t\t}\n\n\t\tthis._perfMon?.stop();\n\t}\n\n\thasListeners(): boolean {\n\t\treturn this._size > 0;\n\t}\n}\n\nexport interface EventDeliveryQueue {\n\t_isEventDeliveryQueue: true;\n}\n\nexport const createEventDeliveryQueue = (): EventDeliveryQueue => new EventDeliveryQueuePrivate();\n\nclass EventDeliveryQueuePrivate implements EventDeliveryQueue {\n\tdeclare _isEventDeliveryQueue: true;\n\n\t/**\n\t * Index in current's listener list.\n\t */\n\tpublic i = -1;\n\n\t/**\n\t * The last index in the listener's list to deliver.\n\t */\n\tpublic end = 0;\n\n\t/**\n\t * Emitter currently being dispatched on. Emitter._listeners is always an array.\n\t */\n\tpublic current?: Emitter<any>;\n\t/**\n\t * Currently emitting value. Defined whenever `current` is.\n\t */\n\tpublic value?: unknown;\n\n\tpublic enqueue<T>(emitter: Emitter<T>, value: T, end: number) {\n\t\tthis.i = 0;\n\t\tthis.end = end;\n\t\tthis.current = emitter;\n\t\tthis.value = value;\n\t}\n\n\tpublic reset() {\n\t\tthis.i = this.end; // force any current emission loop to stop, mainly for during dispose\n\t\tthis.current = undefined;\n\t\tthis.value = undefined;\n\t}\n}\n\nexport interface IWaitUntil {\n\ttoken: CancellationToken;\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport type IWaitUntilData<T> = Omit<Omit<T, 'waitUntil'>, 'token'>;\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[(ev: T) => void, IWaitUntilData<T>]>;\n\n\tasync fireAsync(data: IWaitUntilData<T>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tforEachListener(this._listeners, listener => this._asyncDeliveryQueue!.push([listener.value, data]));\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\ttoken,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, listener);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tlistener(event);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tpublic get isPaused(): boolean {\n\t\treturn this._isPaused !== 0;\n\t}\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tif (this._eventQueue.size > 0) {\n\t\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\t\tthis._eventQueue.clear();\n\t\t\t\t\tsuper.fire(this._mergeFn(events));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._size) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T; delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\n\t\tif (!this.hasListeners()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * An event emitter that multiplexes many events into a single event.\n *\n * @example Listen to the `onData` event of all `Thing`s, dynamically adding and removing `Thing`s\n * to the multiplexer as needed.\n *\n * ```typescript\n * const anythingDataMultiplexer = new EventMultiplexer<{ data: string }>();\n *\n * const thingListeners = DisposableMap<Thing, IDisposable>();\n *\n * thingService.onDidAddThing(thing => {\n *   thingListeners.set(thing, anythingDataMultiplexer.add(thing.onData);\n * });\n * thingService.onDidRemoveThing(thing => {\n *   thingListeners.deleteAndDispose(thing);\n * });\n *\n * anythingDataMultiplexer.event(e => {\n *   console.log('Something fired data ' + e.data)\n * });\n * ```\n */\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonWillAddFirstListener: () => this.onFirstListenerAdd(),\n\t\t\tonDidRemoveLastListener: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(createSingleCallFunction(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null }): void {\n\t\te.listener?.dispose();\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\n\t\tfor (const e of this.events) {\n\t\t\te.listener?.dispose();\n\t\t}\n\t\tthis.events = [];\n\t}\n}\n\nexport interface IDynamicListEventMultiplexer<TEventType> extends IDisposable {\n\treadonly event: Event<TEventType>;\n}\nexport class DynamicListEventMultiplexer<TItem, TEventType> implements IDynamicListEventMultiplexer<TEventType> {\n\tprivate readonly _store = new DisposableStore();\n\n\treadonly event: Event<TEventType>;\n\n\tconstructor(\n\t\titems: TItem[],\n\t\tonAddItem: Event<TItem>,\n\t\tonRemoveItem: Event<TItem>,\n\t\tgetEvent: (item: TItem) => Event<TEventType>\n\t) {\n\t\tconst multiplexer = this._store.add(new EventMultiplexer<TEventType>());\n\t\tconst itemListeners = this._store.add(new DisposableMap<TItem, IDisposable>());\n\n\t\tfunction addItem(instance: TItem) {\n\t\t\titemListeners.set(instance, multiplexer.add(getEvent(instance)));\n\t\t}\n\n\t\t// Existing items\n\t\tfor (const instance of items) {\n\t\t\taddItem(instance);\n\t\t}\n\n\t\t// Added items\n\t\tthis._store.add(onAddItem(instance => {\n\t\t\taddItem(instance);\n\t\t}));\n\n\t\t// Removed items\n\t\tthis._store.add(onRemoveItem(instance => {\n\t\t\titemListeners.deleteAndDispose(instance);\n\t\t}));\n\n\t\tthis.event = multiplexer.event;\n\t}\n\n\tdispose() {\n\t\tthis._store.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate data: { buffers: Function[] }[] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T>;\n\twrapEvent<T>(event: Event<T>, reduce: (last: T | undefined, event: T) => T): Event<T>;\n\twrapEvent<T, O>(event: Event<T>, reduce: (last: O | undefined, event: T) => O, initial: O): Event<O>;\n\twrapEvent<T, O>(event: Event<T>, reduce?: (last: T | O | undefined, event: T) => T | O, initial?: O): Event<O | T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst data = this.data[this.data.length - 1];\n\n\t\t\t\t// Non-reduce scenario\n\t\t\t\tif (!reduce) {\n\t\t\t\t\t// Buffering case\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tdata.buffers.push(() => listener.call(thisArgs, i));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Not buffering case\n\t\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reduce scenario\n\t\t\t\tconst reduceData = data as typeof data & {\n\t\t\t\t\t/**\n\t\t\t\t\t * The accumulated items that will be reduced.\n\t\t\t\t\t */\n\t\t\t\t\titems?: T[];\n\t\t\t\t\t/**\n\t\t\t\t\t * The reduced result cached to be shared with other listeners.\n\t\t\t\t\t */\n\t\t\t\t\treducedResult?: T | O;\n\t\t\t\t};\n\n\t\t\t\t// Not buffering case\n\t\t\t\tif (!reduceData) {\n\t\t\t\t\t// TODO: Is there a way to cache this reduce call for all listeners?\n\t\t\t\t\tlistener.call(thisArgs, reduce(initial, i));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Buffering case\n\t\t\t\treduceData.items ??= [];\n\t\t\t\treduceData.items.push(i);\n\t\t\t\tif (reduceData.buffers.length === 0) {\n\t\t\t\t\t// Include a single buffered function that will reduce all events when we're done buffering events\n\t\t\t\t\tdata.buffers.push(() => {\n\t\t\t\t\t\t// cache the reduced result so that the value can be shared across all listeners\n\t\t\t\t\t\treduceData.reducedResult ??= initial\n\t\t\t\t\t\t\t? reduceData.items!.reduce(reduce as (last: O | undefined, event: T) => O, initial)\n\t\t\t\t\t\t\t: reduceData.items!.reduce(reduce as (last: T | undefined, event: T) => T);\n\t\t\t\t\t\tlistener.call(thisArgs, reduceData.reducedResult);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst data = { buffers: new Array<Function>() };\n\t\tthis.data.push(data);\n\t\tconst r = fn();\n\t\tthis.data.pop();\n\t\tdata.buffers.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonDidAddFirstListener: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonDidRemoveLastListener: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n\nexport interface IValueWithChangeEvent<T> {\n\treadonly onDidChange: Event<void>;\n\tget value(): T;\n}\n\nexport class ValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic static const<T>(value: T): IValueWithChangeEvent<T> {\n\t\treturn new ConstValueWithChangeEvent(value);\n\t}\n\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(private _value: T) { }\n\n\tget value(): T {\n\t\treturn this._value;\n\t}\n\n\tset value(value: T) {\n\t\tif (value !== this._value) {\n\t\t\tthis._value = value;\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t}\n\t}\n}\n\nclass ConstValueWithChangeEvent<T> implements IValueWithChangeEvent<T> {\n\tpublic readonly onDidChange: Event<void> = Event.None;\n\n\tconstructor(readonly value: T) { }\n}\n\n/**\n * @param handleItem Is called for each item in the set (but only the first time the item is seen in the set).\n * \tThe returned disposable is disposed if the item is no longer in the set.\n */\nexport function trackSetChanges<T>(getData: () => ReadonlySet<T>, onDidChangeData: Event<unknown>, handleItem: (d: T) => IDisposable): IDisposable {\n\tconst map = new DisposableMap<T, IDisposable>();\n\tlet oldData = new Set(getData());\n\tfor (const d of oldData) {\n\t\tmap.set(d, handleItem(d));\n\t}\n\n\tconst store = new DisposableStore();\n\tstore.add(onDidChangeData(() => {\n\t\tconst newData = getData();\n\t\tconst diff = diffSets(oldData, newData);\n\t\tfor (const r of diff.removed) {\n\t\t\tmap.deleteAndDispose(r);\n\t\t}\n\t\tfor (const a of diff.added) {\n\t\t\tmap.set(a, handleItem(a));\n\t\t}\n\t\toldData = new Set(newData);\n\t}));\n\tstore.add(map);\n\treturn store;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/*\n * This module exists so that the AMD build of the monaco editor can replace this with an async loader plugin.\n * If you add new functions to this module make sure that they are also provided in the AMD build of the monaco editor.\n *\n * TODO@esm remove me once we no longer ship an AMD build.\n */\n\nexport function getNLSMessages(): string[] {\n\treturn globalThis._VSCODE_NLS_MESSAGES;\n}\n\nexport function getNLSLanguage(): string | undefined {\n\treturn globalThis._VSCODE_NLS_LANGUAGE;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// eslint-disable-next-line local/code-import-patterns\nimport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n// eslint-disable-next-line local/code-import-patterns\nexport { getNLSLanguage, getNLSMessages } from './nls.messages.js';\n\nconst isPseudo = getNLSLanguage() === 'pseudo' || (typeof document !== 'undefined' && document.location && typeof document.location.hash === 'string' && document.location.hash.indexOf('pseudo=true') >= 0);\n\nexport interface ILocalizeInfo {\n\tkey: string;\n\tcomment: string[];\n}\n\nexport interface ILocalizedString {\n\toriginal: string;\n\tvalue: string;\n}\n\nfunction _format(message: string, args: (string | number | boolean | undefined | null)[]): string {\n\tlet result: string;\n\n\tif (args.length === 0) {\n\t\tresult = message;\n\t} else {\n\t\tresult = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n\t\t\tconst index = rest[0];\n\t\t\tconst arg = args[index];\n\t\t\tlet result = match;\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tresult = arg;\n\t\t\t} else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n\t\t\t\tresult = String(arg);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tif (isPseudo) {\n\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\tresult = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t}\n\n\treturn result;\n}\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * Marks a string to be localized. Returns the localized string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example For example, `localize('sayHello', 'hello {0}', name)`\n *\n * @returns string The localized string.\n */\nexport function localize(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): string;\n\n/**\n * @skipMangle\n */\nexport function localize(data: ILocalizeInfo | string /* | number when built */, message: string /* | null when built */, ...args: (string | number | boolean | undefined | null)[]): string {\n\tif (typeof data === 'number') {\n\t\treturn _format(lookupMessage(data, message), args);\n\t}\n\treturn _format(message, args);\n}\n\n/**\n * Only used when built: Looks up the message in the global NLS table.\n * This table is being made available as a global through bootstrapping\n * depending on the target context.\n */\nfunction lookupMessage(index: number, fallback: string | null): string {\n\tconst message = getNLSMessages()?.[index];\n\tif (typeof message !== 'string') {\n\t\tif (typeof fallback === 'string') {\n\t\t\treturn fallback;\n\t\t}\n\t\tthrow new Error(`!!! NLS MISSING: ${index} !!!`);\n\t}\n\treturn message;\n}\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param info The {@linkcode ILocalizeInfo} which describes the id and comments associated with the localized string.\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize2({ key: 'sayHello', comment: ['Welcomes user'] }, 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(info: ILocalizeInfo, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * Marks a string to be localized. Returns an {@linkcode ILocalizedString}\n * which contains the localized string and the original string.\n *\n * @param key The key to use for localizing the string\n * @param message The string to localize\n * @param args The arguments to the string\n *\n * @note `message` can contain `{n}` notation where it is replaced by the nth value in `...args`\n * @example `localize('sayHello', 'hello {0}', name)`\n *\n * @returns ILocalizedString which contains the localized string and the original string.\n */\nexport function localize2(key: string, message: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString;\n\n/**\n * @skipMangle\n */\nexport function localize2(data: ILocalizeInfo | string /* | number when built */, originalMessage: string, ...args: (string | number | boolean | undefined | null)[]): ILocalizedString {\n\tlet message: string;\n\tif (typeof data === 'number') {\n\t\tmessage = lookupMessage(data, originalMessage);\n\t} else {\n\t\tmessage = originalMessage;\n\t}\n\n\tconst value = _format(message, args);\n\n\treturn {\n\t\tvalue,\n\t\toriginal: originalMessage === message ? value : _format(originalMessage, args)\n\t};\n}\n\nexport interface INLSLanguagePackConfiguration {\n\n\t/**\n\t * The path to the translations config file that contains pointers to\n\t * all message bundles for `main` and extensions.\n\t */\n\treadonly translationsConfigFile: string;\n\n\t/**\n\t * The path to the file containing the translations for this language\n\t * pack as flat string array.\n\t */\n\treadonly messagesFile: string;\n\n\t/**\n\t * The path to the file that can be used to signal a corrupt language\n\t * pack, for example when reading the `messagesFile` fails. This will\n\t * instruct the application to re-create the cache on next startup.\n\t */\n\treadonly corruptMarkerFile: string;\n}\n\nexport interface INLSConfiguration {\n\n\t/**\n\t * Locale as defined in `argv.json` or `app.getLocale()`.\n\t */\n\treadonly userLocale: string;\n\n\t/**\n\t * Locale as defined by the OS (e.g. `app.getPreferredSystemLanguages()`).\n\t */\n\treadonly osLocale: string;\n\n\t/**\n\t * The actual language of the UI that ends up being used considering `userLocale`\n\t * and `osLocale`.\n\t */\n\treadonly resolvedLanguage: string;\n\n\t/**\n\t * Defined if a language pack is used that is not the\n\t * default english language pack. This requires a language\n\t * pack to be installed as extension.\n\t */\n\treadonly languagePack?: INLSLanguagePackConfiguration;\n\n\t/**\n\t * The path to the file containing the default english messages\n\t * as flat string array. The file is only present in built\n\t * versions of the application.\n\t */\n\treadonly defaultMessagesFile: string;\n\n\t/**\n\t * Below properties are deprecated and only there to continue support\n\t * for `vscode-nls` module that depends on them.\n\t * Refs https://github.com/microsoft/vscode-nls/blob/main/src/node/main.ts#L36-L46\n\t */\n\t/** @deprecated */\n\treadonly locale: string;\n\t/** @deprecated */\n\treadonly availableLanguages: Record<string, string>;\n\t/** @deprecated */\n\treadonly _languagePackSupport?: boolean;\n\t/** @deprecated */\n\treadonly _languagePackId?: string;\n\t/** @deprecated */\n\treadonly _translationsConfigFile?: string;\n\t/** @deprecated */\n\treadonly _cacheRoot?: string;\n\t/** @deprecated */\n\treadonly _resolvedLanguagePackCoreLocation?: string;\n\t/** @deprecated */\n\treadonly _corruptedFile?: string;\n}\n\nexport interface ILanguagePack {\n\treadonly hash: string;\n\treadonly label: string | undefined;\n\treadonly extensions: {\n\t\treadonly extensionIdentifier: { readonly id: string; readonly uuid?: string };\n\t\treadonly version: string;\n\t}[];\n\treadonly translations: Record<string, string | undefined>;\n}\n\nexport type ILanguagePacks = Record<string, ILanguagePack | undefined>;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from '../../nls.js';\n\nexport const LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _platformLocale: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tversions?: {\n\t\tnode?: string;\n\t\telectron?: string;\n\t\tchrome?: string;\n\t};\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\n\nconst $globalThis: any = globalThis;\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = $globalThis.vscode.process;\n} else if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\n\ninterface INavigator {\n\tuserAgent: string;\n\tmaxTouchPoints?: number;\n\tlanguage: string;\n}\ndeclare const navigator: INavigator;\n\n// Native environment\nif (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: nls.INLSConfiguration = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.userLocale;\n\t\t\t_platformLocale = nlsConfig.osLocale;\n\t\t\t_language = nlsConfig.resolvedLanguage || LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig.languagePack?.translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Web environment\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isMobile = _userAgent?.indexOf('Mobi') >= 0;\n\t_isWeb = true;\n\t_language = nls.getNLSLanguage() || LANGUAGE_DEFAULT;\n\t_locale = navigator.language.toLowerCase();\n\t_platformLocale = _locale;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport type PlatformName = 'Web' | 'Windows' | 'Mac' | 'Linux';\n\nexport function PlatformToString(platform: Platform): PlatformName {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nexport const webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\n/**\n * Whether we run inside a CI environment, such as\n * GH actions or Azure Pipelines.\n */\nexport const isCI = _isCI;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese or de for German)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * Desktop: The OS locale or the locale specified by --locale or `argv.json`.\n * Web: matches `platformLocale`.\n *\n * The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * This will always be set to the OS/browser's locale regardless of\n * what was specified otherwise. The format of the string is all\n * lower case (e.g. zh-tw for Traditional Chinese). The UI is not\n * necessarily shown in the provided locale.\n */\nexport const platformLocale = _platformLocale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (setTimeout0IsFaster) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tconst pending: IQueueElement[] = [];\n\n\t\t$globalThis.addEventListener('message', (e: any) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\t$globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n\nexport function isBigSurOrNewer(osVersion: string): boolean {\n\treturn parseFloat(osVersion) >= 20;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from './event.js';\nimport { DisposableStore, IDisposable } from './lifecycle.js';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled = Object.freeze<CancellationToken>({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tthis._parentListener?.dispose();\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n\nexport function cancelOnDispose(store: DisposableStore): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tstore.add({ dispose() { source.cancel(); } });\n\treturn source.token;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { IDisposable } from './lifecycle.js';\n\nexport interface CacheResult<T> extends IDisposable {\n\tpromise: Promise<T>;\n}\n\nexport class Cache<T> {\n\n\tprivate result: CacheResult<T> | null = null;\n\tconstructor(private task: (ct: CancellationToken) => Promise<T>) { }\n\n\tget(): CacheResult<T> {\n\t\tif (this.result) {\n\t\t\treturn this.result;\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst promise = this.task(cts.token);\n\n\t\tthis.result = {\n\t\t\tpromise,\n\t\t\tdispose: () => {\n\t\t\t\tthis.result = null;\n\t\t\t\tcts.cancel();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t};\n\n\t\treturn this.result;\n\t}\n}\n\nexport function identity<T>(t: T): T {\n\treturn t;\n}\n\ninterface ICacheOptions<TArg> {\n\t/**\n\t * The cache key is used to identify the cache entry.\n\t * Strict equality is used to compare cache keys.\n\t*/\n\tgetCacheKey: (arg: TArg) => unknown;\n}\n\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction<TArg, TComputed> {\n\tprivate lastCache: TComputed | undefined = undefined;\n\tprivate lastArgKey: unknown | undefined = undefined;\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this.lastArgKey !== key) {\n\t\t\tthis.lastArgKey = key;\n\t\t\tthis.lastCache = this._fn(arg);\n\t\t}\n\t\treturn this.lastCache!;\n\t}\n}\n\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction<TArg, TComputed> {\n\tprivate readonly _map = new Map<TArg, TComputed>();\n\tprivate readonly _map2 = new Map<unknown, TComputed>();\n\tpublic get cachedValues(): ReadonlyMap<TArg, TComputed> {\n\t\treturn this._map;\n\t}\n\n\tprivate readonly _fn: (arg: TArg) => TComputed;\n\tprivate readonly _computeKey: (arg: TArg) => unknown;\n\n\tconstructor(fn: (arg: TArg) => TComputed);\n\tconstructor(options: ICacheOptions<TArg>, fn: (arg: TArg) => TComputed);\n\tconstructor(arg1: ICacheOptions<TArg> | ((arg: TArg) => TComputed), arg2?: (arg: TArg) => TComputed) {\n\t\tif (typeof arg1 === 'function') {\n\t\t\tthis._fn = arg1;\n\t\t\tthis._computeKey = identity;\n\t\t} else {\n\t\t\tthis._fn = arg2!;\n\t\t\tthis._computeKey = arg1.getCacheKey;\n\t\t}\n\t}\n\n\tpublic get(arg: TArg): TComputed {\n\t\tconst key = this._computeKey(arg);\n\t\tif (this._map2.has(key)) {\n\t\t\treturn this._map2.get(key)!;\n\t\t}\n\n\t\tconst value = this._fn(arg);\n\t\tthis._map.set(arg, value);\n\t\tthis._map2.set(key, value);\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Lazy<T> {\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: Error | undefined;\n\n\tconstructor(\n\t\tprivate readonly executor: () => T,\n\t) { }\n\n\t/**\n\t * True if the lazy value has been resolved.\n\t */\n\tget hasValue() { return this._didRun; }\n\n\t/**\n\t * Get the wrapped value.\n\t *\n\t * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n\t * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n\t */\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\ttry {\n\t\t\t\tthis._value = this.executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\t/**\n\t * Get the wrapped value without forcing evaluation.\n\t */\n\tget rawValue(): T | undefined { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCachedFunction } from './cache.js';\nimport { CharCode } from './charCode.js';\nimport { Lazy } from './lazy.js';\nimport { Constants } from './uint.js';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\tif (Object.keys(values).length === 0) {\n\t\treturn template;\n\t}\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value: string): string {\n\treturn value.replace(/[<>\"'&]/g, ch => {\n\t\tswitch (ch) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '\"': return '&quot;';\n\t\t\tcase '\\'': return '&apos;';\n\t\t\tcase '&': return '&amp;';\n\t\t}\n\t\treturn ch;\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `substr` occurs inside `value`.\n */\nexport function count(value: string, substr: string): number {\n\tlet result = 0;\n\tlet index = value.indexOf(substr);\n\twhile (index !== -1) {\n\t\tresult++;\n\t\tindex = value.indexOf(substr, index + substr.length);\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\nexport function truncateMiddle(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\tconst prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n\tconst suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n\n\treturn `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\nexport function splitLinesIncludeSeparators(str: string): string[] {\n\tconst linesWithSeparators: string[] = [];\n\tconst splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n\tfor (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n\t\tlinesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n\t}\n\treturn linesWithSeparators;\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function getIndentationLength(str: string): number {\n\tconst idx = firstNonWhitespaceIndex(str);\n\tif (idx === -1) { return str.length; }\n\treturn idx;\n}\n\n/**\n * Function that works identically to String.prototype.replace, except, the\n * replace function is allowed to be async and return a Promise.\n */\nexport function replaceAsync(str: string, search: RegExp, replacer: (match: string, ...args: any[]) => Promise<string>): Promise<string> {\n\tconst parts: (string | Promise<string>)[] = [];\n\n\tlet last = 0;\n\tfor (const match of str.matchAll(search)) {\n\t\tparts.push(str.slice(last, match.index));\n\t\tif (match.index === undefined) {\n\t\t\tthrow new Error('match.index should be defined');\n\t\t}\n\n\t\tlast = match.index + match[0].length;\n\t\tparts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n\t}\n\n\tparts.push(str.slice(last));\n\n\treturn Promise.all(parts).then(p => p.join(''));\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tconst codeA = a.charCodeAt(aStart);\n\t\tconst codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isAsciiDigit(code: number): boolean {\n\treturn code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tconst len = Math.min(a.length, b.length);\n\tlet i: number;\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport class CodePointIterator {\n\n\tprivate readonly _str: string;\n\tprivate readonly _len: number;\n\tprivate _offset: number;\n\n\tpublic get offset(): number {\n\t\treturn this._offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._str = str;\n\t\tthis._len = str.length;\n\t\tthis._offset = offset;\n\t}\n\n\tpublic setOffset(offset: number): void {\n\t\tthis._offset = offset;\n\t}\n\n\tpublic prevCodePoint(): number {\n\t\tconst codePoint = getPrevCodePoint(this._str, this._offset);\n\t\tthis._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic nextCodePoint(): number {\n\t\tconst codePoint = getNextCodePoint(this._str, this._len, this._offset);\n\t\tthis._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\treturn codePoint;\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn (this._offset >= this._len);\n\t}\n}\n\nexport class GraphemeIterator {\n\n\tprivate readonly _iterator: CodePointIterator;\n\n\tpublic get offset(): number {\n\t\treturn this._iterator.offset;\n\t}\n\n\tconstructor(str: string, offset: number = 0) {\n\t\tthis._iterator = new CodePointIterator(str, offset);\n\t}\n\n\tpublic nextGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\twhile (!iterator.eol()) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t\t}\n\t\treturn (iterator.offset - initialOffset);\n\t}\n\n\tpublic prevGraphemeLength(): number {\n\t\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\t\tconst iterator = this._iterator;\n\t\tconst initialOffset = iterator.offset;\n\n\t\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\twhile (iterator.offset > 0) {\n\t\t\tconst offset = iterator.offset;\n\t\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n\t\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\t\t// move iterator back\n\t\t\t\titerator.setOffset(offset);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t\t}\n\t\treturn (initialOffset - iterator.offset);\n\t}\n\n\tpublic eol(): boolean {\n\t\treturn this._iterator.eol();\n\t}\n}\n\nexport function nextCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.nextGraphemeLength();\n}\n\nexport function prevCharLength(str: string, initialOffset: number): number {\n\tconst iterator = new GraphemeIterator(str, initialOffset);\n\treturn iterator.prevGraphemeLength();\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\toffset--;\n\t}\n\tconst endOffset = offset + nextCharLength(str, offset);\n\tconst startOffset = endOffset - prevCharLength(str, endOffset);\n\treturn [startOffset, endOffset];\n}\n\nexport function charCount(str: string): number {\n\tconst iterator = new GraphemeIterator(str);\n\tlet length = 0;\n\twhile (!iterator.eol()) {\n\t\tlength++;\n\t\titerator.nextGraphemeLength();\n\t}\n\treturn length;\n}\n\nlet CONTAINS_RTL: RegExp | undefined = undefined;\n\nfunction makeContainsRtl() {\n\t// Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n\treturn /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\tif (!CONTAINS_RTL) {\n\t\tCONTAINS_RTL = makeContainsRtl();\n\t}\n\n\treturn CONTAINS_RTL.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n * The return value can be longer than the given value of `n`. Leading whitespace is always trimmed.\n */\nexport function lcut(text: string, n: number, prefix = '') {\n\tconst trimmed = text.trimStart();\n\n\tif (trimmed.length < n) {\n\t\treturn trimmed;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(trimmed)) {\n\t\tif (trimmed.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\tif (i === 0) {\n\t\treturn trimmed;\n\t}\n\n\treturn prefix + trimmed.substring(i).trimStart();\n}\n\n// Escape codes, compiled from https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Functions-using-CSI-_-ordered-by-the-final-character_s_\n// Plus additional markers for custom `\\x1b]...\\x07` instructions.\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\n\n/** Iterates over parts of a string with CSI sequences */\nexport function* forAnsiStringParts(str: string) {\n\tlet last = 0;\n\tfor (const match of str.matchAll(CSI_SEQUENCE)) {\n\t\tif (last !== match.index) {\n\t\t\tyield { isCode: false, str: str.substring(last, match.index) };\n\t\t}\n\n\t\tyield { isCode: true, str: match[0] };\n\t\tlast = match.index + match[0].length;\n\t}\n\n\tif (last !== str.length) {\n\t\tyield { isCode: false, str: str.substring(last) };\n\t}\n}\n\n/**\n * Strips ANSI escape sequences from a string.\n * @param str The dastringa stringo strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodes('\\u001b[31mHello, World!\\u001b[0m');\n * // 'Hello, World!'\n */\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(CSI_SEQUENCE, '');\n\t}\n\n\treturn str;\n}\n\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\n\n/**\n * Strips ANSI escape sequences from a UNIX-style prompt string (eg. `$PS1`).\n * @param str The string to strip the ANSI escape sequences from.\n *\n * @example\n * removeAnsiEscapeCodesFromPrompt('\\n\\\\[\\u001b[01;34m\\\\]\\\\w\\\\[\\u001b[00m\\\\]\\n\\\\[\\u001b[1;32m\\\\]> \\\\[\\u001b[0m\\\\]');\n * // '\\n\\\\w\\n> '\n */\nexport function removeAnsiEscapeCodesFromPrompt(str: string): string {\n\treturn removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\n\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nfunction breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst iterator = new CodePointIterator(str, offset);\n\titerator.prevCodePoint();\n\treturn iterator.offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(initialOffset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tconst iterator = new CodePointIterator(str, initialOffset);\n\tlet codePoint = iterator.prevCodePoint();\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (iterator.offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = iterator.prevCodePoint();\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tlet resultOffset = iterator.offset;\n\n\tif (resultOffset > 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = iterator.prevCodePoint();\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\tresultOffset = iterator.offset;\n\t\t}\n\t}\n\n\treturn resultOffset;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static readonly ambiguousCharacterData = new Lazy<\n\t\tRecord<\n\t\t\tstring | '_common' | '_default',\n\t\t\t/* code point -> ascii code point */ number[]\n\t\t>\n\t>(() => {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse(\n\t\t\t'{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'\n\t\t);\n\t});\n\n\tprivate static readonly cache = new LRUCachedFunction<\n\t\tstring[],\n\t\tAmbiguousCharacters\n\t>({ getCacheKey: JSON.stringify }, (locales) => {\n\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction mergeMaps(\n\t\t\tmap1: Map<number, number>,\n\t\t\tmap2: Map<number, number>\n\t\t): Map<number, number> {\n\t\t\tconst result = new Map<number, number>(map1);\n\t\t\tfor (const [key, value] of map2) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction intersectMaps(\n\t\t\tmap1: Map<number, number> | undefined,\n\t\t\tmap2: Map<number, number>\n\t\t) {\n\t\t\tif (!map1) {\n\t\t\t\treturn map2;\n\t\t\t}\n\t\t\tconst result = new Map<number, number>();\n\t\t\tfor (const [key, value] of map1) {\n\t\t\t\tif (map2.has(key)) {\n\t\t\t\t\tresult.set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tconst data = this.ambiguousCharacterData.value;\n\n\t\tlet filteredLocales = locales.filter(\n\t\t\t(l) => !l.startsWith('_') && l in data\n\t\t);\n\t\tif (filteredLocales.length === 0) {\n\t\t\tfilteredLocales = ['_default'];\n\t\t}\n\n\t\tlet languageSpecificMap: Map<number, number> | undefined = undefined;\n\t\tfor (const locale of filteredLocales) {\n\t\t\tconst map = arrayToMap(data[locale]);\n\t\t\tlanguageSpecificMap = intersectMaps(languageSpecificMap, map);\n\t\t}\n\n\t\tconst commonMap = arrayToMap(data['_common']);\n\t\tconst map = mergeMaps(commonMap, languageSpecificMap!);\n\n\t\treturn new AmbiguousCharacters(map);\n\t});\n\n\tpublic static getInstance(locales: Set<string>): AmbiguousCharacters {\n\t\treturn AmbiguousCharacters.cache.get(Array.from(locales));\n\t}\n\n\tprivate static _locales = new Lazy<string[]>(() =>\n\t\tObject.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter(\n\t\t\t(k) => !k.startsWith('_')\n\t\t)\n\t);\n\tpublic static getLocales(): string[] {\n\t\treturn AmbiguousCharacters._locales.value;\n\t}\n\n\tprivate constructor(\n\t\tprivate readonly confusableDictionary: Map<number, number>\n\t) { }\n\n\tpublic isAmbiguous(codePoint: number): boolean {\n\t\treturn this.confusableDictionary.has(codePoint);\n\t}\n\n\tpublic containsAmbiguousCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t */\n\tpublic getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn this.confusableDictionary.get(codePoint);\n\t}\n\n\tpublic getConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(this.confusableDictionary.keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\t// Generated using https://github.com/hediet/vscode-unicode-data\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static containsInvisibleCharacter(str: string): boolean {\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tconst codePoint = str.codePointAt(i);\n\t\t\tif (typeof codePoint === 'number' && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { INodeProcess, isMacintosh, isWindows } from './platform.js';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nconst vscodeGlobal = (globalThis as any).vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = vscodeGlobal.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/commits/v20.9.0/lib/path.js\n// Excluding: the change that adds primordials\n// (https://github.com/nodejs/node/commit/187a862d221dec42fa9a5c4214e7034d9092792f and others)\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from './process.js';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateObject(pathObject: object, name: string) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType(name, 'Object', pathObject);\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nconst platformIsWin32 = (process.platform === 'win32');\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction formatExt(ext: string): string {\n\treturn ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tvalidateObject(pathObject, 'pathObject');\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, suffix?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string' || path.length === 0) {\n\t\t\treturn path;\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'suffix');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nconst posixCwd = (() => {\n\tif (platformIsWin32) {\n\t\t// Converts Windows' backslash path separators to POSIX forward slashes\n\t\t// and truncates any drive indicator\n\t\tconst regexp = /\\\\/g;\n\t\treturn () => {\n\t\t\tconst cwd = process.cwd().replace(regexp, '/');\n\t\t\treturn cwd.slice(cwd.indexOf('/'));\n\t\t};\n\t}\n\n\t// We're already on POSIX, no need for any transformations\n\treturn () => process.cwd();\n})();\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : posixCwd();\n\n\t\t\tvalidateString(path, `paths[${i}]`);\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, suffix?: string): string {\n\t\tif (suffix !== undefined) {\n\t\t\tvalidateString(suffix, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n\t\t\tif (suffix === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = suffix.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === suffix.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (platformIsWin32 ? win32.join : posix.join);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const format = (platformIsWin32 ? win32.format : posix.format);\nexport const parse = (platformIsWin32 ? win32.parse : posix.parse);\nexport const toNamespacedPath = (platformIsWin32 ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\nexport const delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { MarshalledId } from './marshallingIds.js';\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.example.com' part of 'http://www.example.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.example.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\t/**\n\t * Creates new URI from uri components.\n\t *\n\t * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n\t * validation and should be used for untrusted uri components retrieved from storage,\n\t * user input, command arguments etc\n\t */\n\tstatic from(components: UriComponents, strict?: boolean): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t\tstrict\n\t\t);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\t/**\n\t * A helper function to revive URIs.\n\t *\n\t * **Note** that this function should only be used when receiving URI#toJSON generated data\n\t * and that it doesn't do any validation. Use {@link URI.from} when received \"untrusted\"\n\t * uri components such as command arguments or data from storage.\n\t *\n\t * @param data The URI components or URI to revive.\n\t * @returns The revived URI or undefined or null.\n\t */\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external ?? null;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath ?? null : null;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t[Symbol.for('debug.description')]() {\n\t\treturn `URI(${this.toString()})`;\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport function isUriComponents(thing: any): thing is UriComponents {\n\tif (!thing || typeof thing !== 'object') {\n\t\treturn false;\n\t}\n\treturn typeof (<UriComponents>thing).scheme === 'string'\n\t\t&& (typeof (<UriComponents>thing).authority === 'string' || typeof (<UriComponents>thing).authority === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).path === 'string' || typeof (<UriComponents>thing).path === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).query === 'string' || typeof (<UriComponents>thing).query === 'undefined')\n\t\t&& (typeof (<UriComponents>thing).fragment === 'string' || typeof (<UriComponents>thing).fragment === 'undefined');\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal?: string;\n\tfsPath?: string;\n\t_sep?: 1;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t//--- uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\t// TODO\n\t\t// this isn't correct and can violate the UriComponents contract but\n\t\t// this is part of the vscode.Uri API and we shouldn't change how that\n\t\t// works anymore\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, isPath: boolean, isAuthority: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (isPath && code === CharCode.Slash)\n\t\t\t|| (isAuthority && code === CharCode.OpenSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.CloseSquareBracket)\n\t\t\t|| (isAuthority && code === CharCode.Colon)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.lastIndexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false, false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false, true);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.lastIndexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false, true);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false, true);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true, false);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n\n\texport const vscodeUserData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n\texport const vscodeNotebookMetadata = 'vscode-notebook-metadata';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/** Scheme used for code blocks in chat. */\n\texport const vscodeChatCodeBlock = 'vscode-chat-code-block';\n\n\t/** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n\texport const vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n\n\t/** Scheme used for the chat input editor. */\n\texport const vscodeChatSesssion = 'vscode-chat-editor';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n\n\t/**\n\t * Scheme used for the Source Control commit input's text document\n\t */\n\texport const vscodeSourceControl = 'vscode-scm';\n\n\t/**\n\t * Scheme used for input box for creating comments.\n\t */\n\texport const commentsInput = 'comment';\n\n\t/**\n\t * Scheme used for special rendering of settings in the release notes\n\t */\n\texport const codeSetting = 'code-setting';\n\n\t/**\n\t * Scheme used for output panel resources\n\t */\n\texport const outputChannel = 'output';\n\n\t/**\n\t * Scheme used for the accessible view\n\t */\n\texport const accessibleView = 'accessible-view';\n}\n\nexport function matchesScheme(target: URI | string, scheme: string): boolean {\n\tif (URI.isUri(target)) {\n\t\treturn equalsIgnoreCase(target.scheme, scheme);\n\t} else {\n\t\treturn startsWithIgnoreCase(target, scheme + ':');\n\t}\n}\n\nexport function matchesSomeScheme(target: URI | string, ...schemes: string[]): boolean {\n\treturn schemes.some(scheme => matchesScheme(target, scheme));\n}\n\nexport const connectionTokenCookieName = 'vscode-tkn';\nexport const connectionTokenQueryName = 'tkn';\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\tprivate _serverRootPath: string = '/';\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tsetServerRootPath(product: { quality?: string; commit?: string }, serverBasePath: string | undefined): void {\n\t\tthis._serverRootPath = getServerRootPath(product, serverBasePath);\n\t}\n\n\tgetServerRootPath(): string {\n\t\treturn this._serverRootPath;\n\t}\n\n\tprivate get _remoteResourcesPath(): string {\n\t\treturn paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\tgetPreferredWebSchema(): 'http' | 'https' {\n\t\treturn this._preferredWebSchema;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\ttry {\n\t\t\t\treturn this._delegate(uri);\n\t\t\t} catch (err) {\n\t\t\t\terrors.onUnexpectedError(err);\n\t\t\t\treturn uri;\n\t\t\t}\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: this._remoteResourcesPath,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nexport function getServerRootPath(product: { quality?: string; commit?: string }, basePath: string | undefined): string {\n\treturn paths.posix.join(basePath ?? '/', `${product.quality ?? 'oss'}-${product.commit ?? 'dev'}`);\n}\n\n/**\n * A string pointing to a path inside the app. It should not begin with ./ or ../\n */\nexport type AppResourcePath = (\n\t`a${string}` | `b${string}` | `c${string}` | `d${string}` | `e${string}` | `f${string}`\n\t| `g${string}` | `h${string}` | `i${string}` | `j${string}` | `k${string}` | `l${string}`\n\t| `m${string}` | `n${string}` | `o${string}` | `p${string}` | `q${string}` | `r${string}`\n\t| `s${string}` | `t${string}` | `u${string}` | `v${string}` | `w${string}` | `x${string}`\n\t| `y${string}` | `z${string}`\n);\n\nexport const builtinExtensionsPath: AppResourcePath = 'vs/../../extensions';\nexport const nodeModulesPath: AppResourcePath = 'vs/../../node_modules';\nexport const nodeModulesAsarPath: AppResourcePath = 'vs/../../node_modules.asar';\nexport const nodeModulesAsarUnpackedPath: AppResourcePath = 'vs/../../node_modules.asar.unpacked';\n\nexport const VSCODE_AUTHORITY = 'vscode-app';\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = VSCODE_AUTHORITY;\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToBrowserUri(uri);\n\t}\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\turiToBrowserUri(uri: URI): URI {\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(resourcePath: AppResourcePath | ''): URI {\n\t\tconst uri = this.toUri(resourcePath);\n\t\treturn this.uriToFileUri(uri);\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\turiToFileUri(uri: URI): URI {\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\tif (globalThis._VSCODE_FILE_ROOT) {\n\t\t\tconst rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n\n\t\t\t// File URL (with scheme)\n\t\t\tif (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n\t\t\t\treturn URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n\t\t\t}\n\n\t\t\t// File Path (no scheme)\n\t\t\tconst modulePath = paths.join(rootUriOrPath, uriOrModule);\n\t\t\treturn URI.file(modulePath);\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n\n\nexport namespace COI {\n\n\tconst coiHeaders = new Map<'3' | '2' | '1' | string, Record<string, string>>([\n\t\t['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n\t\t['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t\t['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n\t]);\n\n\texport const CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n\n\tconst coiSearchParamName = 'vscode-coi';\n\n\t/**\n\t * Extract desired headers from `vscode-coi` invocation\n\t */\n\texport function getHeadersFromQuery(url: string | URI | URL): Record<string, string> | undefined {\n\t\tlet params: URLSearchParams | undefined;\n\t\tif (typeof url === 'string') {\n\t\t\tparams = new URL(url).searchParams;\n\t\t} else if (url instanceof URL) {\n\t\t\tparams = url.searchParams;\n\t\t} else if (URI.isUri(url)) {\n\t\t\tparams = new URL(url.toString(true)).searchParams;\n\t\t}\n\t\tconst value = params?.get(coiSearchParamName);\n\t\tif (!value) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn coiHeaders.get(value);\n\t}\n\n\t/**\n\t * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n\t * isn't enabled the current context\n\t */\n\texport function addSearchParam(urlOrSearch: URLSearchParams | Record<string, string>, coop: boolean, coep: boolean): void {\n\t\tif (!(<any>globalThis).crossOriginIsolated) {\n\t\t\t// depends on the current context being COI\n\t\t\treturn;\n\t\t}\n\t\tconst value = coop && coep ? '3' : coep ? '2' : '1';\n\t\tif (urlOrSearch instanceof URLSearchParams) {\n\t\t\turlOrSearch.set(coiSearchParamName, value);\n\t\t} else {\n\t\t\t(<Record<string, string>>urlOrSearch)[coiSearchParamName] = value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../charCode.js';\nimport { onUnexpectedError, transformErrorForSerialization } from '../errors.js';\nimport { Emitter, Event } from '../event.js';\nimport { Disposable, IDisposable } from '../lifecycle.js';\nimport { AppResourcePath, FileAccess } from '../network.js';\nimport { isWeb } from '../platform.js';\nimport * as strings from '../strings.js';\nimport { URI } from '../uri.js';\n\nconst DEFAULT_CHANNEL = 'default';\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: Message, transfer: ArrayBuffer[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: Message): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(modules: IWorkerDescriptor, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nexport interface IWorkerDescriptor {\n\treadonly moduleId: string;\n\treadonly esmModuleLocation: URI | undefined;\n\treadonly label: string | undefined;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\nconst enum MessageType {\n\tRequest,\n\tReply,\n\tSubscribeEvent,\n\tEvent,\n\tUnsubscribeEvent\n}\nclass RequestMessage {\n\tpublic readonly type = MessageType.Request;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly channel: string,\n\t\tpublic readonly method: string,\n\t\tpublic readonly args: any[]\n\t) { }\n}\nclass ReplyMessage {\n\tpublic readonly type = MessageType.Reply;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly seq: string,\n\t\tpublic readonly res: any,\n\t\tpublic readonly err: any\n\t) { }\n}\nclass SubscribeEventMessage {\n\tpublic readonly type = MessageType.SubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly channel: string,\n\t\tpublic readonly eventName: string,\n\t\tpublic readonly arg: any\n\t) { }\n}\nclass EventMessage {\n\tpublic readonly type = MessageType.Event;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly event: any\n\t) { }\n}\nclass UnsubscribeEventMessage {\n\tpublic readonly type = MessageType.UnsubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string\n\t) { }\n}\ntype Message = RequestMessage | ReplyMessage | SubscribeEventMessage | EventMessage | UnsubscribeEventMessage;\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(channel: string, method: string, args: any[]): Promise<any>;\n\thandleEvent(channel: string, eventName: string, arg: any): Event<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply };\n\tprivate _pendingEmitters: Map<string, Emitter<any>>;\n\tprivate _pendingEvents: Map<string, IDisposable>;\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t\tthis._pendingEmitters = new Map<string, Emitter<any>>();\n\t\tthis._pendingEvents = new Map<string, IDisposable>();\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(channel: string, method: string, args: any[]): Promise<any> {\n\t\tconst req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send(new RequestMessage(this._workerId, req, channel, method, args));\n\t\t});\n\t}\n\n\tpublic listen(channel: string, eventName: string, arg: any): Event<any> {\n\t\tlet req: string | null = null;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonWillAddFirstListener: () => {\n\t\t\t\treq = String(++this._lastSentReq);\n\t\t\t\tthis._pendingEmitters.set(req, emitter);\n\t\t\t\tthis._send(new SubscribeEventMessage(this._workerId, req, channel, eventName, arg));\n\t\t\t},\n\t\t\tonDidRemoveLastListener: () => {\n\t\t\t\tthis._pendingEmitters.delete(req!);\n\t\t\t\tthis._send(new UnsubscribeEventMessage(this._workerId, req!));\n\t\t\t\treq = null;\n\t\t\t}\n\t\t});\n\t\treturn emitter.event;\n\t}\n\n\tpublic handleMessage(message: Message): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tpublic createProxyToRemoteChannel<T extends object>(channel: string, sendMessageBarrier?: () => Promise<void>): T {\n\t\tconst handler = {\n\t\t\tget: (target: any, name: PropertyKey) => {\n\t\t\t\tif (typeof name === 'string' && !target[name]) {\n\t\t\t\t\tif (propertyIsDynamicEvent(name)) { // onDynamic...\n\t\t\t\t\t\ttarget[name] = (arg: any): Event<any> => {\n\t\t\t\t\t\t\treturn this.listen(channel, name, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (propertyIsEvent(name)) { // on...\n\t\t\t\t\t\ttarget[name] = this.listen(channel, name, undefined);\n\t\t\t\t\t} else if (name.charCodeAt(0) === CharCode.DollarSign) { // $...\n\t\t\t\t\t\ttarget[name] = async (...myArgs: any[]) => {\n\t\t\t\t\t\t\tawait sendMessageBarrier?.();\n\t\t\t\t\t\t\treturn this.sendMessage(channel, name, myArgs);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn target[name];\n\t\t\t}\n\t\t};\n\t\treturn new Proxy(Object.create(null), handler);\n\t}\n\n\tprivate _handleMessage(msg: Message): void {\n\t\tswitch (msg.type) {\n\t\t\tcase MessageType.Reply:\n\t\t\t\treturn this._handleReplyMessage(msg);\n\t\t\tcase MessageType.Request:\n\t\t\t\treturn this._handleRequestMessage(msg);\n\t\t\tcase MessageType.SubscribeEvent:\n\t\t\t\treturn this._handleSubscribeEventMessage(msg);\n\t\t\tcase MessageType.Event:\n\t\t\t\treturn this._handleEventMessage(msg);\n\t\t\tcase MessageType.UnsubscribeEvent:\n\t\t\t\treturn this._handleUnsubscribeEventMessage(msg);\n\t\t}\n\t}\n\n\tprivate _handleReplyMessage(replyMessage: ReplyMessage): void {\n\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\treturn;\n\t\t}\n\n\t\tconst reply = this._pendingReplies[replyMessage.seq];\n\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\tif (replyMessage.err) {\n\t\t\tlet err = replyMessage.err;\n\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t}\n\t\t\treply.reject(err);\n\t\t\treturn;\n\t\t}\n\n\t\treply.resolve(replyMessage.res);\n\t}\n\n\tprivate _handleRequestMessage(requestMessage: RequestMessage): void {\n\t\tconst req = requestMessage.req;\n\t\tconst result = this._handler.handleMessage(requestMessage.channel, requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, r, undefined));\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n\t\t});\n\t}\n\n\tprivate _handleSubscribeEventMessage(msg: SubscribeEventMessage): void {\n\t\tconst req = msg.req;\n\t\tconst disposable = this._handler.handleEvent(msg.channel, msg.eventName, msg.arg)((event) => {\n\t\t\tthis._send(new EventMessage(this._workerId, req, event));\n\t\t});\n\t\tthis._pendingEvents.set(req, disposable);\n\t}\n\n\tprivate _handleEventMessage(msg: EventMessage): void {\n\t\tif (!this._pendingEmitters.has(msg.req)) {\n\t\t\tconsole.warn('Got event for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEmitters.get(msg.req)!.fire(msg.event);\n\t}\n\n\tprivate _handleUnsubscribeEventMessage(msg: UnsubscribeEventMessage): void {\n\t\tif (!this._pendingEvents.has(msg.req)) {\n\t\t\tconsole.warn('Got unsubscribe for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEvents.get(msg.req)!.dispose();\n\t\tthis._pendingEvents.delete(msg.req);\n\t}\n\n\tprivate _send(msg: Message): void {\n\t\tconst transfer: ArrayBuffer[] = [];\n\t\tif (msg.type === MessageType.Request) {\n\t\t\tfor (let i = 0; i < msg.args.length; i++) {\n\t\t\t\tif (msg.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(msg.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === MessageType.Reply) {\n\t\t\tif (msg.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(msg.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\ntype ProxiedMethodName = (`$${string}` | `on${string}`);\n\nexport type Proxied<T> = { [K in keyof T]: T[K] extends (...args: infer A) => infer R\n\t? (\n\t\tK extends ProxiedMethodName\n\t\t? (...args: A) => Promise<Awaited<R>>\n\t\t: never\n\t)\n\t: never\n};\n\nexport interface IWorkerClient<W> {\n\tproxy: Proxied<W>;\n\tdispose(): void;\n\tsetChannel<T extends object>(channel: string, handler: T): void;\n\tgetChannel<T extends object>(channel: string): Proxied<T>;\n}\n\nexport interface IWorkerServer {\n\tsetChannel<T extends object>(channel: string, handler: T): void;\n\tgetChannel<T extends object>(channel: string): Proxied<T>;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<void>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tpublic readonly proxy: Proxied<W>;\n\tprivate readonly _localChannels: Map<string, object> = new Map();\n\tprivate readonly _remoteChannels: Map<string, object> = new Map();\n\n\tconstructor(\n\t\tworkerFactory: IWorkerFactory,\n\t\tworkerDescriptor: IWorkerDescriptor,\n\t) {\n\t\tsuper();\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t{\n\t\t\t\tmoduleId: 'vs/base/common/worker/simpleWorker',\n\t\t\t\tesmModuleLocation: workerDescriptor.esmModuleLocation,\n\t\t\t\tlabel: workerDescriptor.label\n\t\t\t},\n\t\t\t(msg: Message) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (channel: string, method: string, args: any[]): Promise<any> => {\n\t\t\t\treturn this._handleMessage(channel, method, args);\n\t\t\t},\n\t\t\thandleEvent: (channel: string, eventName: string, arg: any): Event<any> => {\n\t\t\t\treturn this._handleEvent(channel, eventName, arg);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\n\t\tconst globalRequire: { getConfig?(): object } | undefined = (globalThis as any).require;\n\t\tif (typeof globalRequire !== 'undefined' && typeof globalRequire.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = globalRequire.getConfig();\n\t\t} else if (typeof (globalThis as any).requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = (globalThis as any).requirejs.s.contexts._.config;\n\t\t}\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(DEFAULT_CHANNEL, INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tworkerDescriptor.moduleId,\n\t\t]);\n\n\t\tthis.proxy = this._protocol.createProxyToRemoteChannel(DEFAULT_CHANNEL, async () => { await this._onModuleLoaded; });\n\t\tthis._onModuleLoaded.catch((e) => {\n\t\t\tthis._onError('Worker failed to load ' + workerDescriptor.moduleId, e);\n\t\t});\n\t}\n\n\tprivate _handleMessage(channelName: string, method: string, args: any[]): Promise<any> {\n\t\tconst channel: object | undefined = this._localChannels.get(channelName);\n\t\tif (!channel) {\n\t\t\treturn Promise.reject(new Error(`Missing channel ${channelName} on main thread`));\n\t\t}\n\t\tif (typeof (channel as any)[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Missing method ${method} on main thread channel ${channelName}`));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve((channel as any)[method].apply(channel, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(channelName: string, eventName: string, arg: any): Event<any> {\n\t\tconst channel: object | undefined = this._localChannels.get(channelName);\n\t\tif (!channel) {\n\t\t\tthrow new Error(`Missing channel ${channelName} on main thread`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (channel as any)[eventName].call(channel, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on main thread channel ${channelName}.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (channel as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on main thread channel ${channelName}.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tpublic setChannel<T extends object>(channel: string, handler: T): void {\n\t\tthis._localChannels.set(channel, handler);\n\t}\n\n\tpublic getChannel<T extends object>(channel: string): Proxied<T> {\n\t\tif (!this._remoteChannels.has(channel)) {\n\t\t\tconst inst = this._protocol.createProxyToRemoteChannel(channel, async () => { await this._onModuleLoaded; });\n\t\t\tthis._remoteChannels.set(channel, inst);\n\t\t}\n\t\treturn this._remoteChannels.get(channel) as Proxied<T>;\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\nfunction propertyIsDynamicEvent(name: string): boolean {\n\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory {\n\t(workerServer: IWorkerServer): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer implements IWorkerServer {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\tprivate readonly _localChannels: Map<string, object> = new Map();\n\tprivate readonly _remoteChannels: Map<string, object> = new Map();\n\n\tconstructor(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IRequestHandlerFactory | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (channel: string, method: string, args: any[]): Promise<any> => this._handleMessage(channel, method, args),\n\t\t\thandleEvent: (channel: string, eventName: string, arg: any): Event<any> => this._handleEvent(channel, eventName, arg)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(channel: string, method: string, args: any[]): Promise<any> {\n\t\tif (channel === DEFAULT_CHANNEL && method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2]);\n\t\t}\n\n\t\tconst requestHandler: object | null | undefined = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n\t\tif (!requestHandler) {\n\t\t\treturn Promise.reject(new Error(`Missing channel ${channel} on worker thread`));\n\t\t}\n\t\tif (typeof (requestHandler as any)[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error(`Missing method ${method} on worker thread channel ${channel}`));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve((requestHandler as any)[method].apply(requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(channel: string, eventName: string, arg: any): Event<any> {\n\t\tconst requestHandler: object | null | undefined = (channel === DEFAULT_CHANNEL ? this._requestHandler : this._localChannels.get(channel));\n\t\tif (!requestHandler) {\n\t\t\tthrow new Error(`Missing channel ${channel} on worker thread`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (requestHandler as any)[eventName].call(requestHandler, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (requestHandler as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tpublic setChannel<T extends object>(channel: string, handler: T): void {\n\t\tthis._localChannels.set(channel, handler);\n\t}\n\n\tpublic getChannel<T extends object>(channel: string): Proxied<T> {\n\t\tif (!this._remoteChannels.has(channel)) {\n\t\t\tconst inst = this._protocol.createProxyToRemoteChannel(channel);\n\t\t\tthis._remoteChannels.set(channel, inst);\n\t\t}\n\t\treturn this._remoteChannels.get(channel) as Proxied<T>;\n\t}\n\n\tprivate async initialize(workerId: number, loaderConfig: any, moduleId: string): Promise<void> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(this);\n\t\t\treturn;\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n\t\t\t\t// don't use, it has been destroyed during serialize\n\t\t\t\tdelete loaderConfig['trustedTypesPolicy'];\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\t(globalThis as any).require.config(loaderConfig);\n\t\t}\n\n\t\tconst url = FileAccess.asBrowserUri(`${moduleId}.js` as AppResourcePath).toString(true);\n\t\treturn import(`${url}`).then((module: { create: IRequestHandlerFactory }) => {\n\t\t\tthis._requestHandler = module.create(this);\n\n\t\t\tif (!this._requestHandler) {\n\t\t\t\tthrow new Error(`No RequestHandler!`);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n */\nexport function create(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void): SimpleWorkerServer {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRequestHandlerFactory, SimpleWorkerServer } from './simpleWorker.js';\n\ntype MessageEvent = {\n\tdata: any;\n};\n\ndeclare const globalThis: {\n\tpostMessage: (message: any) => void;\n\tonmessage: (event: MessageEvent) => void;\n};\n\nlet initialized = false;\n\nfunction initialize(factory: IRequestHandlerFactory) {\n\tif (initialized) {\n\t\treturn;\n\t}\n\tinitialized = true;\n\n\tconst simpleWorker = new SimpleWorkerServer(\n\t\tmsg => globalThis.postMessage(msg),\n\t\t(workerServer) => factory(workerServer)\n\t);\n\n\tglobalThis.onmessage = (e: MessageEvent) => {\n\t\tsimpleWorker.onmessage(e.data);\n\t};\n}\n\nexport function bootstrapSimpleWorker(factory: IRequestHandlerFactory) {\n\tglobalThis.onmessage = (_e: MessageEvent) => {\n\t\t// Ignore first message in this case and initialize if not yet initialized\n\t\tif (!initialized) {\n\t\t\tinitialize(factory);\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Lazy } from './lazy.js';\nimport * as streams from './stream.js';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst indexOfTable = new Lazy(() => new Uint8Array(256));\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, if `actual` is not a nodejs Buffer, the backing store for\n\t * the returned `VSBuffer` instance might use a nodejs Buffer allocated from node's Buffer pool,\n\t * which is not transferrable.\n\t */\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\t/**\n\t * When running in a nodejs context, the backing store for the returned `VSBuffer` instance\n\t * might use a nodejs Buffer allocated from node's Buffer pool, which is not transferrable.\n\t */\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unknown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n\n\tindexOf(subarray: VSBuffer | Uint8Array, offset = 0) {\n\t\treturn binaryIndexOf(this.buffer, subarray instanceof VSBuffer ? subarray.buffer : subarray, offset);\n\t}\n}\n\n/**\n * Like String.indexOf, but works on Uint8Arrays.\n * Uses the boyer-moore-horspool algorithm to be reasonably speedy.\n */\nexport function binaryIndexOf(haystack: Uint8Array, needle: Uint8Array, offset = 0): number {\n\tconst needleLen = needle.byteLength;\n\tconst haystackLen = haystack.byteLength;\n\n\tif (needleLen === 0) {\n\t\treturn 0;\n\t}\n\n\tif (needleLen === 1) {\n\t\treturn haystack.indexOf(needle[0]);\n\t}\n\n\tif (needleLen > haystackLen - offset) {\n\t\treturn -1;\n\t}\n\n\t// find index of the subarray using boyer-moore-horspool algorithm\n\tconst table = indexOfTable.value;\n\ttable.fill(needle.length);\n\tfor (let i = 0; i < needle.length; i++) {\n\t\ttable[needle[i]] = needle.length - i - 1;\n\t}\n\n\tlet i = offset + needle.length - 1;\n\tlet j = i;\n\tlet result = -1;\n\twhile (i < haystackLen) {\n\t\tif (haystack[i] === needle[j]) {\n\t\t\tif (j === 0) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti--;\n\t\t\tj--;\n\t\t} else {\n\t\t\ti += Math.max(needle.length - j, table[haystack[i]]);\n\t\t\tj = needle.length - 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n\n/** Decodes base64 to a uint8 array. URL-encoded and unpadded base64 is allowed. */\nexport function decodeBase64(encoded: string) {\n\tlet building = 0;\n\tlet remainder = 0;\n\tlet bufi = 0;\n\n\t// The simpler way to do this is `Uint8Array.from(atob(str), c => c.charCodeAt(0))`,\n\t// but that's about 10-20x slower than this function in current Chromium versions.\n\n\tconst buffer = new Uint8Array(Math.floor(encoded.length / 4 * 3));\n\tconst append = (value: number) => {\n\t\tswitch (remainder) {\n\t\t\tcase 3:\n\t\t\t\tbuffer[bufi++] = building | value;\n\t\t\t\tremainder = 0;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 2);\n\t\t\t\tbuilding = value << 6;\n\t\t\t\tremainder = 3;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tbuffer[bufi++] = building | (value >>> 4);\n\t\t\t\tbuilding = value << 4;\n\t\t\t\tremainder = 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilding = value << 2;\n\t\t\t\tremainder = 1;\n\t\t}\n\t};\n\n\tfor (let i = 0; i < encoded.length; i++) {\n\t\tconst code = encoded.charCodeAt(i);\n\t\t// See https://datatracker.ietf.org/doc/html/rfc4648#section-4\n\t\t// This branchy code is about 3x faster than an indexOf on a base64 char string.\n\t\tif (code >= 65 && code <= 90) {\n\t\t\tappend(code - 65); // A-Z starts ranges from char code 65 to 90\n\t\t} else if (code >= 97 && code <= 122) {\n\t\t\tappend(code - 97 + 26); // a-z starts ranges from char code 97 to 122, starting at byte 26\n\t\t} else if (code >= 48 && code <= 57) {\n\t\t\tappend(code - 48 + 52); // 0-9 starts ranges from char code 48 to 58, starting at byte 52\n\t\t} else if (code === 43 || code === 45) {\n\t\t\tappend(62); // \"+\" or \"-\" for URLS\n\t\t} else if (code === 47 || code === 95) {\n\t\t\tappend(63); // \"/\" or \"_\" for URLS\n\t\t} else if (code === 61) {\n\t\t\tbreak; // \"=\"\n\t\t} else {\n\t\t\tthrow new SyntaxError(`Unexpected base64 character ${encoded[i]}`);\n\t\t}\n\t}\n\n\tconst unpadded = bufi;\n\twhile (remainder > 0) {\n\t\tappend(0);\n\t}\n\n\t// slice is needed to account for overestimation due to padding\n\treturn VSBuffer.wrap(buffer).slice(0, unpadded);\n}\n\nconst base64Alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst base64UrlSafeAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\n\n/** Encodes a buffer to a base64 string. */\nexport function encodeBase64({ buffer }: VSBuffer, padded = true, urlSafe = false) {\n\tconst dictionary = urlSafe ? base64UrlSafeAlphabet : base64Alphabet;\n\tlet output = '';\n\n\tconst remainder = buffer.byteLength % 3;\n\n\tlet i = 0;\n\tfor (; i < buffer.byteLength - remainder; i += 3) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\tconst c = buffer[i + 2];\n\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2 | c >>> 6) & 0b111111];\n\t\toutput += dictionary[c & 0b111111];\n\t}\n\n\tif (remainder === 1) {\n\t\tconst a = buffer[i + 0];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4) & 0b111111];\n\t\tif (padded) { output += '=='; }\n\t} else if (remainder === 2) {\n\t\tconst a = buffer[i + 0];\n\t\tconst b = buffer[i + 1];\n\t\toutput += dictionary[a >>> 2];\n\t\toutput += dictionary[(a << 4 | b >>> 4) & 0b111111];\n\t\toutput += dictionary[(b << 2) & 0b111111];\n\t\tif (padded) { output += '='; }\n\t}\n\n\treturn output;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from './buffer.js';\nimport * as strings from './strings.js';\n\ntype NotSyncHashable = ArrayBufferLike | ArrayBufferView;\n\n/**\n * Return a hash value for an object.\n *\n * Note that this should not be used for binary data types. Instead,\n * prefer {@link hashAsync}.\n */\nexport function hash<T>(obj: T extends NotSyncHashable ? never : T): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\n/** Hashes the input as SHA-1, returning a hex-encoded string. */\nexport const hashAsync = (input: string | ArrayBufferView | VSBuffer) => {\n\t// Note: I would very much like to expose a streaming interface for hashing\n\t// generally, but this is not available in web crypto yet, see\n\t// https://github.com/w3c/webcrypto/issues/73\n\n\t// StringSHA1 is faster for small string input, use it since we have it:\n\tif (typeof input === 'string' && input.length < 250) {\n\t\tconst sha = new StringSHA1();\n\t\tsha.update(input);\n\t\treturn Promise.resolve(sha.digest());\n\t}\n\n\tlet buff: ArrayBufferView;\n\tif (typeof input === 'string') {\n\t\tbuff = new TextEncoder().encode(input);\n\t} else if (input instanceof VSBuffer) {\n\t\tbuff = input.buffer;\n\t} else {\n\t\tbuff = input;\n\t}\n\n\treturn crypto.subtle.digest('sha-1', buff).then(toHexString);\n};\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction toHexString(buffer: ArrayBuffer): string;\nfunction toHexString(value: number, bitsize?: number): string;\nfunction toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn (bufferOrValue >>> 0).toString(16).padStart(bitsize / 4, '0');\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n *\n * Prefer to use {@link hashAsync} in async contexts\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tthis._buff.subarray(this._buffLen).fill(0);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tthis._buff.fill(0);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nimport { Constants } from '../uint.js';\n\nexport class StringDiffSequence implements ISequence {\n\n\tconstructor(private source: string) { }\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\tconst source = this.source;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t}\n\t\treturn characters;\n\t}\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n\nexport interface ISequence {\n\tgetElements(): Int32Array | number[] | string[];\n\tgetStrictElement?(index: number): string;\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\n}\n\nexport interface IDiffResult {\n\tquitEarly: boolean;\n\tchanges: IDiffChange[];\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nclass Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nclass MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nconst enum LocalConstants {\n\tMaxDifferencesHistory = 1447\n}\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate readonly _originalSequence: ISequence;\n\tprivate readonly _modifiedSequence: ISequence;\n\tprivate readonly _hasStrings: boolean;\n\tprivate readonly _originalStringElements: string[];\n\tprivate readonly _originalElementsOrHash: Int32Array;\n\tprivate readonly _modifiedStringElements: string[];\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\n\n\tprivate m_forwardHistory: Int32Array[];\n\tprivate m_reverseHistory: Int32Array[];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tthis._originalSequence = originalSequence;\n\t\tthis._modifiedSequence = modifiedSequence;\n\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\n\t\tthis._originalStringElements = originalStringElements;\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\n\t\tthis._modifiedStringElements = modifiedStringElements;\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\n\t}\n\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\n\t\tconst elements = sequence.getElements();\n\n\t\tif (LcsDiff._isStringArray(elements)) {\n\t\t\tconst hashes = new Int32Array(elements.length);\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\n\t\t\t}\n\t\t\treturn [elements, hashes, true];\n\t\t}\n\n\t\tif (elements instanceof Int32Array) {\n\t\t\treturn [[], elements, false];\n\t\t}\n\n\t\treturn [[], new Int32Array(elements), false];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n\t}\n\n\tprivate ElementsAreStrictEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (!this.ElementsAreEqual(originalIndex, newIndex)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n\t\tconst modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n\t\treturn (originalElement === modifiedElement);\n\t}\n\n\tprivate static _getStrictElement(sequence: ISequence, index: number): string | null {\n\t\tif (typeof sequence.getStrictElement === 'function') {\n\t\t\treturn sequence.getStrictElement(index);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\n\t\tconst quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\tchanges = this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarlyArr[0],\n\t\t\tchanges: changes\n\t\t};\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tconst midOriginalArr = [0];\n\t\tconst midModifiedArr = [0];\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tconst midOriginal = midOriginalArr[0];\n\t\tconst midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We didn't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\n\t): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null;\n\t\tlet reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tconst numDiagonals = maxDifferences + 1;\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\n\t\tconst reversePoints = new Int32Array(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\n\t\tconst deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quitting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (\n\t\t\t\tchange.originalStart + change.originalLength < originalStop\n\t\t\t\t&& change.modifiedStart + change.modifiedLength < modifiedStop\n\t\t\t\t&& (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n\t\t\t\t&& (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))\n\t\t\t) {\n\t\t\t\tconst startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n\t\t\t\tconst endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n\t\t\t\tif (endStrictEqual && !startStrictEqual) {\n\t\t\t\t\t// moving the change down would create an equal change, but the elements are not strict equal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tconst mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tconst originalStart = change.originalStart - delta;\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n\t\t\t\tconst score = (\n\t\t\t\t\t(touchingPreviousChange ? 5 : 0)\n\t\t\t\t\t+ this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength)\n\t\t\t\t);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\n\t\t\tconst mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n\t\t\t\tchanges[i - 1] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i, 1);\n\t\t\t\ti++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// There could be multiple longest common substrings.\n\t\t// Give preference to the ones containing longer lines\n\t\tif (this._hasStrings) {\n\t\t\tfor (let i = 1, len = changes.length; i < len; i++) {\n\t\t\t\tconst aChange = changes[i - 1];\n\t\t\t\tconst bChange = changes[i];\n\t\t\t\tconst matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n\t\t\t\tconst aOriginalStart = aChange.originalStart;\n\t\t\t\tconst bOriginalEnd = bChange.originalStart + bChange.originalLength;\n\t\t\t\tconst abOriginalLength = bOriginalEnd - aOriginalStart;\n\t\t\t\tconst aModifiedStart = aChange.modifiedStart;\n\t\t\t\tconst bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n\t\t\t\tconst abModifiedLength = bModifiedEnd - aModifiedStart;\n\t\t\t\t// Avoid wasting a lot of time with these searches\n\t\t\t\tif (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n\t\t\t\t\tconst t = this._findBetterContiguousSequence(\n\t\t\t\t\t\taOriginalStart, abOriginalLength,\n\t\t\t\t\t\taModifiedStart, abModifiedLength,\n\t\t\t\t\t\tmatchedLength\n\t\t\t\t\t);\n\t\t\t\t\tif (t) {\n\t\t\t\t\t\tconst [originalMatchStart, modifiedMatchStart] = t;\n\t\t\t\t\t\tif (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n\t\t\t\t\t\t\t// switch to another sequence that has a better score\n\t\t\t\t\t\t\taChange.originalLength = originalMatchStart - aChange.originalStart;\n\t\t\t\t\t\t\taChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n\t\t\t\t\t\t\tbChange.originalStart = originalMatchStart + matchedLength;\n\t\t\t\t\t\t\tbChange.modifiedStart = modifiedMatchStart + matchedLength;\n\t\t\t\t\t\t\tbChange.originalLength = bOriginalEnd - bChange.originalStart;\n\t\t\t\t\t\t\tbChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _findBetterContiguousSequence(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number, desiredLength: number): [number, number] | null {\n\t\tif (originalLength < desiredLength || modifiedLength < desiredLength) {\n\t\t\treturn null;\n\t\t}\n\t\tconst originalMax = originalStart + originalLength - desiredLength + 1;\n\t\tconst modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n\t\tlet bestScore = 0;\n\t\tlet bestOriginalStart = 0;\n\t\tlet bestModifiedStart = 0;\n\t\tfor (let i = originalStart; i < originalMax; i++) {\n\t\t\tfor (let j = modifiedStart; j < modifiedMax; j++) {\n\t\t\t\tconst score = this._contiguousSequenceScore(i, j, desiredLength);\n\t\t\t\tif (score > 0 && score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestOriginalStart = i;\n\t\t\t\t\tbestModifiedStart = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bestScore > 0) {\n\t\t\treturn [bestOriginalStart, bestModifiedStart];\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _contiguousSequenceScore(originalStart: number, modifiedStart: number, length: number): number {\n\t\tlet score = 0;\n\t\tfor (let l = 0; l < length; l++) {\n\t\t\tif (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tscore += this._originalStringElements[originalStart + l].length;\n\t\t}\n\t\treturn score;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tconst originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tconst mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tconst originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tconst modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tconst diagonalsBelow = diagonalBaseIndex;\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tconst diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tconst aLineNumber = a.lineNumber | 0;\n\t\tconst bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tconst aColumn = a.column | 0;\n\t\t\tconst bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n\n\tpublic toJSON(): IPosition {\n\t\treturn {\n\t\t\tlineNumber: this.lineNumber,\n\t\t\tcolumn: this.column\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from './position.js';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return false.\n\t * @internal\n\t */\n\tpublic static strictContainsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tconst otherStartLineNumber = b.startLineNumber;\n\t\tconst otherStartColumn = b.startColumn;\n\t\tconst otherEndLineNumber = b.endLineNumber;\n\t\tconst otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null | undefined): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null | undefined, b: IRange | null | undefined): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's end position.\n\t */\n\tpublic collapseToEnd(): Range {\n\t\treturn Range.collapseToEnd(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's end position.\n\t */\n\tpublic static collapseToEnd(range: IRange): Range {\n\t\treturn new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Moves the range by the given amount of lines.\n\t */\n\tpublic delta(lineCount: number): Range {\n\t\treturn new Range(this.startLineNumber + lineCount, this.startColumn, this.endLineNumber + lineCount, this.endColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n\n\tpublic toJSON(): IRange {\n\t\treturn this;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\treturn obj;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.entries(obj).forEach(([key, value]) => {\n\t\tresult[key] = value && typeof value === 'object' ? deepClone(value) : value;\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (Array.isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (const i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\tif (typeof value === 'bigint') {\n\t\t\treturn `[BigInt ${value.toString()}]`;\n\t\t}\n\t\treturn value;\n\t});\n}\n\ntype obj = { [key: string]: any };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): unknown {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\twhile (Object.prototype !== obj) {\n\t\tres = res.concat(Object.getOwnPropertyNames(obj));\n\t\tobj = Object.getPrototypeOf(obj);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\t// eslint-disable-next-line local/code-no-dangerous-type-assertions\n\tconst result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\nexport function mapValues<T extends {}, R>(obj: T, fn: (value: T[keyof T], key: string) => R): { [K in keyof T]: R } {\n\tconst result: { [key: string]: R } = {};\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tresult[key] = fn(<T[keyof T]>value, key);\n\t}\n\treturn result as { [K in keyof T]: R };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../base/common/event.js';\nimport { IMarkdownString } from '../../base/common/htmlContent.js';\nimport { IDisposable } from '../../base/common/lifecycle.js';\nimport { equals } from '../../base/common/objects.js';\nimport { ThemeColor } from '../../base/common/themables.js';\nimport { URI } from '../../base/common/uri.js';\nimport { ISingleEditOperation } from './core/editOperation.js';\nimport { IPosition, Position } from './core/position.js';\nimport { IRange, Range } from './core/range.js';\nimport { Selection } from './core/selection.js';\nimport { TextChange } from './core/textChange.js';\nimport { WordCharacterClassifier } from './core/wordCharacterClassifier.js';\nimport { IWordAtPosition } from './core/wordHelper.js';\nimport { FormattingOptions } from './languages.js';\nimport { ILanguageSelection } from './languages/language.js';\nimport { IBracketPairsTextModelPart } from './textModelBracketPairs.js';\nimport { IModelContentChange, IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, InternalModelContentChangeEvent, ModelInjectedTextChangedEvent } from './textModelEvents.js';\nimport { IGuidesTextModelPart } from './textModelGuides.js';\nimport { ITokenizationTextModelPart } from './tokenizationTextModelPart.js';\nimport { UndoRedoGroup } from '../../platform/undoRedo/common/undoRedo.js';\nimport { TokenArray } from './tokens/tokenArray.js';\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Vertical Lane in the glyph margin of the editor.\n */\nexport enum GlyphMarginLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 3,\n}\n\nexport interface IGlyphMarginLanesModel {\n\t/**\n\t * The number of lanes that should be rendered in the editor.\n\t */\n\treadonly requiredLanes: number;\n\n\t/**\n\t * Gets the lanes that should be rendered starting at a given line number.\n\t */\n\tgetLanesAtLine(lineNumber: number): GlyphMarginLane[];\n\n\t/**\n\t * Resets the model and ensures it can contain at least `maxLine` lines.\n\t */\n\treset(maxLine: number): void;\n\n\t/**\n\t * Registers that a lane should be visible at the Range in the model.\n\t * @param persist - if true, notes that the lane should always be visible,\n\t * even on lines where there's no specific request for that lane.\n\t */\n\tpush(lane: GlyphMarginLane, range: Range, persist?: boolean): void;\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport const enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\n/**\n * Section header style.\n */\nexport const enum MinimapSectionHeaderStyle {\n\tNormal = 1,\n\tUnderlined = 2\n}\n\nexport interface IDecorationOptions {\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tcolor: string | ThemeColor | undefined;\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tdarkColor?: string | ThemeColor;\n}\n\nexport interface IModelDecorationGlyphMarginOptions {\n\t/**\n\t * The position in the glyph margin.\n\t */\n\tposition: GlyphMarginLane;\n\n\t/**\n\t * Whether the glyph margin lane in {@link position} should be rendered even\n\t * outside of this decoration's range.\n\t */\n\tpersistLane?: boolean;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for rendering a model decoration in the minimap.\n */\nexport interface IModelDecorationMinimapOptions extends IDecorationOptions {\n\t/**\n\t * The position in the minimap.\n\t */\n\tposition: MinimapPosition;\n\t/**\n\t * If the decoration is for a section header, which header style.\n\t */\n\tsectionHeaderStyle?: MinimapSectionHeaderStyle | null;\n\t/**\n\t * If the decoration is for a section header, the header text.\n\t */\n\tsectionHeaderText?: string | null;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * A debug description that can be used for inspecting model decorations.\n\t * @internal\n\t */\n\tdescription: string;\n\t/**\n\t * Customize the growing behavior of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?: TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?: string | null;\n\t/**\n\t * Indicates whether the decoration should span across the entire line when it continues onto the next line.\n\t */\n\tshouldFillLineOnLineBreak?: boolean | null;\n\tblockClassName?: string | null;\n\t/**\n\t * Indicates if this block should be rendered after the last line.\n\t * In this case, the range must be empty and set to the last line.\n\t */\n\tblockIsAfterEnd?: boolean | null;\n\tblockDoesNotCollapse?: boolean | null;\n\tblockPadding?: [top: number, right: number, bottom: number, left: number] | null;\n\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t */\n\tglyphMarginHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the decoration message.\n\t */\n\thoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the line number message.\n\t */\n\tlineNumberHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?: boolean;\n\t/**\n\t * Always render the decoration (even when the range it encompasses is collapsed).\n\t */\n\tshowIfCollapsed?: boolean;\n\t/**\n\t * Collapse the decoration if its entire range is being replaced via an edit.\n\t * @internal\n\t */\n\tcollapseOnReplaceEdit?: boolean;\n\t/**\n\t * Specifies the stack order of a decoration.\n\t * A decoration with greater stack order is always in front of a decoration with\n\t * a lower stack order when the decorations are on the same line.\n\t */\n\tzIndex?: number;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?: IModelDecorationOverviewRulerOptions | null;\n\t/**\n\t * If set, render this decoration in the minimap.\n\t */\n\tminimap?: IModelDecorationMinimapOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?: string | null;\n\t/**\n\t * If set and the decoration has {@link glyphMarginClassName} set, render this decoration\n\t * with the specified {@link IModelDecorationGlyphMarginOptions} in the glyph margin.\n\t */\n\tglyphMargin?: IModelDecorationGlyphMarginOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?: string | null;\n\t/**\n\t * Controls the tooltip text of the line decoration.\n\t */\n\tlinesDecorationsTooltip?: string | null;\n\t/**\n\t * If set, the decoration will be rendered on the line number.\n\t */\n\tlineNumberClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping.\n\t */\n\tfirstLineDecorationClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.\n\t */\n\tmarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?: string | null;\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\tinlineClassNameAffectsLetterSpacing?: boolean;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?: string | null;\n\t/**\n\t * If set, text will be injected in the view after the range.\n\t */\n\tafter?: InjectedTextOptions | null;\n\n\t/**\n\t * If set, text will be injected in the view before the range.\n\t */\n\tbefore?: InjectedTextOptions | null;\n\n\t/**\n\t * If set, this decoration will not be rendered for comment tokens.\n\t * @internal\n\t*/\n\thideInCommentTokens?: boolean | null;\n\n\t/**\n\t * If set, this decoration will not be rendered for string tokens.\n\t * @internal\n\t*/\n\thideInStringTokens?: boolean | null;\n}\n\n/**\n * Configures text that is injected into the view without changing the underlying document.\n*/\nexport interface InjectedTextOptions {\n\t/**\n\t * Sets the text to inject. Must be a single line.\n\t */\n\treadonly content: string;\n\n\t/**\n\t * @internal\n\t*/\n\treadonly tokens?: TokenArray | null;\n\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t */\n\treadonly inlineClassName?: string | null;\n\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\treadonly inlineClassNameAffectsLetterSpacing?: boolean;\n\n\t/**\n\t * This field allows to attach data to this injected text.\n\t * The data can be read when injected texts at a given position are queried.\n\t */\n\treadonly attachedData?: unknown;\n\n\t/**\n\t * Configures cursor stops around injected text.\n\t * Defaults to {@link InjectedTextCursorStops.Both}.\n\t*/\n\treadonly cursorStops?: InjectedTextCursorStops | null;\n}\n\nexport enum InjectedTextCursorStops {\n\tBoth,\n\tRight,\n\tLeft,\n\tNone\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\treadonly id: string;\n\t/**\n\t * Identifier for a decoration's owner.\n\t */\n\treadonly ownerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\treadonly range: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\treadonly options: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range: IRange, options: IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id: string, newRange: IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions: IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id: string): void;\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: readonly string[], newDecorations: readonly IModelDeltaDecoration[]): string[];\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport const enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * An identifier for a single edit operation.\n * @internal\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor: number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor: number;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation extends ISingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier?: ISingleEditOperationIdentifier | null;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t * @internal\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n\t/**\n\t * This indicates that this operation is in a set of operations that are tracked and should not be \"simplified\".\n\t * @internal\n\t */\n\t_isTracked?: boolean;\n}\n\nexport interface IValidEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be empty to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * @internal\n\t */\n\ttextChange: TextChange;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations: IValidEditOperation[]): Selection[] | null;\n}\n\nexport class TextModelResolvedOptions {\n\t_textModelResolvedOptionsBrand: void = undefined;\n\n\treadonly tabSize: number;\n\treadonly indentSize: number;\n\tprivate readonly _indentSizeIsTabSize: boolean;\n\treadonly insertSpaces: boolean;\n\treadonly defaultEOL: DefaultEndOfLine;\n\treadonly trimAutoWhitespace: boolean;\n\treadonly bracketPairColorizationOptions: BracketPairColorizationOptions;\n\n\tpublic get originalIndentSize(): number | 'tabSize' {\n\t\treturn this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(src: {\n\t\ttabSize: number;\n\t\tindentSize: number | 'tabSize';\n\t\tinsertSpaces: boolean;\n\t\tdefaultEOL: DefaultEndOfLine;\n\t\ttrimAutoWhitespace: boolean;\n\t\tbracketPairColorizationOptions: BracketPairColorizationOptions;\n\t}) {\n\t\tthis.tabSize = Math.max(1, src.tabSize | 0);\n\t\tif (src.indentSize === 'tabSize') {\n\t\t\tthis.indentSize = this.tabSize;\n\t\t\tthis._indentSizeIsTabSize = true;\n\t\t} else {\n\t\t\tthis.indentSize = Math.max(1, src.indentSize | 0);\n\t\t\tthis._indentSizeIsTabSize = false;\n\t\t}\n\t\tthis.insertSpaces = Boolean(src.insertSpaces);\n\t\tthis.defaultEOL = src.defaultEOL | 0;\n\t\tthis.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n\t\tthis.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: TextModelResolvedOptions): boolean {\n\t\treturn (\n\t\t\tthis.tabSize === other.tabSize\n\t\t\t&& this._indentSizeIsTabSize === other._indentSizeIsTabSize\n\t\t\t&& this.indentSize === other.indentSize\n\t\t\t&& this.insertSpaces === other.insertSpaces\n\t\t\t&& this.defaultEOL === other.defaultEOL\n\t\t\t&& this.trimAutoWhitespace === other.trimAutoWhitespace\n\t\t\t&& equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions)\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: TextModelResolvedOptions): IModelOptionsChangedEvent {\n\t\treturn {\n\t\t\ttabSize: this.tabSize !== newOpts.tabSize,\n\t\t\tindentSize: this.indentSize !== newOpts.indentSize,\n\t\t\tinsertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n\t\t\ttrimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tindentSize: number | 'tabSize';\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\tisForSimpleWidget: boolean;\n\tlargeFileOptimizations: boolean;\n\tbracketPairColorizationOptions: BracketPairColorizationOptions;\n}\n\nexport interface BracketPairColorizationOptions {\n\tenabled: boolean;\n\tindependentColorPoolPerBracketType: boolean;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tindentSize?: number | 'tabSize';\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n\tbracketColorizationOptions?: BracketPairColorizationOptions;\n}\n\nexport class FindMatch {\n\t_findMatchBrand: void = undefined;\n\n\tpublic readonly range: Range;\n\tpublic readonly matches: string[] | null;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(range: Range, matches: string[] | null) {\n\t\tthis.range = range;\n\t\tthis.matches = matches;\n\t}\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport const enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\n/**\n * @internal\n */\nexport function isITextSnapshot(obj: any): obj is ITextSnapshot {\n\treturn (obj && typeof obj.read === 'function');\n}\n\n/**\n * A model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * This model is constructed for a simple widget code editor.\n\t * @internal\n\t */\n\treadonly isForSimpleWidget: boolean;\n\n\t/**\n\t * If true, the text model might contain RTL.\n\t * If false, the text model **contains only** contain LTR.\n\t * @internal\n\t */\n\tmightContainRTL(): boolean;\n\n\t/**\n\t * If true, the text model might contain LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\n\t * If false, the text model definitely does not contain these.\n\t * @internal\n\t */\n\tmightContainUnusualLineTerminators(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\tremoveUnusualLineTerminators(selections?: Selection[]): void;\n\n\t/**\n\t * If true, the text model might contain non basic ASCII.\n\t * If false, the text model **contains only** basic ASCII.\n\t * @internal\n\t */\n\tmightContainNonBasicASCII(): boolean;\n\n\t/**\n\t * Get the resolved options for this model.\n\t */\n\tgetOptions(): TextModelResolvedOptions;\n\n\t/**\n\t * Get the formatting options for this model.\n\t * @internal\n\t */\n\tgetFormattingOptions(): FormattingOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue: string | ITextSnapshot): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?: EndOfLinePreference, preserveBOM?: boolean): string;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text snapshot (it is safe to consume it asynchronously).\n\t */\n\tcreateSnapshot(preserveBOM?: boolean): ITextSnapshot;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?: EndOfLinePreference, preserveBOM?: boolean): number;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t * @internal\n\t */\n\tequalsTextBuffer(other: ITextBuffer): boolean;\n\n\t/**\n\t * Get the underling text buffer.\n\t * @internal\n\t */\n\tgetTextBuffer(): ITextBuffer;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range: IRange, eol?: EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range: IRange, eol?: EndOfLinePreference): number;\n\n\t/**\n\t * Get the character count of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t */\n\tgetCharacterCountInRange(range: IRange, eol?: EndOfLinePreference): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber: number): string;\n\n\t/**\n\t * Get the text length for a certain line.\n\t */\n\tgetLineLength(lineNumber: number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t */\n\tgetEndOfLineSequence(): EndOfLineSequence;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber: number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Create a valid position.\n\t */\n\tvalidatePosition(position: IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offset (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the offset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range: IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model.\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns if the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * This model is so large that it would not be a good idea to sync it over\n\t * to web workers or other places.\n\t * @internal\n\t */\n\tisTooLargeForSyncing(): boolean;\n\n\t/**\n\t * The file is so large, that even tokenization is disabled.\n\t * @internal\n\t */\n\tisTooLargeForTokenization(): boolean;\n\n\t/**\n\t * The file is so large, that operations on it might be too large for heap\n\t * and can lead to OOM crashes so they should be disabled.\n\t * @internal\n\t */\n\tisTooLargeForHeapOperation(): boolean;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString: string, searchOnlyEditableRange: boolean, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside these ranges.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString: string, searchScope: IRange | IRange[], isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetLanguageId(): string;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @param languageId The new language.\n\t * @param source The source of the call that set the language.\n\t * @internal\n\t */\n\tsetLanguage(languageId: string, source?: string): void;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @param languageSelection The new language selection.\n\t * @param source The source of the call that set the language.\n\t * @internal\n\t */\n\tsetLanguage(languageSelection: ILanguageSelection, source?: string): void;\n\n\t/**\n\t * Returns the real (inner-most) language mode at a given position.\n\t * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLanguageIdAtPosition(lineNumber: number, column: number): string;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position: IPosition): IWordAtPosition | null;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position: IPosition): IWordAtPosition;\n\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T, ownerId?: number): T | null;\n\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[], ownerId?: number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId: number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id: string): IModelDecorationOptions | null;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id: string): Range | null;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber: number, endLineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @param onlyMinimapDecorations If set, it will return only decorations that render in the minimap.\n\t * @param onlyMarginDecorations If set, it will return only decorations that render in the glyph margin.\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range: IRange, ownerId?: number, filterOutValidation?: boolean, onlyMinimapDecorations?: boolean, onlyMarginDecorations?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all decorations that render in the glyph margin as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t */\n\tgetAllMarginDecorations(ownerId?: number): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that should be rendered in the overview ruler as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetOverviewRulerDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that contain injected text.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t */\n\tgetInjectedTextDecorations(ownerId?: number): IModelDecoration[];\n\n\t/**\n\t * @internal\n\t */\n\t_getTrackedRange(id: string): Range | null;\n\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: TrackedRangeStickiness): null;\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: TrackedRangeStickiness): string;\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts: ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void;\n\n\t/**\n\t * Close the current undo-redo element.\n\t * This offers a way to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Open the current undo-redo element.\n\t * This offers a way to remove the current undo/redo stop point.\n\t */\n\tpopStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState: Selection[] | null, editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): Selection[] | null;\n\t/**\n\t * @internal\n\t */\n\tpushEditOperations(beforeCursorState: Selection[] | null, editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer, group?: UndoRedoGroup): Selection[] | null;\n\n\t/**\n\t * Change the end of line sequence. This is the preferred way of\n\t * changing the eol sequence. This will land on the undo stack.\n\t */\n\tpushEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[]): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: true): IValidEditOperation[];\n\n\t/**\n\t * Change the end of line sequence without recording in the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyUndo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyRedo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * Undo edit operations until the previous undo/redo point.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): void | Promise<void>;\n\n\t/**\n\t * Is there anything in the undo stack?\n\t * @internal\n\t */\n\tcanUndo(): boolean;\n\n\t/**\n\t * Redo edit operations until the next undo/redo point.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): void | Promise<void>;\n\n\t/**\n\t * Is there anything in the redo stack?\n\t * @internal\n\t */\n\tcanRedo(): boolean;\n\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\treadonly onDidChangeContentOrInjectedText: Event<InternalModelContentChangeEvent | ModelInjectedTextChangedEvent>;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t * @event\n\t */\n\tonDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t * @event\n\t */\n\treadonly onDidChangeDecorations: Event<IModelDecorationsChangedEvent>;\n\t/**\n\t * An event emitted when the model options have changed.\n\t * @event\n\t */\n\treadonly onDidChangeOptions: Event<IModelOptionsChangedEvent>;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t * @event\n\t */\n\treadonly onDidChangeLanguage: Event<IModelLanguageChangedEvent>;\n\t/**\n\t * An event emitted when the language configuration associated with the model has changed.\n\t * @event\n\t */\n\treadonly onDidChangeLanguageConfiguration: Event<IModelLanguageConfigurationChangedEvent>;\n\t/**\n\t * An event emitted when the tokens associated with the model have changed.\n\t * @event\n\t * @internal\n\t */\n\treadonly onDidChangeTokens: Event<IModelTokensChangedEvent>;\n\t/**\n\t * An event emitted when the model has been attached to the first editor or detached from the last editor.\n\t * @event\n\t */\n\treadonly onDidChangeAttached: Event<void>;\n\t/**\n\t * An event emitted right before disposing the model.\n\t * @event\n\t */\n\treadonly onWillDispose: Event<void>;\n\n\t/**\n\t * Destroy this model.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): IAttachedView;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(view: IAttachedView): void;\n\n\t/**\n\t * Returns if this model is attached to an editor or not.\n\t */\n\tisAttachedToEditor(): boolean;\n\n\t/**\n\t * Returns the count of editors this model is attached to.\n\t * @internal\n\t */\n\tgetAttachedEditorCount(): number;\n\n\t/**\n\t * Among all positions that are projected to the same position in the underlying text model as\n\t * the given position, select a unique position as indicated by the affinity.\n\t *\n\t * PositionAffinity.Left:\n\t * The normalized position must be equal or left to the requested position.\n\t *\n\t * PositionAffinity.Right:\n\t * The normalized position must be equal or right to the requested position.\n\t *\n\t * @internal\n\t */\n\tnormalizePosition(position: Position, affinity: PositionAffinity): Position;\n\n\t/**\n\t * Gets the column at which indentation stops at a given line.\n\t * @internal\n\t*/\n\tgetLineIndentColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns an object that can be used to query brackets.\n\t * @internal\n\t*/\n\treadonly bracketPairs: IBracketPairsTextModelPart;\n\n\t/**\n\t * Returns an object that can be used to query indent guides.\n\t * @internal\n\t*/\n\treadonly guides: IGuidesTextModelPart;\n\n\t/**\n\t * @internal\n\t */\n\treadonly tokenization: ITokenizationTextModelPart;\n}\n\n/**\n * @internal\n */\nexport interface IAttachedView {\n\t/**\n\t * @param stabilized Indicates if the visible lines are probably going to change soon or can be considered stable.\n\t * Is true on reveal range and false on scroll.\n\t * Tokenizers should tokenize synchronously if stabilized is true.\n\t */\n\tsetVisibleLines(visibleLines: { startLineNumber: number; endLineNumber: number }[], stabilized: boolean): void;\n}\n\nexport const enum PositionAffinity {\n\t/**\n\t * Prefers the left most position.\n\t*/\n\tLeft = 0,\n\n\t/**\n\t * Prefers the right most position.\n\t*/\n\tRight = 1,\n\n\t/**\n\t * No preference.\n\t*/\n\tNone = 2,\n\n\t/**\n\t * If the given position is on injected text, prefers the position left of it.\n\t*/\n\tLeftOfInjectedText = 3,\n\n\t/**\n\t * If the given position is on injected text, prefers the position right of it.\n\t*/\n\tRightOfInjectedText = 4,\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferBuilder {\n\tacceptChunk(chunk: string): void;\n\tfinish(): ITextBufferFactory;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferFactory {\n\tcreate(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable };\n\tgetFirstLineText(lengthLimit: number): string;\n}\n\n/**\n * @internal\n */\nexport const enum ModelConstants {\n\tFIRST_LINE_DETECTION_LENGTH_LIMIT = 1000\n}\n\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation implements IIdentifiedSingleEditOperation {\n\tconstructor(\n\t\tpublic readonly identifier: ISingleEditOperationIdentifier | null,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly text: string | null,\n\t\tpublic readonly forceMoveMarkers: boolean,\n\t\tpublic readonly isAutoWhitespaceEdit: boolean,\n\t\tpublic readonly _isTracked: boolean,\n\t) { }\n}\n\n/**\n * @internal\n *\n * `lineNumber` is 1 based.\n */\nexport interface IReadonlyTextBuffer {\n\tonDidChangeContent: Event<void>;\n\tequals(other: ITextBuffer): boolean;\n\tmightContainRTL(): boolean;\n\tmightContainUnusualLineTerminators(): boolean;\n\tresetMightContainUnusualLineTerminators(): void;\n\tmightContainNonBasicASCII(): boolean;\n\tgetBOM(): string;\n\tgetEOL(): string;\n\n\tgetOffsetAt(lineNumber: number, column: number): number;\n\tgetPositionAt(offset: number): Position;\n\tgetRangeAt(offset: number, length: number): Range;\n\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n\tcreateSnapshot(preserveBOM: boolean): ITextSnapshot;\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetCharacterCountInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetLength(): number;\n\tgetLineCount(): number;\n\tgetLinesContent(): string[];\n\tgetLineContent(lineNumber: number): string;\n\tgetLineCharCode(lineNumber: number, index: number): number;\n\tgetCharCode(offset: number): number;\n\tgetLineLength(lineNumber: number): number;\n\tgetLineMinColumn(lineNumber: number): number;\n\tgetLineMaxColumn(lineNumber: number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[];\n\n\t/**\n\t * Get nearest chunk of text after `offset` in the text buffer.\n\t */\n\tgetNearestChunk(offset: number): string;\n}\n\n/**\n * @internal\n */\nexport class SearchData {\n\n\t/**\n\t * The regex to search for. Always defined.\n\t */\n\tpublic readonly regex: RegExp;\n\t/**\n\t * The word separator classifier.\n\t */\n\tpublic readonly wordSeparators: WordCharacterClassifier | null;\n\t/**\n\t * The simple string to search for (if possible).\n\t */\n\tpublic readonly simpleSearch: string | null;\n\n\tconstructor(regex: RegExp, wordSeparators: WordCharacterClassifier | null, simpleSearch: string | null) {\n\t\tthis.regex = regex;\n\t\tthis.wordSeparators = wordSeparators;\n\t\tthis.simpleSearch = simpleSearch;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextBuffer extends IReadonlyTextBuffer, IDisposable {\n\tsetEOL(newEOL: '\\r\\n' | '\\n'): void;\n\tapplyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult;\n}\n\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n\n\tconstructor(\n\t\tpublic readonly reverseEdits: IValidEditOperation[] | null,\n\t\tpublic readonly changes: IInternalModelContentChange[],\n\t\tpublic readonly trimAutoWhitespaceLineNumbers: number[] | null\n\t) { }\n\n}\n\n/**\n * @internal\n */\nexport interface IInternalModelContentChange extends IModelContentChange {\n\trange: Range;\n\tforceMoveMarkers: boolean;\n}\n\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model: ITextModel): boolean {\n\treturn (\n\t\t!model.isTooLargeForSyncing() && !model.isForSimpleWidget\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Piece, PieceTreeBase } from './pieceTreeBase.js';\n\nexport class TreeNode {\n\tparent: TreeNode;\n\tleft: TreeNode;\n\tright: TreeNode;\n\tcolor: NodeColor;\n\n\t// Piece\n\tpiece: Piece;\n\tsize_left: number; // size of the left subtree (not inorder)\n\tlf_left: number; // line feeds cnt in the left subtree (not in order)\n\n\tconstructor(piece: Piece, color: NodeColor) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.size_left = 0;\n\t\tthis.lf_left = 0;\n\t\tthis.parent = this;\n\t\tthis.left = this;\n\t\tthis.right = this;\n\t}\n\n\tpublic next(): TreeNode {\n\t\tif (this.right !== SENTINEL) {\n\t\t\treturn leftest(this.right);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.left === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic prev(): TreeNode {\n\t\tif (this.left !== SENTINEL) {\n\t\t\treturn righttest(this.left);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic detach(): void {\n\t\tthis.parent = null!;\n\t\tthis.left = null!;\n\t\tthis.right = null!;\n\t}\n}\n\nexport const enum NodeColor {\n\tBlack = 0,\n\tRed = 1,\n}\n\nexport const SENTINEL: TreeNode = new TreeNode(null!, NodeColor.Black);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = NodeColor.Black;\n\nexport function leftest(node: TreeNode): TreeNode {\n\twhile (node.left !== SENTINEL) {\n\t\tnode = node.left;\n\t}\n\treturn node;\n}\n\nexport function righttest(node: TreeNode): TreeNode {\n\twhile (node.right !== SENTINEL) {\n\t\tnode = node.right;\n\t}\n\treturn node;\n}\n\nfunction calculateSize(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.size_left + node.piece.length + calculateSize(node.right);\n}\n\nfunction calculateLF(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\n\nfunction resetSentinel(): void {\n\tSENTINEL.parent = SENTINEL;\n}\n\nexport function leftRotate(tree: PieceTreeBase, x: TreeNode) {\n\tconst y = x.right;\n\n\t// fix size_left\n\ty.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\tx.right = y.left;\n\n\tif (y.left !== SENTINEL) {\n\t\ty.left.parent = x;\n\t}\n\ty.parent = x.parent;\n\tif (x.parent === SENTINEL) {\n\t\ttree.root = y;\n\t} else if (x.parent.left === x) {\n\t\tx.parent.left = y;\n\t} else {\n\t\tx.parent.right = y;\n\t}\n\ty.left = x;\n\tx.parent = y;\n}\n\nexport function rightRotate(tree: PieceTreeBase, y: TreeNode) {\n\tconst x = y.left;\n\ty.left = x.right;\n\tif (x.right !== SENTINEL) {\n\t\tx.right.parent = y;\n\t}\n\tx.parent = y.parent;\n\n\t// fix size_left\n\ty.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\n\tif (y.parent === SENTINEL) {\n\t\ttree.root = x;\n\t} else if (y === y.parent.right) {\n\t\ty.parent.right = x;\n\t} else {\n\t\ty.parent.left = x;\n\t}\n\n\tx.right = y;\n\ty.parent = x;\n}\n\nexport function rbDelete(tree: PieceTreeBase, z: TreeNode) {\n\tlet x: TreeNode;\n\tlet y: TreeNode;\n\n\tif (z.left === SENTINEL) {\n\t\ty = z;\n\t\tx = y.right;\n\t} else if (z.right === SENTINEL) {\n\t\ty = z;\n\t\tx = y.left;\n\t} else {\n\t\ty = leftest(z.right);\n\t\tx = y.right;\n\t}\n\n\tif (y === tree.root) {\n\t\ttree.root = x;\n\n\t\t// if x is null, we are removing the only node\n\t\tx.color = NodeColor.Black;\n\t\tz.detach();\n\t\tresetSentinel();\n\t\ttree.root.parent = SENTINEL;\n\n\t\treturn;\n\t}\n\n\tconst yWasRed = (y.color === NodeColor.Red);\n\n\tif (y === y.parent.left) {\n\t\ty.parent.left = x;\n\t} else {\n\t\ty.parent.right = x;\n\t}\n\n\tif (y === z) {\n\t\tx.parent = y.parent;\n\t\trecomputeTreeMetadata(tree, x);\n\t} else {\n\t\tif (y.parent === z) {\n\t\t\tx.parent = y;\n\t\t} else {\n\t\t\tx.parent = y.parent;\n\t\t}\n\n\t\t// as we make changes to x's hierarchy, update size_left of subtree first\n\t\trecomputeTreeMetadata(tree, x);\n\n\t\ty.left = z.left;\n\t\ty.right = z.right;\n\t\ty.parent = z.parent;\n\t\ty.color = z.color;\n\n\t\tif (z === tree.root) {\n\t\t\ttree.root = y;\n\t\t} else {\n\t\t\tif (z === z.parent.left) {\n\t\t\t\tz.parent.left = y;\n\t\t\t} else {\n\t\t\t\tz.parent.right = y;\n\t\t\t}\n\t\t}\n\n\t\tif (y.left !== SENTINEL) {\n\t\t\ty.left.parent = y;\n\t\t}\n\t\tif (y.right !== SENTINEL) {\n\t\t\ty.right.parent = y;\n\t\t}\n\t\t// update metadata\n\t\t// we replace z with y, so in this sub tree, the length change is z.item.length\n\t\ty.size_left = z.size_left;\n\t\ty.lf_left = z.lf_left;\n\t\trecomputeTreeMetadata(tree, y);\n\t}\n\n\tz.detach();\n\n\tif (x.parent.left === x) {\n\t\tconst newSizeLeft = calculateSize(x);\n\t\tconst newLFLeft = calculateLF(x);\n\t\tif (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n\t\t\tconst delta = newSizeLeft - x.parent.size_left;\n\t\t\tconst lf_delta = newLFLeft - x.parent.lf_left;\n\t\t\tx.parent.size_left = newSizeLeft;\n\t\t\tx.parent.lf_left = newLFLeft;\n\t\t\tupdateTreeMetadata(tree, x.parent, delta, lf_delta);\n\t\t}\n\t}\n\n\trecomputeTreeMetadata(tree, x.parent);\n\n\tif (yWasRed) {\n\t\tresetSentinel();\n\t\treturn;\n\t}\n\n\t// RB-DELETE-FIXUP\n\tlet w: TreeNode;\n\twhile (x !== tree.root && x.color === NodeColor.Black) {\n\t\tif (x === x.parent.left) {\n\t\t\tw = x.parent.right;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tw = x.parent.right;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\t\t\t} else {\n\t\t\t\tif (w.right.color === NodeColor.Black) {\n\t\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\trightRotate(tree, w);\n\t\t\t\t\tw = x.parent.right;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t} else {\n\t\t\tw = x.parent.left;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tw = x.parent.left;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\n\t\t\t} else {\n\t\t\t\tif (w.left.color === NodeColor.Black) {\n\t\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\tleftRotate(tree, w);\n\t\t\t\t\tw = x.parent.left;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t}\n\t}\n\tx.color = NodeColor.Black;\n\tresetSentinel();\n}\n\nexport function fixInsert(tree: PieceTreeBase, x: TreeNode) {\n\trecomputeTreeMetadata(tree, x);\n\n\twhile (x !== tree.root && x.parent.color === NodeColor.Red) {\n\t\tif (x.parent === x.parent.parent.left) {\n\t\t\tconst y = x.parent.parent.right;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.right) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\tleftRotate(tree, x);\n\t\t\t\t}\n\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t} else {\n\t\t\tconst y = x.parent.parent.left;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.left) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\trightRotate(tree, x);\n\t\t\t\t}\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t}\n\t}\n\n\ttree.root.color = NodeColor.Black;\n}\n\nexport function updateTreeMetadata(tree: PieceTreeBase, x: TreeNode, delta: number, lineFeedCntDelta: number): void {\n\t// node length change or line feed count change\n\twhile (x !== tree.root && x !== SENTINEL) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lineFeedCntDelta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n\nexport function recomputeTreeMetadata(tree: PieceTreeBase, x: TreeNode) {\n\tlet delta = 0;\n\tlet lf_delta = 0;\n\tif (x === tree.root) {\n\t\treturn;\n\t}\n\n\t// go upwards till the node whose left subtree is changed.\n\twhile (x !== tree.root && x === x.parent.right) {\n\t\tx = x.parent;\n\t}\n\n\tif (x === tree.root) {\n\t\t// well, it means we add a node to the end (inorder)\n\t\treturn;\n\t}\n\n\t// x is the node whose right subtree is changed.\n\tx = x.parent;\n\n\tdelta = calculateSize(x.left) - x.size_left;\n\tlf_delta = calculateLF(x.left) - x.lf_left;\n\tx.size_left += delta;\n\tx.lf_left += lf_delta;\n\n\n\t// go upwards till root. O(logN)\n\twhile (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lf_delta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from '../../../base/common/uint.js';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprotected readonly _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprotected readonly _map: Map<number, number>;\n\n\tprotected readonly _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tconst defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tconst asciiMap = new Uint8Array(256);\n\t\tasciiMap.fill(defaultValue);\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tconst value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n\n\tpublic clear() {\n\t\tthis._asciiMap.fill(this._defaultValue);\n\t\tthis._map.clear();\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n\n\tpublic clear(): void {\n\t\treturn this._actual.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\n\nexport const enum WordCharacterClass {\n\tRegular = 0,\n\tWhitespace = 1,\n\tWordSeparator = 2\n}\n\nexport class WordCharacterClassifier extends CharacterClassifier<WordCharacterClass> {\n\n\tpublic readonly intlSegmenterLocales: Intl.UnicodeBCP47LocaleIdentifier[];\n\tprivate readonly _segmenter: Intl.Segmenter | null = null;\n\tprivate _cachedLine: string | null = null;\n\tprivate _cachedSegments: IntlWordSegmentData[] = [];\n\n\tconstructor(wordSeparators: string, intlSegmenterLocales: Intl.UnicodeBCP47LocaleIdentifier[]) {\n\t\tsuper(WordCharacterClass.Regular);\n\t\tthis.intlSegmenterLocales = intlSegmenterLocales;\n\t\tif (this.intlSegmenterLocales.length > 0) {\n\t\t\tthis._segmenter = new Intl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n\t\t} else {\n\t\t\tthis._segmenter = null;\n\t\t}\n\n\t\tfor (let i = 0, len = wordSeparators.length; i < len; i++) {\n\t\t\tthis.set(wordSeparators.charCodeAt(i), WordCharacterClass.WordSeparator);\n\t\t}\n\n\t\tthis.set(CharCode.Space, WordCharacterClass.Whitespace);\n\t\tthis.set(CharCode.Tab, WordCharacterClass.Whitespace);\n\t}\n\n\tpublic findPrevIntlWordBeforeOrAtOffset(line: string, offset: number): IntlWordSegmentData | null {\n\t\tlet candidate: IntlWordSegmentData | null = null;\n\t\tfor (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n\t\t\tif (segment.index > offset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcandidate = segment;\n\t\t}\n\t\treturn candidate;\n\t}\n\n\tpublic findNextIntlWordAtOrAfterOffset(lineContent: string, offset: number): IntlWordSegmentData | null {\n\t\tfor (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n\t\t\tif (segment.index < offset) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn segment;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _getIntlSegmenterWordsOnLine(line: string): IntlWordSegmentData[] {\n\t\tif (!this._segmenter) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Check if the line has changed from the previous call\n\t\tif (this._cachedLine === line) {\n\t\t\treturn this._cachedSegments;\n\t\t}\n\n\t\t// Update the cache with the new line\n\t\tthis._cachedLine = line;\n\t\tthis._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n\n\t\treturn this._cachedSegments;\n\t}\n\n\tprivate _filterWordSegments(segments: Intl.Segments): IntlWordSegmentData[] {\n\t\tconst result: IntlWordSegmentData[] = [];\n\t\tfor (const segment of segments) {\n\t\t\tif (this._isWordLike(segment)) {\n\t\t\t\tresult.push(segment);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _isWordLike(segment: Intl.SegmentData): segment is IntlWordSegmentData {\n\t\tif (segment.isWordLike) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport interface IntlWordSegmentData extends Intl.SegmentData {\n\tisWordLike: true;\n}\n\nconst wordClassifierCache = new LRUCache<string, WordCharacterClassifier>(10);\n\nexport function getMapForWordSeparators(wordSeparators: string, intlSegmenterLocales: Intl.UnicodeBCP47LocaleIdentifier[]): WordCharacterClassifier {\n\tconst key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n\tlet result = wordClassifierCache.get(key)!;\n\tif (!result) {\n\t\tresult = new WordCharacterClassifier(wordSeparators, intlSegmenterLocales);\n\t\twordClassifierCache.set(key, result);\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../base/common/charCode.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { WordCharacterClass, WordCharacterClassifier, getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { EndOfLinePreference, FindMatch, SearchData } from '../model.js';\nimport { TextModel } from './textModel.js';\n\nconst LIMIT_FIND_COUNT = 999;\n\nexport class SearchParams {\n\tpublic readonly searchString: string;\n\tpublic readonly isRegex: boolean;\n\tpublic readonly matchCase: boolean;\n\tpublic readonly wordSeparators: string | null;\n\n\tconstructor(searchString: string, isRegex: boolean, matchCase: boolean, wordSeparators: string | null) {\n\t\tthis.searchString = searchString;\n\t\tthis.isRegex = isRegex;\n\t\tthis.matchCase = matchCase;\n\t\tthis.wordSeparators = wordSeparators;\n\t}\n\n\tpublic parseSearchRequest(): SearchData | null {\n\t\tif (this.searchString === '') {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Try to create a RegExp out of the params\n\t\tlet multiline: boolean;\n\t\tif (this.isRegex) {\n\t\t\tmultiline = isMultilineRegexSource(this.searchString);\n\t\t} else {\n\t\t\tmultiline = (this.searchString.indexOf('\\n') >= 0);\n\t\t}\n\n\t\tlet regex: RegExp | null = null;\n\t\ttry {\n\t\t\tregex = strings.createRegExp(this.searchString, this.isRegex, {\n\t\t\t\tmatchCase: this.matchCase,\n\t\t\t\twholeWord: false,\n\t\t\t\tmultiline: multiline,\n\t\t\t\tglobal: true,\n\t\t\t\tunicode: true\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet canUseSimpleSearch = (!this.isRegex && !multiline);\n\t\tif (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n\t\t\t// casing might make a difference\n\t\t\tcanUseSimpleSearch = this.matchCase;\n\t\t}\n\n\t\treturn new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null, canUseSimpleSearch ? this.searchString : null);\n\t}\n}\n\nexport function isMultilineRegexSource(searchString: string): boolean {\n\tif (!searchString || searchString.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = searchString.length; i < len; i++) {\n\t\tconst chCode = searchString.charCodeAt(i);\n\n\t\tif (chCode === CharCode.LineFeed) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (chCode === CharCode.Backslash) {\n\n\t\t\t// move to next char\n\t\t\ti++;\n\n\t\t\tif (i >= len) {\n\t\t\t\t// string ends with a \\\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst nextChCode = searchString.charCodeAt(i);\n\t\t\tif (nextChCode === CharCode.n || nextChCode === CharCode.r || nextChCode === CharCode.W) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function createFindMatch(range: Range, rawMatches: RegExpExecArray, captureMatches: boolean): FindMatch {\n\tif (!captureMatches) {\n\t\treturn new FindMatch(range, null);\n\t}\n\tconst matches: string[] = [];\n\tfor (let i = 0, len = rawMatches.length; i < len; i++) {\n\t\tmatches[i] = rawMatches[i];\n\t}\n\treturn new FindMatch(range, matches);\n}\n\nclass LineFeedCounter {\n\n\tprivate readonly _lineFeedsOffsets: number[];\n\n\tconstructor(text: string) {\n\t\tconst lineFeedsOffsets: number[] = [];\n\t\tlet lineFeedsOffsetsLen = 0;\n\t\tfor (let i = 0, textLen = text.length; i < textLen; i++) {\n\t\t\tif (text.charCodeAt(i) === CharCode.LineFeed) {\n\t\t\t\tlineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n\t\t\t}\n\t\t}\n\t\tthis._lineFeedsOffsets = lineFeedsOffsets;\n\t}\n\n\tpublic findLineFeedCountBeforeOffset(offset: number): number {\n\t\tconst lineFeedsOffsets = this._lineFeedsOffsets;\n\t\tlet min = 0;\n\t\tlet max = lineFeedsOffsets.length - 1;\n\n\t\tif (max === -1) {\n\t\t\t// no line feeds\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (offset <= lineFeedsOffsets[0]) {\n\t\t\t// before first line feed\n\t\t\treturn 0;\n\t\t}\n\n\t\twhile (min < max) {\n\t\t\tconst mid = min + ((max - min) / 2 >> 0);\n\n\t\t\tif (lineFeedsOffsets[mid] >= offset) {\n\t\t\t\tmax = mid - 1;\n\t\t\t} else {\n\t\t\t\tif (lineFeedsOffsets[mid + 1] >= offset) {\n\t\t\t\t\t// bingo!\n\t\t\t\t\tmin = mid;\n\t\t\t\t\tmax = mid;\n\t\t\t\t} else {\n\t\t\t\t\tmin = mid + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn min + 1;\n\t}\n}\n\nexport class TextModelSearch {\n\n\tpublic static findMatches(model: TextModel, searchParams: SearchParams, searchRange: Range, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n\t\t}\n\t\treturn this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t/**\n\t * Multiline search always executes on the lines concatenated with \\n.\n\t * We must therefore compensate for the count of \\n in case the model is CRLF\n\t */\n\tprivate static _getMultilineMatchRange(model: TextModel, deltaOffset: number, text: string, lfCounter: LineFeedCounter | null, matchIndex: number, match0: string): Range {\n\t\tlet startOffset: number;\n\t\tlet lineFeedCountBeforeMatch = 0;\n\t\tif (lfCounter) {\n\t\t\tlineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n\t\t\tstartOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tstartOffset = deltaOffset + matchIndex;\n\t\t}\n\n\t\tlet endOffset: number;\n\t\tif (lfCounter) {\n\t\t\tconst lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n\t\t\tconst lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n\t\t\tendOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tendOffset = startOffset + match0.length;\n\t\t}\n\n\t\tconst startPosition = model.getPositionAt(startOffset);\n\t\tconst endPosition = model.getPositionAt(endOffset);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tprivate static _doFindMatchesMultiline(model: TextModel, searchRange: Range, searcher: Searcher, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(searchRange, EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\n\t\tconst result: FindMatch[] = [];\n\t\tlet counter = 0;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tresult[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n\t\t\tif (counter >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _doFindMatchesLineByLine(model: TextModel, searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\n\t\t// Early case for a search range that starts & stops on the same line number\n\t\tif (searchRange.startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\t// Collect results from first line\n\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\n\t\t// Collect results from middle lines\n\t\tfor (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n\t\t\tresultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\t// Collect results from last line\n\t\tif (resultLen < limitResultCount) {\n\t\t\tconst text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _findMatchesInLine(searchData: SearchData, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\tpublic static findNextMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindNextMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst searchTextStart = new Position(searchStart.lineNumber, 1);\n\t\tconst deltaOffset = model.getOffsetAt(searchTextStart);\n\t\tconst lineCount = model.getLineCount();\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\t\tsearcher.reset(searchStart.column - 1);\n\t\tconst m = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tthis._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\n\t\tif (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n\t\t\t// Try again from the top\n\t\t\treturn this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindNextMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber);\n\t\tconst r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (startLineNumber + i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findFirstMatchInLine(searcher: Searcher, text: string, lineNumber: number, fromColumn: number, captureMatches: boolean): FindMatch | null {\n\t\t// Set regex to search from column\n\t\tsearcher.reset(fromColumn - 1);\n\t\tconst m: RegExpExecArray | null = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tnew Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static findPreviousMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindPreviousMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n\t\tif (matches.length > 0) {\n\t\t\treturn matches[matches.length - 1];\n\t\t}\n\n\t\tconst lineCount = model.getLineCount();\n\t\tif (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n\t\t\t// Try again with all content\n\t\t\treturn this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindPreviousMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n\t\tconst r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findLastMatchInLine(searcher: Searcher, text: string, lineNumber: number, captureMatches: boolean): FindMatch | null {\n\t\tlet bestResult: FindMatch | null = null;\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tbestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n\t\t}\n\t\treturn bestResult;\n\t}\n}\n\nfunction leftIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex === 0) {\n\t\t// Match starts at start of string\n\t\treturn true;\n\t}\n\n\tconst charBefore = text.charCodeAt(matchStartIndex - 1);\n\tif (wordSeparators.get(charBefore) !== WordCharacterClass.Regular) {\n\t\t// The character before the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charBefore === CharCode.CarriageReturn || charBefore === CharCode.LineFeed) {\n\t\t// The character before the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst firstCharInMatch = text.charCodeAt(matchStartIndex);\n\t\tif (wordSeparators.get(firstCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The first character inside the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction rightIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex + matchLength === textLength) {\n\t\t// Match ends at end of string\n\t\treturn true;\n\t}\n\n\tconst charAfter = text.charCodeAt(matchStartIndex + matchLength);\n\tif (wordSeparators.get(charAfter) !== WordCharacterClass.Regular) {\n\t\t// The character after the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charAfter === CharCode.CarriageReturn || charAfter === CharCode.LineFeed) {\n\t\t// The character after the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n\t\tif (wordSeparators.get(lastCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The last character in the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function isValidMatch(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\treturn (\n\t\tleftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t\t&& rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t);\n}\n\nexport class Searcher {\n\tpublic readonly _wordSeparators: WordCharacterClassifier | null;\n\tprivate readonly _searchRegex: RegExp;\n\tprivate _prevMatchStartIndex: number;\n\tprivate _prevMatchLength: number;\n\n\tconstructor(wordSeparators: WordCharacterClassifier | null, searchRegex: RegExp,) {\n\t\tthis._wordSeparators = wordSeparators;\n\t\tthis._searchRegex = searchRegex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic reset(lastIndex: number): void {\n\t\tthis._searchRegex.lastIndex = lastIndex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic next(text: string): RegExpExecArray | null {\n\t\tconst textLength = text.length;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tdo {\n\t\t\tif (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n\t\t\t\t// Reached the end of the line\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tm = this._searchRegex.exec(text);\n\t\t\tif (!m) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst matchStartIndex = m.index;\n\t\t\tconst matchLength = m[0].length;\n\t\t\tif (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n\t\t\t\tif (matchLength === 0) {\n\t\t\t\t\t// the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n\t\t\t\t\t// we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n\t\t\t\t\tif (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Exit early if the regex matches the same range twice\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._prevMatchStartIndex = matchStartIndex;\n\t\t\tthis._prevMatchLength = matchLength;\n\n\t\t\tif (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n\t\t\t\treturn m;\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { FindMatch, ITextSnapshot, SearchData } from '../../model.js';\nimport { NodeColor, SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from './rbTreeBase.js';\nimport { Searcher, createFindMatch, isValidMatch } from '../textModelSearch.js';\n\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nconst AverageBufferSize = 65535;\n\nfunction createUintArray(arr: number[]): Uint32Array | Uint16Array {\n\tlet r;\n\tif (arr[arr.length - 1] < 65536) {\n\t\tr = new Uint16Array(arr.length);\n\t} else {\n\t\tr = new Uint32Array(arr.length);\n\t}\n\tr.set(arr, 0);\n\treturn r;\n}\n\nclass LineStarts {\n\tconstructor(\n\t\tpublic readonly lineStarts: Uint32Array | Uint16Array | number[],\n\t\tpublic readonly cr: number,\n\t\tpublic readonly lf: number,\n\t\tpublic readonly crlf: number,\n\t\tpublic readonly isBasicASCII: boolean\n\t) { }\n}\n\nexport function createLineStartsFast(str: string, readonly: boolean = true): Uint32Array | Uint16Array | number[] {\n\tconst r: number[] = [0];\n\tlet rLength = 1;\n\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tr[rLength++] = i + 1;\n\t\t}\n\t}\n\tif (readonly) {\n\t\treturn createUintArray(r);\n\t} else {\n\t\treturn r;\n\t}\n}\n\nexport function createLineStarts(r: number[], str: string): LineStarts {\n\tr.length = 0;\n\tr[0] = 0;\n\tlet rLength = 1;\n\tlet cr = 0, lf = 0, crlf = 0;\n\tlet isBasicASCII = true;\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tcrlf++;\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\tcr++;\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tlf++;\n\t\t\tr[rLength++] = i + 1;\n\t\t} else {\n\t\t\tif (isBasicASCII) {\n\t\t\t\tif (chr !== CharCode.Tab && (chr < 32 || chr > 126)) {\n\t\t\t\t\tisBasicASCII = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n\tr.length = 0;\n\n\treturn result;\n}\n\ninterface NodePosition {\n\t/**\n\t * Piece Index\n\t */\n\tnode: TreeNode;\n\t/**\n\t * remainder in current piece.\n\t*/\n\tremainder: number;\n\t/**\n\t * node start offset in document.\n\t */\n\tnodeStartOffset: number;\n}\n\ninterface BufferCursor {\n\t/**\n\t * Line number in current buffer\n\t */\n\tline: number;\n\t/**\n\t * Column number in current buffer\n\t */\n\tcolumn: number;\n}\n\nexport class Piece {\n\treadonly bufferIndex: number;\n\treadonly start: BufferCursor;\n\treadonly end: BufferCursor;\n\treadonly length: number;\n\treadonly lineFeedCnt: number;\n\n\tconstructor(bufferIndex: number, start: BufferCursor, end: BufferCursor, lineFeedCnt: number, length: number) {\n\t\tthis.bufferIndex = bufferIndex;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.lineFeedCnt = lineFeedCnt;\n\t\tthis.length = length;\n\t}\n}\n\nexport class StringBuffer {\n\tbuffer: string;\n\tlineStarts: Uint32Array | Uint16Array | number[];\n\n\tconstructor(buffer: string, lineStarts: Uint32Array | Uint16Array | number[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.lineStarts = lineStarts;\n\t}\n}\n\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot implements ITextSnapshot {\n\tprivate readonly _pieces: Piece[];\n\tprivate _index: number;\n\tprivate readonly _tree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\n\tconstructor(tree: PieceTreeBase, BOM: string) {\n\t\tthis._pieces = [];\n\t\tthis._tree = tree;\n\t\tthis._BOM = BOM;\n\t\tthis._index = 0;\n\t\tif (tree.root !== SENTINEL) {\n\t\t\ttree.iterate(tree.root, node => {\n\t\t\t\tif (node !== SENTINEL) {\n\t\t\t\t\tthis._pieces.push(node.piece);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\tread(): string | null {\n\t\tif (this._pieces.length === 0) {\n\t\t\tif (this._index === 0) {\n\t\t\t\tthis._index++;\n\t\t\t\treturn this._BOM;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this._index > this._pieces.length - 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._index === 0) {\n\t\t\treturn this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n\t\t}\n\t\treturn this._tree.getPieceContent(this._pieces[this._index++]);\n\t}\n}\n\ninterface CacheEntry {\n\tnode: TreeNode;\n\tnodeStartOffset: number;\n\tnodeStartLineNumber?: number;\n}\n\nclass PieceTreeSearchCache {\n\tprivate readonly _limit: number;\n\tprivate _cache: CacheEntry[];\n\n\tconstructor(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis._cache = [];\n\t}\n\n\tpublic get(offset: number): CacheEntry | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n\t\t\t\treturn nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get2(lineNumber: number): { node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number } | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tconst nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n\t\t\t\treturn <{ node: TreeNode; nodeStartOffset: number; nodeStartLineNumber: number }>nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(nodePosition: CacheEntry) {\n\t\tif (this._cache.length >= this._limit) {\n\t\t\tthis._cache.shift();\n\t\t}\n\t\tthis._cache.push(nodePosition);\n\t}\n\n\tpublic validate(offset: number) {\n\t\tlet hasInvalidVal = false;\n\t\tconst tmp: Array<CacheEntry | null> = this._cache;\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tconst nodePos = tmp[i]!;\n\t\t\tif (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n\t\t\t\ttmp[i] = null;\n\t\t\t\thasInvalidVal = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInvalidVal) {\n\t\t\tconst newArr: CacheEntry[] = [];\n\t\t\tfor (const entry of tmp) {\n\t\t\t\tif (entry !== null) {\n\t\t\t\t\tnewArr.push(entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = newArr;\n\t\t}\n\t}\n}\n\nexport class PieceTreeBase {\n\troot!: TreeNode;\n\tprotected _buffers!: StringBuffer[]; // 0 is change buffer, others are readonly original buffer.\n\tprotected _lineCnt!: number;\n\tprotected _length!: number;\n\tprotected _EOL!: '\\r\\n' | '\\n';\n\tprotected _EOLLength!: number;\n\tprotected _EOLNormalized!: boolean;\n\tprivate _lastChangeBufferPos!: BufferCursor;\n\tprivate _searchCache!: PieceTreeSearchCache;\n\tprivate _lastVisitedLine!: { lineNumber: number; value: string };\n\n\tconstructor(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis.create(chunks, eol, eolNormalized);\n\t}\n\n\tcreate(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis._buffers = [\n\t\t\tnew StringBuffer('', [0])\n\t\t];\n\t\tthis._lastChangeBufferPos = { line: 0, column: 0 };\n\t\tthis.root = SENTINEL;\n\t\tthis._lineCnt = 1;\n\t\tthis._length = 0;\n\t\tthis._EOL = eol;\n\t\tthis._EOLLength = eol.length;\n\t\tthis._EOLNormalized = eolNormalized;\n\n\t\tlet lastNode: TreeNode | null = null;\n\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\tif (chunks[i].buffer.length > 0) {\n\t\t\t\tif (!chunks[i].lineStarts) {\n\t\t\t\t\tchunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n\t\t\t\t}\n\n\t\t\t\tconst piece = new Piece(\n\t\t\t\t\ti + 1,\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] },\n\t\t\t\t\tchunks[i].lineStarts.length - 1,\n\t\t\t\t\tchunks[i].buffer.length\n\t\t\t\t);\n\t\t\t\tthis._buffers.push(chunks[i]);\n\t\t\t\tlastNode = this.rbInsertRight(lastNode, piece);\n\t\t\t}\n\t\t}\n\n\t\tthis._searchCache = new PieceTreeSearchCache(1);\n\t\tthis._lastVisitedLine = { lineNumber: 0, value: '' };\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tnormalizeEOL(eol: '\\r\\n' | '\\n') {\n\t\tconst averageBufferSize = AverageBufferSize;\n\t\tconst min = averageBufferSize - Math.floor(averageBufferSize / 3);\n\t\tconst max = min * 2;\n\n\t\tlet tempChunk = '';\n\t\tlet tempChunkLen = 0;\n\t\tconst chunks: StringBuffer[] = [];\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tif (tempChunkLen <= min || tempChunkLen + len < max) {\n\t\t\t\ttempChunk += str;\n\t\t\t\ttempChunkLen += len;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// flush anyways\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t\ttempChunk = str;\n\t\t\ttempChunkLen = len;\n\t\t\treturn true;\n\t\t});\n\n\t\tif (tempChunkLen > 0) {\n\t\t\tconst text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t}\n\n\t\tthis.create(chunks, eol, true);\n\t}\n\n\t// #region Buffer API\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._EOL = newEOL;\n\t\tthis._EOLLength = this._EOL.length;\n\t\tthis.normalizeEOL(newEOL);\n\t}\n\n\tpublic createSnapshot(BOM: string): ITextSnapshot {\n\t\treturn new PieceTreeSnapshot(this, BOM);\n\t}\n\n\tpublic equal(other: PieceTreeBase): boolean {\n\t\tif (this.getLength() !== other.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getLineCount() !== other.getLineCount()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet offset = 0;\n\t\tconst ret = this.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst str = this.getNodeContent(node);\n\t\t\tconst len = str.length;\n\t\t\tconst startPosition = other.nodeAt(offset);\n\t\t\tconst endPosition = other.nodeAt(offset + len);\n\t\t\tconst val = other.getValueInRange2(startPosition, endPosition);\n\n\t\t\toffset += len;\n\t\t\treturn str === val;\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\tlet leftLen = 0; // inorder\n\n\t\tlet x = this.root;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n\t\t\t\tleftLen += x.size_left;\n\t\t\t\t// lineNumber >= 2\n\t\t\t\tconst accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\treturn leftLen += accumualtedValInCurrentIndex + column - 1;\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tleftLen += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn leftLen;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tlet x = this.root;\n\t\tlet lfCnt = 0;\n\t\tconst originalOffset = offset;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left !== 0 && x.size_left >= offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tconst out = this.getIndexOf(x, offset - x.size_left);\n\n\t\t\t\tlfCnt += x.lf_left + out.index;\n\n\t\t\t\tif (out.index === 0) {\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t}\n\n\t\t\t\treturn new Position(lfCnt + 1, out.remainder + 1);\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\n\t\t\t\tif (x.right === SENTINEL) {\n\t\t\t\t\t// last node\n\t\t\t\t\tconst lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tconst column = originalOffset - offset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t} else {\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(1, 1);\n\t}\n\n\tpublic getValueInRange(range: Range, eol?: string): string {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n\t\tconst endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n\n\t\tconst value = this.getValueInRange2(startPosition, endPosition);\n\t\tif (eol) {\n\t\t\tif (eol !== this._EOL || !this._EOLNormalized) {\n\t\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t}\n\n\t\t\tif (eol === this.getEOL() && this._EOLNormalized) {\n\t\t\t\tif (eol === '\\r\\n') {\n\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic getValueInRange2(startPosition: NodePosition, endPosition: NodePosition): string {\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tconst node = startPosition.node;\n\t\t\tconst buffer = this._buffers[node.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\t\treturn buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n\t\t}\n\n\t\tlet x = startPosition.node;\n\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\tlet ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\tif (x === endPosition.node) {\n\t\t\t\tret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tconst lines: string[] = [];\n\t\tlet linesLength = 0;\n\t\tlet currentLine = '';\n\t\tlet danglingCR = false;\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst piece = node.piece;\n\t\t\tlet pieceLength = piece.length;\n\t\t\tif (pieceLength === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[piece.bufferIndex].buffer;\n\t\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\n\t\t\tconst pieceStartLine = piece.start.line;\n\t\t\tconst pieceEndLine = piece.end.line;\n\t\t\tlet pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n\n\t\t\tif (danglingCR) {\n\t\t\t\tif (buffer.charCodeAt(pieceStartOffset) === CharCode.LineFeed) {\n\t\t\t\t\t// pretend the \\n was in the previous piece..\n\t\t\t\t\tpieceStartOffset++;\n\t\t\t\t\tpieceLength--;\n\t\t\t\t}\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t\tcurrentLine = '';\n\t\t\t\tdanglingCR = false;\n\t\t\t\tif (pieceLength === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pieceStartLine === pieceEndLine) {\n\t\t\t\t// this piece has no new lines\n\t\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === CharCode.CarriageReturn) {\n\t\t\t\t\tdanglingCR = true;\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// add the text before the first line start in this piece\n\t\t\tcurrentLine += (\n\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n\t\t\t\t\t: buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t);\n\t\t\tlines[linesLength++] = currentLine;\n\n\t\t\tfor (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n\t\t\t\tcurrentLine = (\n\t\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t\t? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n\t\t\t\t\t\t: buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t\t);\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t}\n\n\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === CharCode.CarriageReturn) {\n\t\t\t\tdanglingCR = true;\n\t\t\t\tif (piece.end.column === 0) {\n\t\t\t\t\t// The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n\t\t\t\t\tlinesLength--;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (danglingCR) {\n\t\t\tlines[linesLength++] = currentLine;\n\t\t\tcurrentLine = '';\n\t\t}\n\n\t\tlines[linesLength++] = currentLine;\n\t\treturn lines;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._length;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lineCnt;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._lastVisitedLine.lineNumber === lineNumber) {\n\t\t\treturn this._lastVisitedLine.value;\n\t\t}\n\n\t\tthis._lastVisitedLine.lineNumber = lineNumber;\n\n\t\tif (lineNumber === this._lineCnt) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n\t\t} else if (this._EOLNormalized) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n\t\t} else {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n\t\t}\n\n\t\treturn this._lastVisitedLine.value;\n\t}\n\n\tprivate _getCharCode(nodePos: NodePosition): number {\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the char we want to fetch is at the head of next node.\n\t\t\tconst matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.charCodeAt(startOffset);\n\t\t} else {\n\t\t\tconst buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tconst targetOffset = startOffset + nodePos.remainder;\n\n\t\t\treturn buffer.buffer.charCodeAt(targetOffset);\n\t\t}\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\tconst nodePos = this.nodeAt2(lineNumber, index + 1);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tif (lineNumber === this.getLineCount()) {\n\t\t\tconst startOffset = this.getOffsetAt(lineNumber, 1);\n\t\t\treturn this.getLength() - startOffset;\n\t\t}\n\t\treturn this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\tconst nodePos = this.nodeAt(offset);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getNearestChunk(offset: number): string {\n\t\tconst nodePos = this.nodeAt(offset);\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the offset is at the head of next node.\n\t\t\tconst matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode || matchingNode === SENTINEL) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.substring(startOffset, startOffset + matchingNode.piece.length);\n\t\t} else {\n\t\t\tconst buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tconst startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tconst targetOffset = startOffset + nodePos.remainder;\n\t\t\tconst targetEnd = startOffset + nodePos.node.piece.length;\n\t\t\treturn buffer.buffer.substring(targetOffset, targetEnd);\n\t\t}\n\t}\n\n\tpublic findMatchesInNode(node: TreeNode, searcher: Searcher, startLineNumber: number, startColumn: number, startCursor: BufferCursor, endCursor: BufferCursor, searchData: SearchData, captureMatches: boolean, limitResultCount: number, resultLen: number, result: FindMatch[]) {\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\tconst start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n\t\tconst end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tconst ret: BufferCursor = { line: 0, column: 0 };\n\t\tlet searchText: string;\n\t\tlet offsetInBuffer: (offset: number) => number;\n\n\t\tif (searcher._wordSeparators) {\n\t\t\tsearchText = buffer.buffer.substring(start, end);\n\t\t\toffsetInBuffer = (offset: number) => offset + start;\n\t\t\tsearcher.reset(0);\n\t\t} else {\n\t\t\tsearchText = buffer.buffer;\n\t\t\toffsetInBuffer = (offset: number) => offset;\n\t\t\tsearcher.reset(start);\n\t\t}\n\n\t\tdo {\n\t\t\tm = searcher.next(searchText);\n\n\t\t\tif (m) {\n\t\t\t\tif (offsetInBuffer(m.index) >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tthis.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n\t\t\t\tconst lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n\t\t\t\tconst retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n\t\t\t\tconst retEndColumn = retStartColumn + m[0].length;\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n\n\t\t\t\tif (offsetInBuffer(m.index) + m[0].length >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn resultLen;\n\t}\n\n\tpublic findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tlet startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n\t\tif (startPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tconst endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n\t\tif (endPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\tconst end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tthis.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startLineNumber = searchRange.startLineNumber;\n\n\t\tlet currentNode = startPosition.node;\n\t\twhile (currentNode !== endPosition.node) {\n\t\t\tconst lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n\n\t\t\tif (lineBreakCnt >= 1) {\n\t\t\t\t// last line break position\n\t\t\t\tconst lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n\t\t\t\tconst startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n\t\t\t\tconst nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n\t\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\t\t\tresultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber += lineBreakCnt;\n\t\t\t}\n\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\t// search for the remaining content\n\t\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\n\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tstartLineNumber++;\n\t\t\tstartPosition = this.nodeAt2(startLineNumber, 1);\n\t\t\tcurrentNode = startPosition.node;\n\t\t\tstart = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\t}\n\n\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\tconst startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\tresultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\treturn result;\n\t}\n\n\tprivate _findMatchesInLine(searchData: SearchData, searcher: Searcher, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\t// #endregion\n\n\t// #region Piece Table\n\tpublic insert(offset: number, value: string, eolNormalized: boolean = false): void {\n\t\tthis._EOLNormalized = this._EOLNormalized && eolNormalized;\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (this.root !== SENTINEL) {\n\t\t\tconst { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n\t\t\tconst piece = node.piece;\n\t\t\tconst bufferIndex = piece.bufferIndex;\n\t\t\tconst insertPosInBuffer = this.positionInBuffer(node, remainder);\n\t\t\tif (node.piece.bufferIndex === 0 &&\n\t\t\t\tpiece.end.line === this._lastChangeBufferPos.line &&\n\t\t\t\tpiece.end.column === this._lastChangeBufferPos.column &&\n\t\t\t\t(nodeStartOffset + piece.length === offset) &&\n\t\t\t\tvalue.length < AverageBufferSize\n\t\t\t) {\n\t\t\t\t// changed buffer\n\t\t\t\tthis.appendToNode(node, value);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (nodeStartOffset === offset) {\n\t\t\t\tthis.insertContentToNodeLeft(value, node);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t} else if (nodeStartOffset + node.piece.length > offset) {\n\t\t\t\t// we are inserting into the middle of a node.\n\t\t\t\tconst nodesToDel: TreeNode[] = [];\n\t\t\t\tlet newRightPiece = new Piece(\n\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\tinsertPosInBuffer,\n\t\t\t\t\tpiece.end,\n\t\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end),\n\t\t\t\t\tthis.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer)\n\t\t\t\t);\n\n\t\t\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\t\t\tconst headOfRight = this.nodeCharCodeAt(node, remainder);\n\n\t\t\t\t\tif (headOfRight === 10 /** \\n */) {\n\t\t\t\t\t\tconst newStart: BufferCursor = { line: newRightPiece.start.line + 1, column: 0 };\n\t\t\t\t\t\tnewRightPiece = new Piece(\n\t\t\t\t\t\t\tnewRightPiece.bufferIndex,\n\t\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\t\tnewRightPiece.end,\n\t\t\t\t\t\t\tthis.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end),\n\t\t\t\t\t\t\tnewRightPiece.length - 1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue += '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reuse node for content before insertion point.\n\t\t\t\tif (this.shouldCheckCRLF() && this.startWithLF(value)) {\n\t\t\t\t\tconst tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n\t\t\t\t\tif (tailOfLeft === 13 /** \\r */) {\n\t\t\t\t\t\tconst previousPos = this.positionInBuffer(node, remainder - 1);\n\t\t\t\t\t\tthis.deleteNodeTail(node, previousPos);\n\t\t\t\t\t\tvalue = '\\r' + value;\n\n\t\t\t\t\t\tif (node.piece.length === 0) {\n\t\t\t\t\t\t\tnodesToDel.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t}\n\n\t\t\t\tconst newPieces = this.createNewPieces(value);\n\t\t\t\tif (newRightPiece.length > 0) {\n\t\t\t\t\tthis.rbInsertRight(node, newRightPiece);\n\t\t\t\t}\n\n\t\t\t\tlet tmpNode = node;\n\t\t\t\tfor (let k = 0; k < newPieces.length; k++) {\n\t\t\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t\t\t}\n\t\t\t\tthis.deleteNodes(nodesToDel);\n\t\t\t} else {\n\t\t\t\tthis.insertContentToNodeRight(value, node);\n\t\t\t}\n\t\t} else {\n\t\t\t// insert new node\n\t\t\tconst pieces = this.createNewPieces(value);\n\t\t\tlet node = this.rbInsertLeft(null, pieces[0]);\n\n\t\t\tfor (let k = 1; k < pieces.length; k++) {\n\t\t\t\tnode = this.rbInsertRight(node, pieces[k]);\n\t\t\t}\n\t\t}\n\n\t\t// todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tpublic delete(offset: number, cnt: number): void {\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (cnt <= 0 || this.root === SENTINEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startPosition = this.nodeAt(offset);\n\t\tconst endPosition = this.nodeAt(offset + cnt);\n\t\tconst startNode = startPosition.node;\n\t\tconst endNode = endPosition.node;\n\n\t\tif (startNode === endNode) {\n\t\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\t\tconst endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n\n\t\t\tif (startPosition.nodeStartOffset === offset) {\n\t\t\t\tif (cnt === startNode.piece.length) { // delete node\n\t\t\t\t\tconst next = startNode.next();\n\t\t\t\t\trbDelete(this, startNode);\n\t\t\t\t\tthis.validateCRLFWithPrevNode(next);\n\t\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.deleteNodeHead(startNode, endSplitPosInBuffer);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t\tthis.validateCRLFWithPrevNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n\t\t\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\t\t\tthis.validateCRLFWithNextNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// delete content in the middle, this node will be splitted to nodes\n\t\t\tthis.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n\t\t\tthis.computeBufferMetadata();\n\t\t\treturn;\n\t\t}\n\n\t\tconst nodesToDel: TreeNode[] = [];\n\n\t\tconst startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\tthis._searchCache.validate(offset);\n\t\tif (startNode.piece.length === 0) {\n\t\t\tnodesToDel.push(startNode);\n\t\t}\n\n\t\t// update last touched node\n\t\tconst endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n\t\tthis.deleteNodeHead(endNode, endSplitPosInBuffer);\n\t\tif (endNode.piece.length === 0) {\n\t\t\tnodesToDel.push(endNode);\n\t\t}\n\n\t\t// delete nodes in between\n\t\tconst secondNode = startNode.next();\n\t\tfor (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n\t\t\tnodesToDel.push(node);\n\t\t}\n\n\t\tconst prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n\t\tthis.deleteNodes(nodesToDel);\n\t\tthis.validateCRLFWithNextNode(prev);\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tprivate insertContentToNodeLeft(value: string, node: TreeNode) {\n\t\t// we are inserting content to the beginning of node\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n\t\t\t// move `\\n` to new node.\n\n\t\t\tconst piece = node.piece;\n\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\tconst nPiece = new Piece(\n\t\t\t\tpiece.bufferIndex,\n\t\t\t\tnewStart,\n\t\t\t\tpiece.end,\n\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, newStart, piece.end),\n\t\t\t\tpiece.length - 1\n\t\t\t);\n\n\t\t\tnode.piece = nPiece;\n\n\t\t\tvalue += '\\n';\n\t\t\tupdateTreeMetadata(this, node, -1, -1);\n\n\t\t\tif (node.piece.length === 0) {\n\t\t\t\tnodesToDel.push(node);\n\t\t\t}\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n\t\tfor (let k = newPieces.length - 2; k >= 0; k--) {\n\t\t\tnewNode = this.rbInsertLeft(newNode, newPieces[k]);\n\t\t}\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t\tthis.deleteNodes(nodesToDel);\n\t}\n\n\tprivate insertContentToNodeRight(value: string, node: TreeNode) {\n\t\t// we are inserting to the right of this node.\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\t// move \\n to the new node.\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst newPieces = this.createNewPieces(value);\n\t\tconst newNode = this.rbInsertRight(node, newPieces[0]);\n\t\tlet tmpNode = newNode;\n\n\t\tfor (let k = 1; k < newPieces.length; k++) {\n\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t}\n\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate positionInBuffer(node: TreeNode, remainder: number): BufferCursor;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret: BufferCursor): null;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret?: BufferCursor): BufferCursor | null {\n\t\tconst piece = node.piece;\n\t\tconst bufferIndex = node.piece.bufferIndex;\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\n\t\tconst startOffset = lineStarts[piece.start.line] + piece.start.column;\n\n\t\tconst offset = startOffset + remainder;\n\n\t\t// binary search offset between startOffset and endOffset\n\t\tlet low = piece.start.line;\n\t\tlet high = piece.end.line;\n\n\t\tlet mid: number = 0;\n\t\tlet midStop: number = 0;\n\t\tlet midStart: number = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\t\t\tmidStart = lineStarts[mid];\n\n\t\t\tif (mid === high) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmidStop = lineStarts[mid + 1];\n\n\t\t\tif (offset < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (offset >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret.line = mid;\n\t\t\tret.column = offset - midStart;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tline: mid,\n\t\t\tcolumn: offset - midStart\n\t\t};\n\t}\n\n\tprivate getLineFeedCnt(bufferIndex: number, start: BufferCursor, end: BufferCursor): number {\n\t\t// we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n\t\t// now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n\t\tif (end.column === 0) {\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\tif (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tconst nextLineStartOffset = lineStarts[end.line + 1];\n\t\tconst endOffset = lineStarts[end.line] + end.column;\n\t\tif (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n\t\t\treturn end.line - start.line;\n\t\t}\n\t\t// endOffset + 1 === nextLineStartOffset\n\t\t// character at endOffset is \\n, so we check the character before first\n\t\t// if character at endOffset is \\r, end.column is 0 and we can't get here.\n\t\tconst previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n\t\tconst buffer = this._buffers[bufferIndex].buffer;\n\n\t\tif (buffer.charCodeAt(previousCharOffset) === 13) {\n\t\t\treturn end.line - start.line + 1;\n\t\t} else {\n\t\t\treturn end.line - start.line;\n\t\t}\n\t}\n\n\tprivate offsetInBuffer(bufferIndex: number, cursor: BufferCursor): number {\n\t\tconst lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\treturn lineStarts[cursor.line] + cursor.column;\n\t}\n\n\tprivate deleteNodes(nodes: TreeNode[]): void {\n\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\trbDelete(this, nodes[i]);\n\t\t}\n\t}\n\n\tprivate createNewPieces(text: string): Piece[] {\n\t\tif (text.length > AverageBufferSize) {\n\t\t\t// the content is large, operations like substring, charCode becomes slow\n\t\t\t// so here we split it into smaller chunks, just like what we did for CR/LF normalization\n\t\t\tconst newPieces: Piece[] = [];\n\t\t\twhile (text.length > AverageBufferSize) {\n\t\t\t\tconst lastChar = text.charCodeAt(AverageBufferSize - 1);\n\t\t\t\tlet splitText;\n\t\t\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize - 1);\n\t\t\t\t\ttext = text.substring(AverageBufferSize - 1);\n\t\t\t\t} else {\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize);\n\t\t\t\t\ttext = text.substring(AverageBufferSize);\n\t\t\t\t}\n\n\t\t\t\tconst lineStarts = createLineStartsFast(splitText);\n\t\t\t\tnewPieces.push(new Piece(\n\t\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\t\tlineStarts.length - 1,\n\t\t\t\t\tsplitText.length\n\t\t\t\t));\n\t\t\t\tthis._buffers.push(new StringBuffer(splitText, lineStarts));\n\t\t\t}\n\n\t\t\tconst lineStarts = createLineStartsFast(text);\n\t\t\tnewPieces.push(new Piece(\n\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t{ line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\tlineStarts.length - 1,\n\t\t\t\ttext.length\n\t\t\t));\n\t\t\tthis._buffers.push(new StringBuffer(text, lineStarts));\n\n\t\t\treturn newPieces;\n\t\t}\n\n\t\tlet startOffset = this._buffers[0].buffer.length;\n\t\tconst lineStarts = createLineStartsFast(text, false);\n\n\t\tlet start = this._lastChangeBufferPos;\n\t\tif (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n\t\t\t&& startOffset !== 0\n\t\t\t&& this.startWithLF(text)\n\t\t\t&& this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n\t\t) {\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n\t\t\tstart = this._lastChangeBufferPos;\n\n\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\tlineStarts[i] += startOffset + 1;\n\t\t\t}\n\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += '_' + text;\n\t\t\tstartOffset += 1;\n\t\t} else {\n\t\t\tif (startOffset !== 0) {\n\t\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\t\tlineStarts[i] += startOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += text;\n\t\t}\n\n\t\tconst endOffset = this._buffers[0].buffer.length;\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n\t\tconst endPos = { line: endIndex, column: endColumn };\n\t\tconst newPiece = new Piece(\n\t\t\t0, /** todo@peng */\n\t\t\tstart,\n\t\t\tendPos,\n\t\t\tthis.getLineFeedCnt(0, start, endPos),\n\t\t\tendOffset - startOffset\n\t\t);\n\t\tthis._lastChangeBufferPos = endPos;\n\t\treturn [newPiece];\n\t}\n\n\tpublic getLinesRawContent(): string {\n\t\treturn this.getContentOfSubTree(this.root);\n\t}\n\n\tpublic getLineRawContent(lineNumber: number, endOffset: number = 0): string {\n\t\tlet x = this.root;\n\n\t\tlet ret = '';\n\t\tconst cache = this._searchCache.get2(lineNumber);\n\t\tif (cache) {\n\t\t\tx = cache.node;\n\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\tif (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t} else {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t}\n\t\t} else {\n\t\t\tlet nodeStartOffset = 0;\n\t\t\tconst originalLineNumber = lineNumber;\n\t\t\twhile (x !== SENTINEL) {\n\t\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\t\tx = x.left;\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\t\tthis._searchCache.set({\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tnodeStartOffset,\n\t\t\t\t\t\tnodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\t\tconst prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains end column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tconst buffer = this._buffers[x.piece.bufferIndex].buffer;\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\tret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\tconst startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate computeBufferMetadata() {\n\t\tlet x = this.root;\n\n\t\tlet lfCnt = 1;\n\t\tlet len = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\t\t\tlen += x.size_left + x.piece.length;\n\t\t\tx = x.right;\n\t\t}\n\n\t\tthis._lineCnt = lfCnt;\n\t\tthis._length = len;\n\t\tthis._searchCache.validate(this._length);\n\t}\n\n\t// #region node operations\n\tprivate getIndexOf(node: TreeNode, accumulatedValue: number): { index: number; remainder: number } {\n\t\tconst piece = node.piece;\n\t\tconst pos = this.positionInBuffer(node, accumulatedValue);\n\t\tconst lineCnt = pos.line - piece.start.line;\n\n\t\tif (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n\t\t\t// we are checking the end of this node, so a CRLF check is necessary.\n\t\t\tconst realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n\t\t\tif (realLineCnt !== lineCnt) {\n\t\t\t\t// aha yes, CRLF\n\t\t\t\treturn { index: realLineCnt, remainder: 0 };\n\t\t\t}\n\t\t}\n\n\t\treturn { index: lineCnt, remainder: pos.column };\n\t}\n\n\tprivate getAccumulatedValue(node: TreeNode, index: number) {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst piece = node.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst expectedLineStartIndex = piece.start.line + index + 1;\n\t\tif (expectedLineStartIndex > piece.end.line) {\n\t\t\treturn lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n\t\t} else {\n\t\t\treturn lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n\t\t}\n\t}\n\n\tprivate deleteNodeTail(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\n\t\tconst newEnd = pos;\n\t\tconst newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = newEndOffset - originalEndOffset;\n\t\tconst newLength = piece.length + size_delta;\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate deleteNodeHead(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\n\t\tconst newStart = pos;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\tconst newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = originalStartOffset - newStartOffset;\n\t\tconst newLength = piece.length + size_delta;\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tpiece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate shrinkNode(node: TreeNode, start: BufferCursor, end: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalStartPos = piece.start;\n\t\tconst originalEndPos = piece.end;\n\n\t\t// old piece, originalStartPos, start\n\t\tconst oldLength = piece.length;\n\t\tconst oldLFCnt = piece.lineFeedCnt;\n\t\tconst newEnd = start;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\t\tconst newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n\n\t\t// new right piece, end, originalEndPos\n\t\tconst newPiece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tend,\n\t\t\toriginalEndPos,\n\t\t\tthis.getLineFeedCnt(piece.bufferIndex, end, originalEndPos),\n\t\t\tthis.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end)\n\t\t);\n\n\t\tconst newNode = this.rbInsertRight(node, newPiece);\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate appendToNode(node: TreeNode, value: string): void {\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n\t\tconst startOffset = this._buffers[0].buffer.length;\n\t\tthis._buffers[0].buffer += value;\n\t\tconst lineStarts = createLineStartsFast(value, false);\n\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\tlineStarts[i] += startOffset;\n\t\t}\n\t\tif (hitCRLF) {\n\t\t\tconst prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n\t\t\t(<number[]>this._buffers[0].lineStarts).pop();\n\t\t\t// _lastChangeBufferPos is already wrong\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n\t\t}\n\n\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n\t\tconst newEnd = { line: endIndex, column: endColumn };\n\t\tconst newLength = node.piece.length + value.length;\n\t\tconst oldLineFeedCnt = node.piece.lineFeedCnt;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n\t\tconst lf_delta = newLineFeedCnt - oldLineFeedCnt;\n\n\t\tnode.piece = new Piece(\n\t\t\tnode.piece.bufferIndex,\n\t\t\tnode.piece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tthis._lastChangeBufferPos = newEnd;\n\t\tupdateTreeMetadata(this, node, value.length, lf_delta);\n\t}\n\n\tprivate nodeAt(offset: number): NodePosition {\n\t\tlet x = this.root;\n\t\tconst cache = this._searchCache.get(offset);\n\t\tif (cache) {\n\t\t\treturn {\n\t\t\t\tnode: cache.node,\n\t\t\t\tnodeStartOffset: cache.nodeStartOffset,\n\t\t\t\tremainder: offset - cache.nodeStartOffset\n\t\t\t};\n\t\t}\n\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left > offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\tconst ret = {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: offset - x.size_left,\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t\tthis._searchCache.set(ret);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeAt2(lineNumber: number, column: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\tnodeStartOffset += x.size_left;\n\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\tconst prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tif (prevAccumualtedValue + column - 1 <= x.piece.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: prevAccumualtedValue + column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length - prevAccumualtedValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains position.column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tconst accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (x.piece.length >= column - 1) {\n\t\t\t\t\tconst nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeCharCodeAt(node: TreeNode, offset: number): number {\n\t\tif (node.piece.lineFeedCnt < 1) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n\t\treturn buffer.buffer.charCodeAt(newOffset);\n\t}\n\n\tprivate offsetOfNode(node: TreeNode): number {\n\t\tif (!node) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet pos = node.size_left;\n\t\twhile (node !== this.root) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tpos += node.parent.size_left + node.parent.piece.length;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t// #endregion\n\n\t// #region CRLF\n\tprivate shouldCheckCRLF() {\n\t\treturn !(this._EOLNormalized && this._EOL === '\\n');\n\t}\n\n\tprivate startWithLF(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(0) === 10;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst piece = val.piece;\n\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tconst line = piece.start.line;\n\t\tconst startOffset = lineStarts[line] + piece.start.column;\n\t\tif (line === lineStarts.length - 1) {\n\t\t\t// last line, so there is no line feed at the end of this line\n\t\t\treturn false;\n\t\t}\n\t\tconst nextLineOffset = lineStarts[line + 1];\n\t\tif (nextLineOffset > startOffset + 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n\t}\n\n\tprivate endWithCR(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(val.length - 1) === 13;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n\t}\n\n\tprivate validateCRLFWithPrevNode(nextNode: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n\t\t\tconst node = nextNode.prev();\n\t\t\tif (this.endWithCR(node)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateCRLFWithNextNode(node: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(node)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate fixCRLF(prev: TreeNode, next: TreeNode) {\n\t\tconst nodesToDel: TreeNode[] = [];\n\t\t// update node\n\t\tconst lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n\t\tlet newEnd: BufferCursor;\n\t\tif (prev.piece.end.column === 0) {\n\t\t\t// it means, last line ends with \\r, not \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n\t\t} else {\n\t\t\t// \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n\t\t}\n\n\t\tconst prevNewLength = prev.piece.length - 1;\n\t\tconst prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n\t\tprev.piece = new Piece(\n\t\t\tprev.piece.bufferIndex,\n\t\t\tprev.piece.start,\n\t\t\tnewEnd,\n\t\t\tprevNewLFCnt,\n\t\t\tprevNewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, prev, - 1, -1);\n\t\tif (prev.piece.length === 0) {\n\t\t\tnodesToDel.push(prev);\n\t\t}\n\n\t\t// update nextNode\n\t\tconst newStart: BufferCursor = { line: next.piece.start.line + 1, column: 0 };\n\t\tconst newLength = next.piece.length - 1;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n\t\tnext.piece = new Piece(\n\t\t\tnext.piece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tnext.piece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, next, - 1, -1);\n\t\tif (next.piece.length === 0) {\n\t\t\tnodesToDel.push(next);\n\t\t}\n\n\t\t// create new piece which contains \\r\\n\n\t\tconst pieces = this.createNewPieces('\\r\\n');\n\t\tthis.rbInsertRight(prev, pieces[0]);\n\t\t// delete empty nodes\n\n\t\tfor (let i = 0; i < nodesToDel.length; i++) {\n\t\t\trbDelete(this, nodesToDel[i]);\n\t\t}\n\t}\n\n\tprivate adjustCarriageReturnFromNext(value: string, node: TreeNode): boolean {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\tconst nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\t// move `\\n` forward\n\t\t\t\tvalue += '\\n';\n\n\t\t\t\tif (nextNode.piece.length === 1) {\n\t\t\t\t\trbDelete(this, nextNode);\n\t\t\t\t} else {\n\n\t\t\t\t\tconst piece = nextNode.piece;\n\t\t\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\t\t\tconst newLength = piece.length - 1;\n\t\t\t\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\t\t\t\tnextNode.piece = new Piece(\n\t\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\tpiece.end,\n\t\t\t\t\t\tnewLineFeedCnt,\n\t\t\t\t\t\tnewLength\n\t\t\t\t\t);\n\n\t\t\t\t\tupdateTreeMetadata(this, nextNode, -1, -1);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region Tree operations\n\titerate(node: TreeNode, callback: (node: TreeNode) => boolean): boolean {\n\t\tif (node === SENTINEL) {\n\t\t\treturn callback(SENTINEL);\n\t\t}\n\n\t\tconst leftRet = this.iterate(node.left, callback);\n\t\tif (!leftRet) {\n\t\t\treturn leftRet;\n\t\t}\n\n\t\treturn callback(node) && this.iterate(node.right, callback);\n\t}\n\n\tprivate getNodeContent(node: TreeNode) {\n\t\tif (node === SENTINEL) {\n\t\t\treturn '';\n\t\t}\n\t\tconst buffer = this._buffers[node.piece.bufferIndex];\n\t\tconst piece = node.piece;\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\tgetPieceContent(piece: Piece) {\n\t\tconst buffer = this._buffers[piece.bufferIndex];\n\t\tconst startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tconst endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tconst currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b    <----   a    b\n\t *                         /\n\t *                        z\n\t */\n\tprivate rbInsertRight(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tconst x = this.root;\n\t\tif (x === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.right === SENTINEL) {\n\t\t\tnode!.right = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst nextNode = leftest(node!.right);\n\t\t\tnextNode.left = z;\n\t\t\tz.parent = nextNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b     ---->   a    b\n\t *                       \\\n\t *                        z\n\t */\n\tprivate rbInsertLeft(node: TreeNode | null, p: Piece): TreeNode {\n\t\tconst z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tif (this.root === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.left === SENTINEL) {\n\t\t\tnode!.left = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tconst prevNode = righttest(node!.left); // a\n\t\t\tprevNode.right = z;\n\t\t\tz.parent = prevNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\tprivate getContentOfSubTree(node: TreeNode): string {\n\t\tlet str = '';\n\n\t\tthis.iterate(node, node => {\n\t\t\tstr += this.getNodeContent(node);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn str;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../base/common/charCode.js';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from '../../../base/common/strings.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as buffer from '../../../base/common/buffer.js';\n\nlet _utf16LE_TextDecoder: TextDecoder | null;\nfunction getUTF16LE_TextDecoder(): TextDecoder {\n\tif (!_utf16LE_TextDecoder) {\n\t\t_utf16LE_TextDecoder = new TextDecoder('UTF-16LE');\n\t}\n\treturn _utf16LE_TextDecoder;\n}\n\nlet _utf16BE_TextDecoder: TextDecoder | null;\nfunction getUTF16BE_TextDecoder(): TextDecoder {\n\tif (!_utf16BE_TextDecoder) {\n\t\t_utf16BE_TextDecoder = new TextDecoder('UTF-16BE');\n\t}\n\treturn _utf16BE_TextDecoder;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = platform.isLittleEndian() ? getUTF16LE_TextDecoder() : getUTF16BE_TextDecoder();\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport function decodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\tif (len > 0 && (view[0] === 0xFEFF || view[0] === 0xFFFE)) {\n\t\t// UTF16 sometimes starts with a BOM https://de.wikipedia.org/wiki/Byte_Order_Mark\n\t\t// It looks like TextDecoder.decode will eat up a leading BOM (0xFEFF or 0xFFFE)\n\t\t// We don't want that behavior because we know the string is UTF16LE and the BOM should be maintained\n\t\t// So we use the manual decoder\n\t\treturn compatDecodeUTF16LE(source, offset, len);\n\t}\n\treturn getUTF16LE_TextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nexport class StringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\t/**\n\t * Append a char code (<2^16)\n\t */\n\tpublic appendCharCode(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\t/**\n\t * Append an ASCII char code (<2^8)\n\t */\n\tpublic appendASCIICharCode(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as buffer from '../../../base/common/buffer.js';\nimport { decodeUTF16LE } from './stringBuilder.js';\n\nfunction escapeNewLine(str: string): string {\n\treturn (\n\t\tstr\n\t\t\t.replace(/\\n/g, '\\\\n')\n\t\t\t.replace(/\\r/g, '\\\\r')\n\t);\n}\n\nexport class TextChange {\n\n\tpublic get oldLength(): number {\n\t\treturn this.oldText.length;\n\t}\n\n\tpublic get oldEnd(): number {\n\t\treturn this.oldPosition + this.oldText.length;\n\t}\n\n\tpublic get newLength(): number {\n\t\treturn this.newText.length;\n\t}\n\n\tpublic get newEnd(): number {\n\t\treturn this.newPosition + this.newText.length;\n\t}\n\n\tconstructor(\n\t\tpublic readonly oldPosition: number,\n\t\tpublic readonly oldText: string,\n\t\tpublic readonly newPosition: number,\n\t\tpublic readonly newText: string\n\t) { }\n\n\tpublic toString(): string {\n\t\tif (this.oldText.length === 0) {\n\t\t\treturn `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n\t\t}\n\t\tif (this.newText.length === 0) {\n\t\t\treturn `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n\t\t}\n\t\treturn `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n\t}\n\n\tprivate static _writeStringSize(str: string): number {\n\t\treturn (\n\t\t\t4 + 2 * str.length\n\t\t);\n\t}\n\n\tprivate static _writeString(b: Uint8Array, str: string, offset: number): number {\n\t\tconst len = str.length;\n\t\tbuffer.writeUInt32BE(b, len, offset); offset += 4;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tbuffer.writeUInt16LE(b, str.charCodeAt(i), offset); offset += 2;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tprivate static _readString(b: Uint8Array, offset: number): string {\n\t\tconst len = buffer.readUInt32BE(b, offset); offset += 4;\n\t\treturn decodeUTF16LE(b, offset, len);\n\t}\n\n\tpublic writeSize(): number {\n\t\treturn (\n\t\t\t+ 4 // oldPosition\n\t\t\t+ 4 // newPosition\n\t\t\t+ TextChange._writeStringSize(this.oldText)\n\t\t\t+ TextChange._writeStringSize(this.newText)\n\t\t);\n\t}\n\n\tpublic write(b: Uint8Array, offset: number): number {\n\t\tbuffer.writeUInt32BE(b, this.oldPosition, offset); offset += 4;\n\t\tbuffer.writeUInt32BE(b, this.newPosition, offset); offset += 4;\n\t\toffset = TextChange._writeString(b, this.oldText, offset);\n\t\toffset = TextChange._writeString(b, this.newText, offset);\n\t\treturn offset;\n\t}\n\n\tpublic static read(b: Uint8Array, offset: number, dest: TextChange[]): number {\n\t\tconst oldPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst newPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst oldText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(oldText);\n\t\tconst newText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(newText);\n\t\tdest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n\t\treturn offset;\n\t}\n}\n\nexport function compressConsecutiveTextChanges(prevEdits: TextChange[] | null, currEdits: TextChange[]): TextChange[] {\n\tif (prevEdits === null || prevEdits.length === 0) {\n\t\treturn currEdits;\n\t}\n\tconst compressor = new TextChangeCompressor(prevEdits, currEdits);\n\treturn compressor.compress();\n}\n\nclass TextChangeCompressor {\n\n\tprivate _prevEdits: TextChange[];\n\tprivate _currEdits: TextChange[];\n\n\tprivate _result: TextChange[];\n\tprivate _resultLen: number;\n\n\tprivate _prevLen: number;\n\tprivate _prevDeltaOffset: number;\n\n\tprivate _currLen: number;\n\tprivate _currDeltaOffset: number;\n\n\tconstructor(prevEdits: TextChange[], currEdits: TextChange[]) {\n\t\tthis._prevEdits = prevEdits;\n\t\tthis._currEdits = currEdits;\n\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\n\t\tthis._prevLen = this._prevEdits.length;\n\t\tthis._prevDeltaOffset = 0;\n\n\t\tthis._currLen = this._currEdits.length;\n\t\tthis._currDeltaOffset = 0;\n\t}\n\n\tpublic compress(): TextChange[] {\n\t\tlet prevIndex = 0;\n\t\tlet currIndex = 0;\n\n\t\tlet prevEdit = this._getPrev(prevIndex);\n\t\tlet currEdit = this._getCurr(currIndex);\n\n\t\twhile (prevIndex < this._prevLen || currIndex < this._currLen) {\n\n\t\t\tif (prevEdit === null) {\n\t\t\t\tthis._acceptCurr(currEdit!);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit === null) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldEnd <= prevEdit.newPosition) {\n\t\t\t\tthis._acceptCurr(currEdit);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newEnd <= currEdit.oldPosition) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldPosition < prevEdit.newPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n\t\t\t\tthis._acceptCurr(e1);\n\t\t\t\tcurrEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newPosition < currEdit.oldPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n\t\t\t\tthis._acceptPrev(e1);\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point, currEdit.oldPosition === prevEdit.newPosition\n\n\t\t\tlet mergePrev: TextChange;\n\t\t\tlet mergeCurr: TextChange;\n\n\t\t\tif (currEdit.oldEnd === prevEdit.newEnd) {\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else if (currEdit.oldEnd < prevEdit.newEnd) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n\t\t\t\tmergePrev = e1;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = e1;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = e2;\n\t\t\t}\n\n\t\t\tthis._result[this._resultLen++] = new TextChange(\n\t\t\t\tmergePrev.oldPosition,\n\t\t\t\tmergePrev.oldText,\n\t\t\t\tmergeCurr.newPosition,\n\t\t\t\tmergeCurr.newText\n\t\t\t);\n\t\t\tthis._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n\t\t\tthis._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n\t\t}\n\n\t\tconst merged = TextChangeCompressor._merge(this._result);\n\t\tconst cleaned = TextChangeCompressor._removeNoOps(merged);\n\t\treturn cleaned;\n\t}\n\n\tprivate _acceptCurr(currEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n\t\tthis._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n\t}\n\n\tprivate _getCurr(currIndex: number): TextChange | null {\n\t\treturn (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n\t}\n\n\tprivate _acceptPrev(prevEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n\t\tthis._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n\t}\n\n\tprivate _getPrev(prevIndex: number): TextChange | null {\n\t\treturn (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n\t}\n\n\tprivate static _rebaseCurr(prevDeltaOffset: number, currEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tcurrEdit.oldPosition - prevDeltaOffset,\n\t\t\tcurrEdit.oldText,\n\t\t\tcurrEdit.newPosition,\n\t\t\tcurrEdit.newText\n\t\t);\n\t}\n\n\tprivate static _rebasePrev(currDeltaOffset: number, prevEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tprevEdit.oldPosition,\n\t\t\tprevEdit.oldText,\n\t\t\tprevEdit.newPosition + currDeltaOffset,\n\t\t\tprevEdit.newText\n\t\t);\n\t}\n\n\tprivate static _splitPrev(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.newText.substr(0, offset);\n\t\tconst postText = edit.newText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tedit.oldText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tpreText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldEnd,\n\t\t\t\t'',\n\t\t\t\tedit.newPosition + offset,\n\t\t\t\tpostText\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _splitCurr(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.oldText.substr(0, offset);\n\t\tconst postText = edit.oldText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tpreText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tedit.newText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition + offset,\n\t\t\t\tpostText,\n\t\t\t\tedit.newEnd,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _merge(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tlet prev = edits[0];\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst curr = edits[i];\n\n\t\t\tif (prev.oldEnd === curr.oldPosition) {\n\t\t\t\t// Merge into `prev`\n\t\t\t\tprev = new TextChange(\n\t\t\t\t\tprev.oldPosition,\n\t\t\t\t\tprev.oldText + curr.oldText,\n\t\t\t\t\tprev.newPosition,\n\t\t\t\t\tprev.newText + curr.newText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = curr;\n\t\t\t}\n\t\t}\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _removeNoOps(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextChange[] = [];\n\t\tlet resultLen = 0;\n\n\t\tfor (let i = 0; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\n\t\t\tif (edit.oldText === edit.newText) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult[resultLen++] = edit;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { ApplyEditsResult, EndOfLinePreference, FindMatch, IInternalModelContentChange, ISingleEditOperationIdentifier, ITextBuffer, ITextSnapshot, ValidAnnotatedEditOperation, IValidEditOperation, SearchData } from '../../model.js';\nimport { PieceTreeBase, StringBuffer } from './pieceTreeBase.js';\nimport { countEOL, StringEOL } from '../../core/eolCounter.js';\nimport { TextChange } from '../../core/textChange.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: ISingleEditOperationIdentifier | null;\n\trange: Range;\n\trangeOffset: number;\n\trangeLength: number;\n\ttext: string;\n\teolCount: number;\n\tfirstLineLength: number;\n\tlastLineLength: number;\n\tforceMoveMarkers: boolean;\n\tisAutoWhitespaceEdit: boolean;\n}\n\ninterface IReverseSingleEditOperation extends IValidEditOperation {\n\tsortIndex: number;\n}\n\nexport class PieceTreeTextBuffer extends Disposable implements ITextBuffer {\n\tprivate _pieceTree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\tprivate _mightContainRTL: boolean;\n\tprivate _mightContainUnusualLineTerminators: boolean;\n\tprivate _mightContainNonBasicASCII: boolean;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tconstructor(chunks: StringBuffer[], BOM: string, eol: '\\r\\n' | '\\n', containsRTL: boolean, containsUnusualLineTerminators: boolean, isBasicASCII: boolean, eolNormalized: boolean) {\n\t\tsuper();\n\t\tthis._BOM = BOM;\n\t\tthis._mightContainNonBasicASCII = !isBasicASCII;\n\t\tthis._mightContainRTL = containsRTL;\n\t\tthis._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n\t\tthis._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n\t}\n\n\t// #region TextBuffer\n\tpublic equals(other: ITextBuffer): boolean {\n\t\tif (!(other instanceof PieceTreeTextBuffer)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._BOM !== other._BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getEOL() !== other.getEOL()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._pieceTree.equal(other._pieceTree);\n\t}\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._mightContainRTL;\n\t}\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._mightContainUnusualLineTerminators;\n\t}\n\tpublic resetMightContainUnusualLineTerminators(): void {\n\t\tthis._mightContainUnusualLineTerminators = false;\n\t}\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._mightContainNonBasicASCII;\n\t}\n\tpublic getBOM(): string {\n\t\treturn this._BOM;\n\t}\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._pieceTree.getEOL();\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean): ITextSnapshot {\n\t\treturn this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\treturn this._pieceTree.getOffsetAt(lineNumber, column);\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\treturn this._pieceTree.getPositionAt(offset);\n\t}\n\n\tpublic getRangeAt(start: number, length: number): Range {\n\t\tconst end = start + length;\n\t\tconst startPosition = this.getPositionAt(start);\n\t\tconst endPosition = this.getPositionAt(end);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): string {\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst lineEnding = this._getEndOfLine(eol);\n\t\treturn this._pieceTree.getValueInRange(range, lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tconst startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tconst endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n\n\t\t// offsets use the text EOL, so we need to compensate for length differences\n\t\t// if the requested EOL doesn't match the text EOL\n\t\tlet eolOffsetCompensation = 0;\n\t\tconst desiredEOL = this._getEndOfLine(eol);\n\t\tconst actualEOL = this.getEOL();\n\t\tif (desiredEOL.length !== actualEOL.length) {\n\t\t\tconst delta = desiredEOL.length - actualEOL.length;\n\t\t\tconst eolCount = range.endLineNumber - range.startLineNumber;\n\t\t\teolOffsetCompensation = delta * eolCount;\n\t\t}\n\n\t\treturn endOffset - startOffset + eolOffsetCompensation;\n\t}\n\n\tpublic getCharacterCountInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (this._mightContainNonBasicASCII) {\n\t\t\t// we must count by iterating\n\n\t\t\tlet result = 0;\n\n\t\t\tconst fromLineNumber = range.startLineNumber;\n\t\t\tconst toLineNumber = range.endLineNumber;\n\t\t\tfor (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\t\t\t\tconst fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n\t\t\t\tconst toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n\n\t\t\t\tfor (let offset = fromOffset; offset < toOffset; offset++) {\n\t\t\t\t\tif (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t\toffset = offset + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.getValueLengthInRange(range, eol);\n\t}\n\n\tpublic getNearestChunk(offset: number): string {\n\t\treturn this._pieceTree.getNearestChunk(offset);\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._pieceTree.getLength();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._pieceTree.getLineCount();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._pieceTree.getLinesContent();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._pieceTree.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\treturn this._pieceTree.getLineCharCode(lineNumber, index);\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\treturn this._pieceTree.getCharCode(offset);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._pieceTree.getLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tprivate _getEndOfLine(eol: EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown EOL preference');\n\t\t}\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._pieceTree.setEOL(newEOL);\n\t}\n\n\tpublic applyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult {\n\t\tlet mightContainRTL = this._mightContainRTL;\n\t\tlet mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n\t\tlet mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n\t\tlet canReduceOperations = true;\n\n\t\tlet operations: IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tconst op = rawOperations[i];\n\t\t\tif (canReduceOperations && op._isTracked) {\n\t\t\t\tcanReduceOperations = false;\n\t\t\t}\n\t\t\tconst validatedRange = op.range;\n\t\t\tif (op.text) {\n\t\t\t\tlet textMightContainNonBasicASCII = true;\n\t\t\t\tif (!mightContainNonBasicASCII) {\n\t\t\t\t\ttextMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n\t\t\t\t\tmightContainNonBasicASCII = textMightContainNonBasicASCII;\n\t\t\t\t}\n\t\t\t\tif (!mightContainRTL && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains RTL\n\t\t\t\t\tmightContainRTL = strings.containsRTL(op.text);\n\t\t\t\t}\n\t\t\t\tif (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains unusual line terminators\n\t\t\t\t\tmightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet validText = '';\n\t\t\tlet eolCount = 0;\n\t\t\tlet firstLineLength = 0;\n\t\t\tlet lastLineLength = 0;\n\t\t\tif (op.text) {\n\t\t\t\tlet strEOL: StringEOL;\n\t\t\t\t[eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n\n\t\t\t\tconst bufferEOL = this.getEOL();\n\t\t\t\tconst expectedStrEOL = (bufferEOL === '\\r\\n' ? StringEOL.CRLF : StringEOL.LF);\n\t\t\t\tif (strEOL === StringEOL.Unknown || strEOL === expectedStrEOL) {\n\t\t\t\t\tvalidText = op.text;\n\t\t\t\t} else {\n\t\t\t\t\tvalidText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier || null,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\ttext: validText,\n\t\t\t\teolCount: eolCount,\n\t\t\t\tfirstLineLength: firstLineLength,\n\t\t\t\tlastLineLength: lastLineLength,\n\t\t\t\tforceMoveMarkers: Boolean(op.forceMoveMarkers),\n\t\t\t\tisAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsAscending);\n\n\t\tlet hasTouchingRanges = false;\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tconst rangeEnd = operations[i].range.getEndPosition();\n\t\t\tconst nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n\t\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t\t// overlapping ranges\n\t\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t\t}\n\t\t\t\thasTouchingRanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (canReduceOperations) {\n\t\t\toperations = this._reduceOperations(operations);\n\t\t}\n\n\t\t// Delta encode operations\n\t\tconst reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n\t\tconst newTrimAutoWhitespaceCandidates: { lineNumber: number; oldContent: string }[] = [];\n\t\tif (recordTrimAutoWhitespace) {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\n\t\t\t\tif (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n\t\t\t\t\t// Record already the future line numbers that might be auto whitespace removal candidates on next edit\n\t\t\t\t\tfor (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\tlet currentLineContent = '';\n\t\t\t\t\t\tif (lineNumber === reverseRange.startLineNumber) {\n\t\t\t\t\t\t\tcurrentLineContent = this.getLineContent(op.range.startLineNumber);\n\t\t\t\t\t\t\tif (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet reverseOperations: IReverseSingleEditOperation[] | null = null;\n\t\tif (computeUndoEdits) {\n\n\t\t\tlet reverseRangeDeltaOffset = 0;\n\t\t\treverseOperations = [];\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\t\t\t\tconst bufferText = this.getValueInRange(op.range);\n\t\t\t\tconst reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n\t\t\t\treverseRangeDeltaOffset += (op.text.length - bufferText.length);\n\n\t\t\t\treverseOperations[i] = {\n\t\t\t\t\tsortIndex: op.sortIndex,\n\t\t\t\t\tidentifier: op.identifier,\n\t\t\t\t\trange: reverseRange,\n\t\t\t\t\ttext: bufferText,\n\t\t\t\t\ttextChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Can only sort reverse operations when the order is not significant\n\t\t\tif (!hasTouchingRanges) {\n\t\t\t\treverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n\t\t\t}\n\t\t}\n\n\n\t\tthis._mightContainRTL = mightContainRTL;\n\t\tthis._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n\t\tthis._mightContainNonBasicASCII = mightContainNonBasicASCII;\n\n\t\tconst contentChanges = this._doApplyEdits(operations);\n\n\t\tlet trimAutoWhitespaceLineNumbers: number[] | null = null;\n\t\tif (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n\t\t\t// sort line numbers auto whitespace removal candidates for next edit descending\n\t\t\tnewTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n\n\t\t\ttrimAutoWhitespaceLineNumbers = [];\n\t\t\tfor (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n\t\t\t\tconst lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n\t\t\t\tif (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n\t\t\t\t\t// Do not have the same line number twice\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\n\t\t\t\tif (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttrimAutoWhitespaceLineNumbers.push(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContent.fire();\n\n\t\treturn new ApplyEditsResult(\n\t\t\treverseOperations,\n\t\t\tcontentChanges,\n\t\t\ttrimAutoWhitespaceLineNumbers\n\t\t);\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations: IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high amount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations: IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false;\n\t\tconst firstEditRange = operations[0].range;\n\t\tconst lastEditRange = operations[operations.length - 1].range;\n\t\tconst entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n\t\tlet lastEndLineNumber = firstEditRange.startLineNumber;\n\t\tlet lastEndColumn = firstEditRange.startColumn;\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst operation = operations[i];\n\t\t\tconst range = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tresult.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.text.length > 0) {\n\t\t\t\tresult.push(operation.text);\n\t\t\t}\n\n\t\t\tlastEndLineNumber = range.endLineNumber;\n\t\t\tlastEndColumn = range.endColumn;\n\t\t}\n\n\t\tconst text = result.join('');\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange, EndOfLinePreference.TextDefined),\n\t\t\ttext: text,\n\t\t\teolCount: eolCount,\n\t\t\tfirstLineLength: firstLineLength,\n\t\t\tlastLineLength: lastLineLength,\n\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tprivate _doApplyEdits(operations: IValidatedEditOperation[]): IInternalModelContentChange[] {\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsDescending);\n\n\t\tconst contentChanges: IInternalModelContentChange[] = [];\n\n\t\t// operations are from bottom to top\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tconst startLineNumber = op.range.startLineNumber;\n\t\t\tconst startColumn = op.range.startColumn;\n\t\t\tconst endLineNumber = op.range.endLineNumber;\n\t\t\tconst endColumn = op.range.endColumn;\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n\t\t\t\t// no-op\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (op.text) {\n\t\t\t\t// replacement\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t\tthis._pieceTree.insert(op.rangeOffset, op.text, true);\n\n\t\t\t} else {\n\t\t\t\t// deletion\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t}\n\n\t\t\tconst contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\tcontentChanges.push({\n\t\t\t\trange: contentChangeRange,\n\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\ttext: op.text,\n\t\t\t\trangeOffset: op.rangeOffset,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t});\n\t\t}\n\t\treturn contentChanges;\n\t}\n\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\treturn this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t// #endregion\n\n\t// #region helper\n\t// testing purpose.\n\tpublic getPieceTree(): PieceTreeBase {\n\t\treturn this._pieceTree;\n\t}\n\n\tpublic static _getInverseEditRange(range: Range, text: string) {\n\t\tconst startLineNumber = range.startLineNumber;\n\t\tconst startColumn = range.startColumn;\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tlet resultRange: Range;\n\n\t\tif (text.length > 0) {\n\t\t\t// the operation inserts something\n\t\t\tconst lineCount = eolCount + 1;\n\n\t\t\tif (lineCount === 1) {\n\t\t\t\t// single line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLineLength);\n\t\t\t} else {\n\t\t\t\t// multi line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLineLength + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// There is nothing to insert\n\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t}\n\n\t\treturn resultRange;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations: IValidatedEditOperation[]): Range[] {\n\t\tconst result: Range[] = [];\n\n\t\tlet prevOpEndLineNumber: number = 0;\n\t\tlet prevOpEndColumn: number = 0;\n\t\tlet prevOp: IValidatedEditOperation | null = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: Range;\n\n\t\t\tif (op.text.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tconst lineCount = op.eolCount + 1;\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _sortOpsAscending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tconst r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferBuilder, ITextBufferFactory } from '../../model.js';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from './pieceTreeBase.js';\nimport { PieceTreeTextBuffer } from './pieceTreeTextBuffer.js';\n\nclass PieceTreeTextBufferFactory implements ITextBufferFactory {\n\n\tconstructor(\n\t\tprivate readonly _chunks: StringBuffer[],\n\t\tprivate readonly _bom: string,\n\t\tprivate readonly _cr: number,\n\t\tprivate readonly _lf: number,\n\t\tprivate readonly _crlf: number,\n\t\tprivate readonly _containsRTL: boolean,\n\t\tprivate readonly _containsUnusualLineTerminators: boolean,\n\t\tprivate readonly _isBasicASCII: boolean,\n\t\tprivate readonly _normalizeEOL: boolean\n\t) { }\n\n\tprivate _getEOL(defaultEOL: DefaultEndOfLine): '\\r\\n' | '\\n' {\n\t\tconst totalEOLCount = this._cr + this._lf + this._crlf;\n\t\tconst totalCRCount = this._cr + this._crlf;\n\t\tif (totalEOLCount === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\treturn (defaultEOL === DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t}\n\t\tif (totalCRCount > totalEOLCount / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\treturn '\\r\\n';\n\t\t}\n\t\t// At least one line more ends in \\n\n\t\treturn '\\n';\n\t}\n\n\tpublic create(defaultEOL: DefaultEndOfLine): { textBuffer: ITextBuffer; disposable: IDisposable } {\n\t\tconst eol = this._getEOL(defaultEOL);\n\t\tconst chunks = this._chunks;\n\n\t\tif (this._normalizeEOL &&\n\t\t\t((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n\t\t\t\t|| (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))\n\t\t) {\n\t\t\t// Normalize pieces\n\t\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\t\tconst str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t\tconst newLineStart = createLineStartsFast(str);\n\t\t\t\tchunks[i] = new StringBuffer(str, newLineStart);\n\t\t\t}\n\t\t}\n\n\t\tconst textBuffer = new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n\t\treturn { textBuffer: textBuffer, disposable: textBuffer };\n\t}\n\n\tpublic getFirstLineText(lengthLimit: number): string {\n\t\treturn this._chunks[0].buffer.substr(0, lengthLimit).split(/\\r\\n|\\r|\\n/)[0];\n\t}\n}\n\nexport class PieceTreeTextBufferBuilder implements ITextBufferBuilder {\n\tprivate readonly chunks: StringBuffer[];\n\tprivate BOM: string;\n\n\tprivate _hasPreviousChar: boolean;\n\tprivate _previousChar: number;\n\tprivate readonly _tmpLineStarts: number[];\n\n\tprivate cr: number;\n\tprivate lf: number;\n\tprivate crlf: number;\n\tprivate containsRTL: boolean;\n\tprivate containsUnusualLineTerminators: boolean;\n\tprivate isBasicASCII: boolean;\n\n\tconstructor() {\n\t\tthis.chunks = [];\n\t\tthis.BOM = '';\n\n\t\tthis._hasPreviousChar = false;\n\t\tthis._previousChar = 0;\n\t\tthis._tmpLineStarts = [];\n\n\t\tthis.cr = 0;\n\t\tthis.lf = 0;\n\t\tthis.crlf = 0;\n\t\tthis.containsRTL = false;\n\t\tthis.containsUnusualLineTerminators = false;\n\t\tthis.isBasicASCII = true;\n\t}\n\n\tpublic acceptChunk(chunk: string): void {\n\t\tif (chunk.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.chunks.length === 0) {\n\t\t\tif (strings.startsWithUTF8BOM(chunk)) {\n\t\t\t\tthis.BOM = strings.UTF8_BOM_CHARACTER;\n\t\t\t\tchunk = chunk.substr(1);\n\t\t\t}\n\t\t}\n\n\t\tconst lastChar = chunk.charCodeAt(chunk.length - 1);\n\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\tthis._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n\t\t\tthis._hasPreviousChar = true;\n\t\t\tthis._previousChar = lastChar;\n\t\t} else {\n\t\t\tthis._acceptChunk1(chunk, false);\n\t\t\tthis._hasPreviousChar = false;\n\t\t\tthis._previousChar = lastChar;\n\t\t}\n\t}\n\n\tprivate _acceptChunk1(chunk: string, allowEmptyStrings: boolean): void {\n\t\tif (!allowEmptyStrings && chunk.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n\t\t} else {\n\t\t\tthis._acceptChunk2(chunk);\n\t\t}\n\t}\n\n\tprivate _acceptChunk2(chunk: string): void {\n\t\tconst lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n\n\t\tthis.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n\t\tthis.cr += lineStarts.cr;\n\t\tthis.lf += lineStarts.lf;\n\t\tthis.crlf += lineStarts.crlf;\n\n\t\tif (!lineStarts.isBasicASCII) {\n\t\t\t// this chunk contains non basic ASCII characters\n\t\t\tthis.isBasicASCII = false;\n\t\t\tif (!this.containsRTL) {\n\t\t\t\tthis.containsRTL = strings.containsRTL(chunk);\n\t\t\t}\n\t\t\tif (!this.containsUnusualLineTerminators) {\n\t\t\t\tthis.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic finish(normalizeEOL: boolean = true): PieceTreeTextBufferFactory {\n\t\tthis._finish();\n\t\treturn new PieceTreeTextBufferFactory(\n\t\t\tthis.chunks,\n\t\t\tthis.BOM,\n\t\t\tthis.cr,\n\t\t\tthis.lf,\n\t\t\tthis.crlf,\n\t\t\tthis.containsRTL,\n\t\t\tthis.containsUnusualLineTerminators,\n\t\t\tthis.isBasicASCII,\n\t\t\tnormalizeEOL\n\t\t);\n\t}\n\n\tprivate _finish(): void {\n\t\tif (this.chunks.length === 0) {\n\t\t\tthis._acceptChunk1('', true);\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._hasPreviousChar = false;\n\t\t\t// recreate last chunk\n\t\t\tconst lastChunk = this.chunks[this.chunks.length - 1];\n\t\t\tlastChunk.buffer += String.fromCharCode(this._previousChar);\n\t\t\tconst newLineStarts = createLineStartsFast(lastChunk.buffer);\n\t\t\tlastChunk.lineStarts = newLineStarts;\n\t\t\tif (this._previousChar === CharCode.CarriageReturn) {\n\t\t\t\tthis.cr++;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport { isAbsolute, join, normalize, posix, sep } from './path.js';\nimport { isWindows } from './platform.js';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from './strings.js';\nimport { isNumber } from './types.js';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(1);\n\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\n\tcode = path.charCodeAt(pos + 1);\n\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqual` instead. If you are\n * in a context without services, consider to pass down the `extUri` from the outside\n * or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\n/**\n * @deprecated please use `IUriIdentityService.extUri.isEqualOrParent` instead. If\n * you are in a context without services, consider to pass down the `extUri` from the\n * outside, or use `extUriBiasedIgnorePathCase` if you know what you are doing.\n */\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\treturn removeTrailingPathSeparator(candidate);\n}\n\nexport function removeTrailingPathSeparator(candidate: string): string {\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, isWindowsOS: boolean = isWindows): boolean {\n\tif (isWindowsOS) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string, isWindowsOS: boolean = isWindows): string | undefined {\n\treturn hasDriveLetter(path, isWindowsOS) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tfor (const segment of segments) {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n\nconst pathChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\nconst windowsSafePathFirstChars = 'BDEFGHIJKMOQRSTUVWXYZbdefghijkmoqrstuvwxyz0123456789';\n\nexport function randomPath(parent?: string, prefix?: string, randomLength = 8): string {\n\tlet suffix = '';\n\tfor (let i = 0; i < randomLength; i++) {\n\t\tlet pathCharsTouse: string;\n\t\tif (i === 0 && isWindows && !prefix && (randomLength === 3 || randomLength === 4)) {\n\n\t\t\t// Windows has certain reserved file names that cannot be used, such\n\t\t\t// as AUX, CON, PRN, etc. We want to avoid generating a random name\n\t\t\t// that matches that pattern, so we use a different set of characters\n\t\t\t// for the first character of the name that does not include any of\n\t\t\t// the reserved names first characters.\n\n\t\t\tpathCharsTouse = windowsSafePathFirstChars;\n\t\t} else {\n\t\t\tpathCharsTouse = pathChars;\n\t\t}\n\n\t\tsuffix += pathCharsTouse.charAt(Math.floor(Math.random() * pathCharsTouse.length));\n\t}\n\n\tlet randomFileName: string;\n\tif (prefix) {\n\t\trandomFileName = `${prefix}-${suffix}`;\n\t} else {\n\t\trandomFileName = suffix;\n\t}\n\n\tif (parent) {\n\t\treturn join(parent, randomFileName);\n\t}\n\n\treturn randomFileName;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from './charCode.js';\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI;\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/';\n\t\tconst toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { Disposable, DisposableMap, DisposableStore, IDisposable, MutableDisposable, toDisposable } from './lifecycle.js';\nimport { extUri as defaultExtUri, IExtUri } from './resources.js';\nimport { URI } from './uri.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nimport { Lazy } from './lazy.js';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t\tsource.dispose();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\n/**\n * Returns a promise that resolves with `undefined` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\n\n/**\n * Returns a promise that resolves with `defaultValue` as soon as the passed token is cancelled.\n * @see {@link raceCancellationError}\n */\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\tresolve(defaultValue);\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns a promise that rejects with an {@CancellationError} as soon as the passed token is cancelled.\n * @see {@link raceCancellation}\n */\nexport function raceCancellationError<T>(promise: Promise<T>, token: CancellationToken): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ref = token.onCancellationRequested(() => {\n\t\t\tref.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t\tpromise.then(resolve, reject).finally(() => ref.dispose());\n\t});\n}\n\n/**\n * Returns as soon as one of the promises resolves or rejects and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\ttry {\n\t\tconst result = await Promise.race(promises);\n\t\treturn result;\n\t} finally {\n\t\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\t\tif (index !== resolvedPromiseIndex) {\n\t\t\t\tcancellablePromise.cancel();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\n/**\n * Creates and returns a new promise, plus its `resolve` and `reject` callbacks.\n *\n * Replace with standardized [`Promise.withResolvers`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers) once it is supported\n */\nexport function promiseWithResolvers<T>(): { promise: Promise<T>; resolve: (value: T | PromiseLike<T>) => void; reject: (err?: any) => void } {\n\tlet resolve: (value: T | PromiseLike<T>) => void;\n\tlet reject: (reason?: any) => void;\n\tconst promise = new Promise<T>((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\treturn { promise, resolve: resolve!, reject: reject! };\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler implements IDisposable {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tprivate isDisposed = false;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.isDisposed) {\n\t\t\treturn Promise.reject(new Error('Throttler is disposed'));\n\t\t}\n\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tif (this.isDisposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\ninterface IScheduledLater extends IDisposable {\n\tisTriggered(): boolean;\n}\n\nconst timeoutDeferred = (timeout: number, fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tconst handle = setTimeout(() => {\n\t\tscheduled = false;\n\t\tfn();\n\t}, timeout);\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => {\n\t\t\tclearTimeout(handle);\n\t\t\tscheduled = false;\n\t\t},\n\t};\n};\n\nconst microtaskDeferred = (fn: () => void): IScheduledLater => {\n\tlet scheduled = true;\n\tqueueMicrotask(() => {\n\t\tif (scheduled) {\n\t\t\tscheduled = false;\n\t\t\tfn();\n\t\t}\n\t});\n\n\treturn {\n\t\tisTriggered: () => scheduled,\n\t\tdispose: () => { scheduled = false; },\n\t};\n};\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate deferred: IScheduledLater | null;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number | typeof MicrotaskDelay) {\n\t\tthis.deferred = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tconst fn = () => {\n\t\t\tthis.deferred = null;\n\t\t\tthis.doResolve?.(null);\n\t\t};\n\n\t\tthis.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn !!this.deferred?.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tthis.doReject?.(new CancellationError());\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tthis.deferred?.dispose();\n\t\tthis.deferred = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t\tthis.throttler.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(new CancellationError());\n\t\t});\n\t});\n}\n\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler: () => void, timeout = 0, store?: DisposableStore): IDisposable {\n\tconst timer = setTimeout(() => {\n\t\thandler();\n\t\tif (store) {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}, timeout);\n\tconst disposable = toDisposable(() => {\n\t\tclearTimeout(timer);\n\t\tstore?.deleteAndLeak(disposable);\n\t});\n\tstore?.add(disposable);\n\treturn disposable;\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\nexport interface ILimiter<T> {\n\n\treadonly size: number;\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T>;\n\n\tclear(): void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> implements ILimiter<T> {\n\n\tprivate _size = 0;\n\tprivate _isDisposed = false;\n\tprivate runningPromises: number;\n\tprivate readonly maxDegreeOfParalellism: number;\n\tprivate readonly outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onDrained: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onDrained = new Emitter<void>();\n\t}\n\n\t/**\n\t *\n\t * @returns A promise that resolved when all work is done (onDrained) or when\n\t * there is nothing to do\n\t */\n\twhenIdle(): Promise<void> {\n\t\treturn this.size > 0\n\t\t\t? Event.toPromise(this.onDrained)\n\t\t\t: Promise.resolve();\n\t}\n\n\tget onDrained(): Event<void> {\n\t\treturn this._onDrained.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\t\tthis.runningPromises--;\n\t\tif (--this._size === 0) {\n\t\t\tthis._onDrained.fire();\n\t\t}\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new Error('Object has been disposed');\n\t\t}\n\t\tthis.outstandingPromises.length = 0;\n\t\tthis._size = this.runningPromises;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tthis.outstandingPromises.length = 0; // stop further processing\n\t\tthis._size = 0;\n\t\tthis._onDrained.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * Same as `Queue`, ensures that only 1 task is executed at the same time. The difference to `Queue` is that\n * there is only 1 task about to be scheduled next. As such, calling `queue` while a task is executing will\n * replace the currently queued task until it executes.\n *\n * As such, the returned promise may not be from the factory that is passed in but from the next factory that\n * is running after having called `queue`.\n */\nexport class LimitedQueue {\n\n\tprivate readonly sequentializer = new TaskSequentializer();\n\n\tprivate tasks = 0;\n\n\tqueue(factory: ITask<Promise<void>>): Promise<void> {\n\t\tif (!this.sequentializer.isRunning()) {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t}\n\n\t\treturn this.sequentializer.queue(() => {\n\t\t\treturn this.sequentializer.run(this.tasks++, factory());\n\t\t});\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tprivate readonly drainers = new Set<DeferredPromise<void>>();\n\n\tprivate drainListeners: DisposableMap<number> | undefined = undefined;\n\tprivate drainListenerCount = 0;\n\n\tasync whenDrained(): Promise<void> {\n\t\tif (this.isDrained()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst promise = new DeferredPromise<void>();\n\t\tthis.drainers.add(promise);\n\n\t\treturn promise.p;\n\t}\n\n\tprivate isDrained(): boolean {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tif (queue.size > 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tqueueSize(resource: URI, extUri: IExtUri = defaultExtUri): number {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\treturn this.queues.get(key)?.size ?? 0;\n\t}\n\n\tqueueFor(resource: URI, factory: ITask<Promise<void>>, extUri: IExtUri = defaultExtUri): Promise<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tconst drainListenerId = this.drainListenerCount++;\n\t\t\tconst drainListener = Event.once(queue.onDrained)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t\tthis.onDidQueueDrain();\n\n\t\t\t\tthis.drainListeners?.deleteAndDispose(drainListenerId);\n\n\t\t\t\tif (this.drainListeners?.size === 0) {\n\t\t\t\t\tthis.drainListeners.dispose();\n\t\t\t\t\tthis.drainListeners = undefined;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!this.drainListeners) {\n\t\t\t\tthis.drainListeners = new DisposableMap();\n\t\t\t}\n\t\t\tthis.drainListeners.set(drainListenerId, drainListener);\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue.queue(factory);\n\t}\n\n\tprivate onDidQueueDrain(): void {\n\t\tif (!this.isDrained()) {\n\t\t\treturn; // not done yet\n\t\t}\n\n\t\tthis.releaseDrainers();\n\t}\n\n\tprivate releaseDrainers(): void {\n\t\tfor (const drainer of this.drainers) {\n\t\t\tdrainer.complete();\n\t\t}\n\n\t\tthis.drainers.clear();\n\t}\n\n\tdispose(): void {\n\t\tfor (const [, queue] of this.queues) {\n\t\t\tqueue.dispose();\n\t\t}\n\n\t\tthis.queues.clear();\n\n\t\t// Even though we might still have pending\n\t\t// tasks queued, after the queues have been\n\t\t// disposed, we can no longer track them, so\n\t\t// we release drainers to prevent hanging\n\t\t// promises when the resource queue is being\n\t\t// disposed.\n\t\tthis.releaseDrainers();\n\n\t\tthis.drainListeners?.dispose();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\tprivate _isDisposed = false;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis._isDisposed = true;\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n\t\t}\n\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate disposable: IDisposable | undefined = undefined;\n\tprivate isDisposed = false;\n\n\tcancel(): void {\n\t\tthis.disposable?.dispose();\n\t\tthis.disposable = undefined;\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number, context = globalThis): void {\n\t\tif (this.isDisposed) {\n\t\t\tthrow new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n\t\t}\n\n\t\tthis.cancel();\n\t\tconst handle = context.setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\n\t\tthis.disposable = toDisposable(() => {\n\t\t\tcontext.clearInterval(handle);\n\t\t\tthis.disposable = undefined;\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.isDisposed = true;\n\t}\n}\n\nexport class RunOnceScheduler implements IDisposable {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tflush(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tthis.cancel();\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tthis.runner?.();\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tthis.runner?.();\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tthis.runner?.(units);\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport interface IThrottledWorkerOptions {\n\n\t/**\n\t * maximum of units the worker will pass onto handler at once\n\t */\n\tmaxWorkChunkSize: number;\n\n\t/**\n\t * maximum of units the worker will keep in memory for processing\n\t */\n\tmaxBufferedWork: number | undefined;\n\n\t/**\n\t * delay before processing the next round of chunks when chunk size exceeds limits\n\t */\n\tthrottleDelay: number;\n\n\t/**\n\t * When enabled will guarantee that two distinct calls to `work()` are not executed\n\t * without throttle delay between them.\n\t * Otherwise if the worker isn't currently throttling it will execute work immediately.\n\t */\n\twaitThrottleDelayBetweenWorkUnits?: boolean;\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `maxWorkChunkSize`)\n * * there is a maximum of units the worker will keep in memory for processing (via `maxBufferedWork`)\n * * after having handled `maxWorkChunkSize` units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\tprivate lastExecutionTime = 0;\n\n\tconstructor(\n\t\tprivate options: IThrottledWorkerOptions,\n\t\tprivate readonly handler: (units: T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.options.maxBufferedWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.options.maxWorkChunkSize > this.options.maxBufferedWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tfor (const unit of units) {\n\t\t\tthis.pendingWork.push(unit);\n\t\t}\n\n\t\tconst timeSinceLastExecution = Date.now() - this.lastExecutionTime;\n\n\t\tif (!this.throttler.value && (!this.options.waitThrottleDelayBetweenWorkUnits || timeSinceLastExecution >= this.options.throttleDelay)) {\n\t\t\t// Work directly if we are not throttling and we are not\n\t\t\t// enforced to throttle between `work()` calls.\n\t\t\tthis.doWork();\n\t\t} else if (!this.throttler.value && this.options.waitThrottleDelayBetweenWorkUnits) {\n\t\t\t// Otherwise, schedule the throttler to work.\n\t\t\tthis.scheduleThrottler(Math.max(this.options.throttleDelay - timeSinceLastExecution, 0));\n\t\t} else {\n\t\t\t// Otherwise, our work will be picked up by the running throttler\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\t\tthis.lastExecutionTime = Date.now();\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.options.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.scheduleThrottler();\n\t\t}\n\t}\n\n\tprivate scheduleThrottler(delay = this.options.throttleDelay): void {\n\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\tthis.throttler.clear();\n\n\t\t\tthis.doWork();\n\t\t}, delay);\n\t\tthis.throttler.value.schedule();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\ntype IdleApi = Pick<typeof globalThis, 'requestIdleCallback' | 'cancelIdleCallback'>;\n\n\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\nexport let _runWhenIdle: (targetWindow: IdleApi, callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\n(function () {\n\tif (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n\t\t_runWhenIdle = (_targetWindow, runner, timeout?) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 15; // one frame at 64fps\n\t\t\t\tconst deadline: IdleDeadline = {\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trunner(Object.freeze(deadline));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\t_runWhenIdle = (targetWindow: IdleApi, runner, timeout?) => {\n\t\t\tconst handle: number = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\ttargetWindow.cancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\trunWhenGlobalIdle = (runner, timeout) => _runWhenIdle(globalThis, runner, timeout);\n})();\n\nexport abstract class AbstractIdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(targetWindow: IdleApi, executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = _runWhenIdle(targetWindow, () => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue<T> extends AbstractIdleValue<T> {\n\n\tconstructor(executor: () => T) {\n\t\tsuper(globalThis, executor);\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IRunningTask {\n\treadonly taskId: number;\n\treadonly cancel: () => void;\n\treadonly promise: Promise<void>;\n}\n\ninterface IQueuedTask {\n\treadonly promise: Promise<void>;\n\treadonly promiseResolve: () => void;\n\treadonly promiseReject: (error: Error) => void;\n\trun: ITask<Promise<void>>;\n}\n\nexport interface ITaskSequentializerWithRunningTask {\n\treadonly running: Promise<void>;\n}\n\nexport interface ITaskSequentializerWithQueuedTask {\n\treadonly queued: IQueuedTask;\n}\n\n/**\n * @deprecated use `LimitedQueue` instead for an easier to use API\n */\nexport class TaskSequentializer {\n\n\tprivate _running?: IRunningTask;\n\tprivate _queued?: IQueuedTask;\n\n\tisRunning(taskId?: number): this is ITaskSequentializerWithRunningTask {\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._running?.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._running;\n\t}\n\n\tget running(): Promise<void> | undefined {\n\t\treturn this._running?.promise;\n\t}\n\n\tcancelRunning(): void {\n\t\tthis._running?.cancel();\n\t}\n\n\trun(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._running = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.doneRunning(taskId), () => this.doneRunning(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate doneRunning(taskId: number): void {\n\t\tif (this._running && taskId === this._running.taskId) {\n\n\t\t\t// only set running to done if the promise finished that is associated with that taskId\n\t\t\tthis._running = undefined;\n\n\t\t\t// schedule the queued task now that we are free if we have any\n\t\t\tthis.runQueued();\n\t\t}\n\t}\n\n\tprivate runQueued(): void {\n\t\tif (this._queued) {\n\t\t\tconst queued = this._queued;\n\t\t\tthis._queued = undefined;\n\n\t\t\t// Run queued task and complete on the associated promise\n\t\t\tqueued.run().then(queued.promiseResolve, queued.promiseReject);\n\t\t}\n\t}\n\n\t/**\n\t * Note: the promise to schedule as next run MUST itself call `run`.\n\t *       Otherwise, this sequentializer will report `false` for `isRunning`\n\t *       even when this task is running. Missing this detail means that\n\t *       suddenly multiple tasks will run in parallel.\n\t */\n\tqueue(run: ITask<Promise<void>>): Promise<void> {\n\n\t\t// this is our first queued task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._queued) {\n\t\t\tconst { promise, resolve: promiseResolve, reject: promiseReject } = promiseWithResolvers<void>();\n\t\t\tthis._queued = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous queued task, just overwrite it\n\t\telse {\n\t\t\tthis._queued.run = run;\n\t\t}\n\n\t\treturn this._queued.promise;\n\t}\n\n\thasQueued(): this is ITaskSequentializerWithQueuedTask {\n\t\treturn !!this._queued;\n\t}\n\n\tasync join(): Promise<void> {\n\t\treturn this._queued?.promise ?? this._running?.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\nconst enum DeferredOutcome {\n\tResolved,\n\tRejected\n}\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate outcome?: { outcome: DeferredOutcome.Rejected; value: any } | { outcome: DeferredOutcome.Resolved; value: T };\n\n\tpublic get isRejected() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn !!this.outcome;\n\t}\n\n\tpublic get value() {\n\t\treturn this.outcome?.outcome === DeferredOutcome.Resolved ? this.outcome?.value : undefined;\n\t}\n\n\tpublic readonly p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Resolved, value };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.outcome = { outcome: DeferredOutcome.Rejected, value: err };\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\treturn this.error(new CancellationError());\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class StatefulPromise<T> {\n\tprivate _value: T | undefined = undefined;\n\tget value(): T | undefined { return this._value; }\n\n\tprivate _error: unknown = undefined;\n\tget error(): unknown { return this._error; }\n\n\tprivate _isResolved = false;\n\tget isResolved() { return this._isResolved; }\n\n\tpublic readonly promise: Promise<T>;\n\n\tconstructor(promise: Promise<T>) {\n\t\tthis.promise = promise.then(\n\t\t\tvalue => {\n\t\t\t\tthis._value = value;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tthis._error = error;\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\tif (!this._isResolved) {\n\t\t\tthrow new BugIndicatingError('Promise is not resolved yet');\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\nexport class LazyStatefulPromise<T> {\n\tprivate readonly _promise = new Lazy(() => new StatefulPromise(this._compute()));\n\n\tconstructor(\n\t\tprivate readonly _compute: () => Promise<T>,\n\t) { }\n\n\t/**\n\t * Returns the resolved value.\n\t * Throws if the promise is not resolved yet.\n\t */\n\tpublic requireValue(): T {\n\t\treturn this._promise.value.requireValue();\n\t}\n\n\t/**\n\t * Returns the promise (and triggers a computation of the promise if not yet done so).\n\t */\n\tpublic getPromise(): Promise<T> {\n\t\treturn this._promise.value.promise;\n\t}\n\n\t/**\n\t * Reads the current value without triggering a computation of the promise.\n\t */\n\tpublic get currentValue(): T | undefined {\n\t\treturn this._promise.rawValue?.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AsyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>;\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await (const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onReturn?: () => void | Promise<void>;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AsyncIterableExecutor<T>, onReturn?: () => void | Promise<void>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onReturn = onReturn;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t},\n\t\t\treturn: async () => {\n\t\t\t\tthis._onReturn?.();\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await (const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AsyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(new CancellationError());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\nexport class AsyncIterableSource<T> {\n\n\tprivate readonly _deferred = new DeferredPromise<void>();\n\tprivate readonly _asyncIterable: AsyncIterableObject<T>;\n\n\tprivate _errorFn: (error: Error) => void;\n\tprivate _emitFn: (item: T) => void;\n\n\t/**\n\t *\n\t * @param onReturn A function that will be called when consuming the async iterable\n\t * has finished by the consumer, e.g the for-await-loop has be existed (break, return) early.\n\t * This is NOT called when resolving this source by its owner.\n\t */\n\tconstructor(onReturn?: () => Promise<void> | void) {\n\t\tthis._asyncIterable = new AsyncIterableObject(emitter => {\n\n\t\t\tif (earlyError) {\n\t\t\t\temitter.reject(earlyError);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (earlyItems) {\n\t\t\t\temitter.emitMany(earlyItems);\n\t\t\t}\n\t\t\tthis._errorFn = (error: Error) => emitter.reject(error);\n\t\t\tthis._emitFn = (item: T) => emitter.emitOne(item);\n\t\t\treturn this._deferred.p;\n\t\t}, onReturn);\n\n\t\tlet earlyError: Error | undefined;\n\t\tlet earlyItems: T[] | undefined;\n\n\t\tthis._emitFn = (item: T) => {\n\t\t\tif (!earlyItems) {\n\t\t\t\tearlyItems = [];\n\t\t\t}\n\t\t\tearlyItems.push(item);\n\t\t};\n\t\tthis._errorFn = (error: Error) => {\n\t\t\tif (!earlyError) {\n\t\t\t\tearlyError = error;\n\t\t\t}\n\t\t};\n\t}\n\n\tget asyncIterable(): AsyncIterableObject<T> {\n\t\treturn this._asyncIterable;\n\t}\n\n\tresolve(): void {\n\t\tthis._deferred.complete();\n\t}\n\n\treject(error: Error): void {\n\t\tthis._errorFn(error);\n\t\tthis._deferred.complete();\n\t}\n\n\temitOne(item: T): void {\n\t\tthis._emitFn(item);\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from './arrays.js';\nimport { isThenable } from './async.js';\nimport { CharCode } from './charCode.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\n\nexport interface IRelativePattern {\n\n\t/**\n\t * A base file path to which this pattern will be matched against relatively.\n\t */\n\treadonly base: string;\n\n\t/**\n\t * A file glob pattern like `*.{ts,js}` that will be matched on file paths\n\t * relative to the base path.\n\t *\n\t * Example: Given a base of `/home/work/folder` and a file path of `/home/work/folder/index.js`,\n\t * the file glob pattern will match on `index.js`.\n\t */\n\treadonly pattern: string;\n}\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\ninterface SiblingClause {\n\twhen: string;\n}\n\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\n\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number, isLastPattern?: boolean): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n\t\t\t//           in which case also matches (Path Sep followed by Path Val)\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(segment => segment === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Treat globstar specially\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (previousSegmentWasGlobStar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tregEx += starsToRegExp(2, index === segments.length - 1);\n\t\t\t}\n\n\t\t\t// Anything else, not globstar\n\t\t\telse {\n\n\t\t\t\t// States\n\t\t\t\tlet inBraces = false;\n\t\t\t\tlet braceVal = '';\n\n\t\t\t\tlet inBrackets = false;\n\t\t\t\tlet bracketVal = '';\n\n\t\t\t\tfor (const char of segment) {\n\n\t\t\t\t\t// Support brace expansion\n\t\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\t\tbraceVal += char;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support brackets\n\t\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t\t// range operator\n\t\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\t\tres = char;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\t\tres = '^';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tres = escapeRegExpCharacters(char);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbracketVal += res;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (char) {\n\t\t\t\t\t\tcase '{':\n\t\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '[':\n\t\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '}': {\n\t\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n\n\t\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase ']': {\n\t\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase '?':\n\t\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tcase '*':\n\t\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tregEx += escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Tail: Add the slash we had split on if there is more to\n\t\t\t\t// come and the remaining pattern is not a globstar\n\t\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after\n\t\t\t\t// some to be included in the RegEx to prevent a folder called\n\t\t\t\t// \"something\" to match as well.\n\t\t\t\tif (\n\t\t\t\t\tindex < segments.length - 1 &&\t\t\t// more segments to come after this\n\t\t\t\t\t(\n\t\t\t\t\t\tsegments[index + 1] !== GLOBSTAR ||\t// next segment is not **, or...\n\t\t\t\t\t\tindex + 2 < segments.length\t\t\t// ...next segment is ** but there is more segments after that\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tregEx += PATH_REGEX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update globstar state\n\t\t\tpreviousSegmentWasGlobStar = (segment === GLOBSTAR);\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t\t\t\t\t\t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; \t\t\t\t\t\t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t\t\t\t\t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The `ParsedExpression` returns a `Promise`\n// iff `hasSibling` returns a `Promise`.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\ninterface IGlobOptions {\n\n\t/**\n\t * Simplify patterns for use as exclusion filters during\n\t * tree traversal to skip entire subtrees. Cannot be used\n\t * outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle relative patterns\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) {\n\t\tparsedPattern = trivia1(pattern.substr(4), pattern); \t\t\t// common pattern: **/*.txt just need endsWith check\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { \t// common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { \t// common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\tconst wrappedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (!isEqualOrParent(path, arg2.base, !isLinux)) {\n\t\t\t// skip glob matching if `base` is not a parent of `path`\n\t\t\treturn null;\n\t\t}\n\n\t\t// Given we have checked `base` being a parent of `path`,\n\t\t// we can now remove the `base` portion of the `path`\n\t\t// and only match on the remaining path components\n\t\t// For that we try to extract the portion of the `path`\n\t\t// that comes after the `base` portion. We have to account\n\t\t// for the fact that `base` might end in a path separator\n\t\t// (https://github.com/microsoft/vscode/issues/162498)\n\n\t\treturn parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n\t};\n\n\t// Make sure to preserve associated metadata\n\twrappedPattern.allBasenames = parsedPattern.allBasenames;\n\twrappedPattern.allPaths = parsedPattern.allPaths;\n\twrappedPattern.basenames = parsedPattern.basenames;\n\twrappedPattern.patterns = parsedPattern.patterns;\n\n\treturn wrappedPattern;\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base: string, pattern: string): ParsedStringPattern {\n\treturn function (path: string, basename?: string) {\n\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t};\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, pattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (basename) {\n\t\t\treturn basename === base ? pattern : null;\n\t\t}\n\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n\t};\n\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [pattern];\n\tparsedPattern.allBasenames = basenames;\n\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n\t\t.split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (patternsLength === 1) {\n\t\treturn parsedPatterns[0];\n\t}\n\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif (parsedPatterns[i](path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = sep === posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n\tconst nativePathEnd = sep + nativePath;\n\tconst targetPathEnd = posix.sep + targetPath;\n\n\tlet parsedPattern: ParsedStringPattern;\n\tif (matchPathEnds) {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n\t\t};\n\t} else {\n\t\tparsedPattern = function (path: string, basename?: string) {\n\t\t\treturn typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n\t\t};\n\t}\n\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * * `*` to match zero or more characters in a path segment\n * * `?` to match on one character in a path segment\n * * `**` to match any number of path segments, including none\n * * `{}` to group conditions (e.g. *.{ts,js} matches all TypeScript and JavaScript files)\n * * `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\n * * `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options?: IGlobOptions): ParsedPattern | ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[] } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern | undefined | null;\n\tif (!rp) {\n\t\treturn false;\n\t}\n\n\treturn typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst patternsLength = parsedPatterns.length;\n\tif (!patternsLength) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (patternsLength === 1) {\n\t\t\treturn parsedPatterns[0] as ParsedStringPattern;\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\tconst result = parsedPatterns[i](path, basename);\n\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t\t}\n\n\t\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t\t// later processing and await the result properly.\n\t\t\t\tif (isThenable(result)) {\n\t\t\t\t\tif (!resultPromises) {\n\t\t\t\t\t\tresultPromises = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tresultPromises.push(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// With result promises, we have to loop over each and\n\t\t\t// await the result before we can return any result.\n\t\t\tif (resultPromises) {\n\t\t\t\treturn (async () => {\n\t\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t})();\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, base?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\t\tlet resultPromises: Promise<string | null>[] | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!base) {\n\t\t\t\t\tbase = basename(path);\n\t\t\t\t}\n\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = base.substr(0, base.length - extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst result = parsedPattern(path, base, name, hasSibling);\n\t\t\tif (typeof result === 'string') {\n\t\t\t\treturn result; // immediately return as soon as the first expression matches\n\t\t\t}\n\n\t\t\t// If the result is a promise, we have to keep it for\n\t\t\t// later processing and await the result properly.\n\t\t\tif (isThenable(result)) {\n\t\t\t\tif (!resultPromises) {\n\t\t\t\t\tresultPromises = [];\n\t\t\t\t}\n\n\t\t\t\tresultPromises.push(result);\n\t\t\t}\n\t\t}\n\n\t\t// With result promises, we have to loop over each and\n\t\t// await the result before we can return any result.\n\t\tif (resultPromises) {\n\t\t\treturn (async () => {\n\t\t\t\tfor (const resultPromise of resultPromises) {\n\t\t\t\t\tconst result = await resultPromise;\n\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t})();\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = withBasenames.allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, [] as string[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = value.when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', () => name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(match => match ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\n\t\t\tresult.requiresSiblings = true;\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, [] as string[]);\n\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, [] as string[]);\n\t}\n\n\tconst aggregate: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbasename = path.substr(i);\n\t\t}\n\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\n\treturn aggregatedPatterns;\n}\n\nexport function patternsEquals(patternsA: Array<string | IRelativePattern> | undefined, patternsB: Array<string | IRelativePattern> | undefined): boolean {\n\treturn equals(patternsA, patternsB, (a, b) => {\n\t\tif (typeof a === 'string' && typeof b === 'string') {\n\t\t\treturn a === b;\n\t\t}\n\n\t\tif (typeof a !== 'string' && typeof b !== 'string') {\n\t\t\treturn a.base === b.base && a.pattern === b.pattern;\n\t\t}\n\n\t\treturn false;\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extname } from './path.js';\n\nexport const Mimes = Object.freeze({\n\ttext: 'text/plain',\n\tbinary: 'application/octet-stream',\n\tunknown: 'application/unknown',\n\tmarkdown: 'text/markdown',\n\tlatex: 'text/latex',\n\turiList: 'text/uri-list',\n});\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.opus': 'audio/opus',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\n\nexport const enum TokenType {\n\tLParen,\n\tRParen,\n\tNeg,\n\tEq,\n\tNotEq,\n\tLt,\n\tLtEq,\n\tGt,\n\tGtEq,\n\tRegexOp,\n\tRegexStr,\n\tTrue,\n\tFalse,\n\tIn,\n\tNot,\n\tAnd,\n\tOr,\n\tStr,\n\tQuotedStr,\n\tError,\n\tEOF,\n}\n\nexport type Token =\n\t| { type: TokenType.LParen; offset: number }\n\t| { type: TokenType.RParen; offset: number }\n\t| { type: TokenType.Neg; offset: number }\n\t| { type: TokenType.Eq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.NotEq; offset: number; isTripleEq: boolean }\n\t| { type: TokenType.Lt; offset: number }\n\t| { type: TokenType.LtEq; offset: number }\n\t| { type: TokenType.Gt; offset: number }\n\t| { type: TokenType.GtEq; offset: number }\n\t| { type: TokenType.RegexOp; offset: number }\n\t| { type: TokenType.RegexStr; offset: number; lexeme: string }\n\t| { type: TokenType.True; offset: number }\n\t| { type: TokenType.False; offset: number }\n\t| { type: TokenType.In; offset: number }\n\t| { type: TokenType.Not; offset: number }\n\t| { type: TokenType.And; offset: number }\n\t| { type: TokenType.Or; offset: number }\n\t| { type: TokenType.Str; offset: number; lexeme: string }\n\t| { type: TokenType.QuotedStr; offset: number; lexeme: string }\n\t| { type: TokenType.Error; offset: number; lexeme: string }\n\t| { type: TokenType.EOF; offset: number };\n\ntype KeywordTokenType = TokenType.Not | TokenType.In | TokenType.False | TokenType.True;\ntype TokenTypeWithoutLexeme =\n\tTokenType.LParen |\n\tTokenType.RParen |\n\tTokenType.Neg |\n\tTokenType.Lt |\n\tTokenType.LtEq |\n\tTokenType.Gt |\n\tTokenType.GtEq |\n\tTokenType.RegexOp |\n\tTokenType.True |\n\tTokenType.False |\n\tTokenType.In |\n\tTokenType.Not |\n\tTokenType.And |\n\tTokenType.Or |\n\tTokenType.EOF;\n\n/**\n * Example:\n * `foo == bar'` - note how single quote doesn't have a corresponding closing quote,\n * so it's reported as unexpected\n */\nexport type LexingError = {\n\toffset: number; /** note that this doesn't take into account escape characters from the original encoding of the string, e.g., within an extension manifest file's JSON encoding  */\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nfunction hintDidYouMean(...meant: string[]) {\n\tswitch (meant.length) {\n\t\tcase 1:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n\t\tcase 2:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n\t\tcase 3:\n\t\t\treturn localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n\t\tdefault: // we just don't expect that many\n\t\t\treturn undefined;\n\t}\n}\n\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n\n\tstatic getLexeme(token: Token): string {\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.LParen:\n\t\t\t\treturn '(';\n\t\t\tcase TokenType.RParen:\n\t\t\t\treturn ')';\n\t\t\tcase TokenType.Neg:\n\t\t\t\treturn '!';\n\t\t\tcase TokenType.Eq:\n\t\t\t\treturn token.isTripleEq ? '===' : '==';\n\t\t\tcase TokenType.NotEq:\n\t\t\t\treturn token.isTripleEq ? '!==' : '!=';\n\t\t\tcase TokenType.Lt:\n\t\t\t\treturn '<';\n\t\t\tcase TokenType.LtEq:\n\t\t\t\treturn '<=';\n\t\t\tcase TokenType.Gt:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.GtEq:\n\t\t\t\treturn '>=';\n\t\t\tcase TokenType.RegexOp:\n\t\t\t\treturn '=~';\n\t\t\tcase TokenType.RegexStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In:\n\t\t\t\treturn 'in';\n\t\t\tcase TokenType.Not:\n\t\t\t\treturn 'not';\n\t\t\tcase TokenType.And:\n\t\t\t\treturn '&&';\n\t\t\tcase TokenType.Or:\n\t\t\t\treturn '||';\n\t\t\tcase TokenType.Str:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.Error:\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.EOF:\n\t\t\t\treturn 'EOF';\n\t\t\tdefault:\n\t\t\t\tthrow illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n\t\t}\n\t}\n\n\tprivate static _regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\n\n\tprivate static _keywords = new Map<string, KeywordTokenType>([\n\t\t['not', TokenType.Not],\n\t\t['in', TokenType.In],\n\t\t['false', TokenType.False],\n\t\t['true', TokenType.True],\n\t]);\n\n\tprivate _input: string = '';\n\tprivate _start: number = 0;\n\tprivate _current: number = 0;\n\tprivate _tokens: Token[] = [];\n\tprivate _errors: LexingError[] = [];\n\n\tget errors(): Readonly<LexingError[]> {\n\t\treturn this._errors;\n\t}\n\n\treset(value: string) {\n\t\tthis._input = value;\n\n\t\tthis._start = 0;\n\t\tthis._current = 0;\n\t\tthis._tokens = [];\n\t\tthis._errors = [];\n\n\t\treturn this;\n\t}\n\n\tscan() {\n\t\twhile (!this._isAtEnd()) {\n\n\t\t\tthis._start = this._current;\n\n\t\t\tconst ch = this._advance();\n\t\t\tswitch (ch) {\n\t\t\t\tcase CharCode.OpenParen: this._addToken(TokenType.LParen); break;\n\t\t\t\tcase CharCode.CloseParen: this._addToken(TokenType.RParen); break;\n\n\t\t\t\tcase CharCode.ExclamationMark:\n\t\t\t\t\tif (this._match(CharCode.Equals)) {\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `!==`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.NotEq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._addToken(TokenType.Neg);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.SingleQuote: this._quotedString(); break;\n\t\t\t\tcase CharCode.Slash: this._regex(); break;\n\n\t\t\t\tcase CharCode.Equals:\n\t\t\t\t\tif (this._match(CharCode.Equals)) { // support `==`\n\t\t\t\t\t\tconst isTripleEq = this._match(CharCode.Equals); // eat last `=` if `===`\n\t\t\t\t\t\tthis._tokens.push({ type: TokenType.Eq, offset: this._start, isTripleEq });\n\t\t\t\t\t} else if (this._match(CharCode.Tilde)) {\n\t\t\t\t\t\tthis._addToken(TokenType.RegexOp);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('==', '=~'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.LessThan: this._addToken(this._match(CharCode.Equals) ? TokenType.LtEq : TokenType.Lt); break;\n\n\t\t\t\tcase CharCode.GreaterThan: this._addToken(this._match(CharCode.Equals) ? TokenType.GtEq : TokenType.Gt); break;\n\n\t\t\t\tcase CharCode.Ampersand:\n\t\t\t\t\tif (this._match(CharCode.Ampersand)) {\n\t\t\t\t\t\tthis._addToken(TokenType.And);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('&&'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CharCode.Pipe:\n\t\t\t\t\tif (this._match(CharCode.Pipe)) {\n\t\t\t\t\t\tthis._addToken(TokenType.Or);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._error(hintDidYouMean('||'));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n\t\t\t\tcase CharCode.Space:\n\t\t\t\tcase CharCode.CarriageReturn:\n\t\t\t\tcase CharCode.Tab:\n\t\t\t\tcase CharCode.LineFeed:\n\t\t\t\tcase CharCode.NoBreakSpace: // &nbsp\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis._string();\n\t\t\t}\n\t\t}\n\n\t\tthis._start = this._current;\n\t\tthis._addToken(TokenType.EOF);\n\n\t\treturn Array.from(this._tokens);\n\t}\n\n\tprivate _match(expected: number): boolean {\n\t\tif (this._isAtEnd()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._input.charCodeAt(this._current) !== expected) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._current++;\n\t\treturn true;\n\t}\n\n\tprivate _advance(): number {\n\t\treturn this._input.charCodeAt(this._current++);\n\t}\n\n\tprivate _peek(): number {\n\t\treturn this._isAtEnd() ? CharCode.Null : this._input.charCodeAt(this._current);\n\t}\n\n\tprivate _addToken(type: TokenTypeWithoutLexeme) {\n\t\tthis._tokens.push({ type, offset: this._start });\n\t}\n\n\tprivate _error(additional?: string) {\n\t\tconst offset = this._start;\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tconst errToken: Token = { type: TokenType.Error, offset: this._start, lexeme };\n\t\tthis._errors.push({ offset, lexeme, additionalInfo: additional });\n\t\tthis._tokens.push(errToken);\n\t}\n\n\t// u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n\tprivate stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n\tprivate _string() {\n\t\tthis.stringRe.lastIndex = this._start;\n\t\tconst match = this.stringRe.exec(this._input);\n\t\tif (match) {\n\t\t\tthis._current = this._start + match[0].length;\n\t\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\t\tconst keyword = Scanner._keywords.get(lexeme);\n\t\t\tif (keyword) {\n\t\t\t\tthis._addToken(keyword);\n\t\t\t} else {\n\t\t\t\tthis._tokens.push({ type: TokenType.Str, lexeme, offset: this._start });\n\t\t\t}\n\t\t}\n\t}\n\n\t// captures the lexeme without the leading and trailing '\n\tprivate _quotedString() {\n\t\twhile (this._peek() !== CharCode.SingleQuote && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n\t\t\tthis._advance();\n\t\t}\n\n\t\tif (this._isAtEnd()) {\n\t\t\tthis._error(hintDidYouForgetToOpenOrCloseQuote);\n\t\t\treturn;\n\t\t}\n\n\t\t// consume the closing '\n\t\tthis._advance();\n\n\t\tthis._tokens.push({ type: TokenType.QuotedStr, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n\t}\n\n\t/*\n\t * Lexing a regex expression: /.../[igsmyu]*\n\t * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n\t *\n\t * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n\t */\n\tprivate _regex() {\n\t\tlet p = this._current;\n\n\t\tlet inEscape = false;\n\t\tlet inCharacterClass = false;\n\t\twhile (true) {\n\t\t\tif (p >= this._input.length) {\n\t\t\t\tthis._current = p;\n\t\t\t\tthis._error(hintDidYouForgetToEscapeSlash);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ch = this._input.charCodeAt(p);\n\n\t\t\tif (inEscape) { // parsing an escape character\n\t\t\t\tinEscape = false;\n\t\t\t} else if (ch === CharCode.Slash && !inCharacterClass) { // end of regex\n\t\t\t\tp++;\n\t\t\t\tbreak;\n\t\t\t} else if (ch === CharCode.OpenSquareBracket) {\n\t\t\t\tinCharacterClass = true;\n\t\t\t} else if (ch === CharCode.Backslash) {\n\t\t\t\tinEscape = true;\n\t\t\t} else if (ch === CharCode.CloseSquareBracket) {\n\t\t\t\tinCharacterClass = false;\n\t\t\t}\n\t\t\tp++;\n\t\t}\n\n\t\t// Consume flags // TODO@ulugbekna: use regex instead\n\t\twhile (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n\t\t\tp++;\n\t\t}\n\n\t\tthis._current = p;\n\n\t\tconst lexeme = this._input.substring(this._start, this._current);\n\t\tthis._tokens.push({ type: TokenType.RegexStr, lexeme, offset: this._start });\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._current >= this._input.length;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as descriptors from './descriptors.js';\nimport { ServiceCollection } from './serviceCollection.js';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>; index: number }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature<T, Args extends any[] = []> {\n\tnew <Services extends BrandedService[]>(...args: [...Args, ...Services]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\nexport type GetLeadingNonServiceArgs<TArgs extends any[]> =\n\tTArgs extends [] ? []\n\t: TArgs extends [...infer TFirst, BrandedService] ? GetLeadingNonServiceArgs<TFirst>\n\t: TArgs;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<Ctor extends new (...args: any[]) => unknown, R extends InstanceType<Ctor>>(ctor: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t * Calls a function with a service accessor.\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherits all current services\n\t * and adds/overwrites the given services.\n\t *\n\t * NOTE that the returned child is `disposable` and should be disposed when not used\n\t * anymore. This will also dispose all the services that this service has created.\n\t */\n\tcreateChild(services: ServiceCollection, store?: DisposableStore): IInstantiationService;\n\n\t/**\n\t * Disposes this instantiation service.\n\t *\n\t * - Will dispose all services that this instantiation service has created.\n\t * - Will dispose all its children but not its parent.\n\t * - Will NOT dispose services-instances that this service has been created with\n\t * - Will NOT dispose consumer-instances this service has created\n\t */\n\tdispose(): void;\n}\n\n\n/**\n * Identifies a service of type `T`.\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { Event } from '../../../base/common/event.js';\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner, LexingError, Token, TokenType } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { illegalArgument } from '../../../base/common/errors.js';\n\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\n\n/** allow register constant context keys that are known only after startup; requires running `substituteConstants` on the context key - https://github.com/microsoft/vscode/issues/174218#issuecomment-1437972127 */\nexport function setConstant(key: string, value: boolean) {\n\tif (CONSTANT_VALUES.get(key) !== undefined) { throw illegalArgument('contextkey.setConstant(k, v) invoked with already set constant `k`'); }\n\n\tCONSTANT_VALUES.set(key, value);\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n\tmapNotIn(key: string, valueKey: string): ContextKeyNotInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\n\n/*\n\nSyntax grammar:\n\n```ebnf\n\nexpression ::= or\n\nor ::= and { '||' and }*\n\nand ::= term { '&&' term }*\n\nterm ::=\n\t| '!' (KEY | true | false | parenthesized)\n\t| primary\n\nprimary ::=\n\t| 'true'\n\t| 'false'\n\t| parenthesized\n\t| KEY '=~' REGEX\n\t| KEY [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'not' 'in' | 'in') value ]\n\nparenthesized ::=\n\t| '(' expression ')'\n\nvalue ::=\n\t| 'true'\n\t| 'false'\n\t| 'in'      \t// we support `in` as a value because there's an extension that uses it, ie \"when\": \"languageId == in\"\n\t| VALUE \t\t// matched by the same regex as KEY; consider putting the value in single quotes if it's a string (e.g., with spaces)\n\t| SINGLE_QUOTED_STR\n\t| EMPTY_STR  \t// this allows \"when\": \"foo == \" which's used by existing extensions\n\n```\n*/\n\nexport type ParserConfig = {\n\t/**\n\t * with this option enabled, the parser can recover from regex parsing errors, e.g., unescaped slashes: `/src//` is accepted as `/src\\//` would be\n\t */\n\tregexParsingWithErrorRecovery: boolean;\n};\n\nconst defaultConfig: ParserConfig = {\n\tregexParsingWithErrorRecovery: true\n};\n\nexport type ParsingError = {\n\tmessage: string;\n\toffset: number;\n\tlexeme: string;\n\tadditionalInfo?: string;\n};\n\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n\t// Note: this doesn't produce an exact syntax tree but a normalized one\n\t// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\n\n\tprivate static _parseError = new Error();\n\n\t// lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n\tprivate readonly _scanner = new Scanner();\n\n\t// lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n\tprivate _tokens: Token[] = [];\n\tprivate _current = 0; \t\t\t\t\t// invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n\tprivate _parsingErrors: ParsingError[] = [];\n\n\tget lexingErrors(): Readonly<LexingError[]> {\n\t\treturn this._scanner.errors;\n\t}\n\n\tget parsingErrors(): Readonly<ParsingError[]> {\n\t\treturn this._parsingErrors;\n\t}\n\n\tconstructor(private readonly _config: ParserConfig = defaultConfig) {\n\t}\n\n\t/**\n\t * Parse a context key expression.\n\t *\n\t * @param input the expression to parse\n\t * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n\t */\n\tparse(input: string): ContextKeyExpression | undefined {\n\n\t\tif (input === '') {\n\t\t\tthis._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._tokens = this._scanner.reset(input).scan();\n\t\t// @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n\n\t\tthis._current = 0;\n\t\tthis._parsingErrors = [];\n\n\t\ttry {\n\t\t\tconst expr = this._expr();\n\t\t\tif (!this._isAtEnd()) {\n\t\t\t\tconst peek = this._peek();\n\t\t\t\tconst additionalInfo = peek.type === TokenType.Str ? hintUnexpectedToken : undefined;\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n\t\t\t\tthrow Parser._parseError;\n\t\t\t}\n\t\t\treturn expr;\n\t\t} catch (e) {\n\t\t\tif (!(e === Parser._parseError)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprivate _expr(): ContextKeyExpression | undefined {\n\t\treturn this._or();\n\t}\n\n\tprivate _or(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._and()];\n\n\t\twhile (this._matchOne(TokenType.Or)) {\n\t\t\tconst right = this._and();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n\t}\n\n\tprivate _and(): ContextKeyExpression | undefined {\n\t\tconst expr = [this._term()];\n\n\t\twhile (this._matchOne(TokenType.And)) {\n\t\t\tconst right = this._term();\n\t\t\texpr.push(right);\n\t\t}\n\n\t\treturn expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n\t}\n\n\tprivate _term(): ContextKeyExpression | undefined {\n\t\tif (this._matchOne(TokenType.Neg)) {\n\t\t\tconst peek = this._peek();\n\t\t\tswitch (peek.type) {\n\t\t\t\tcase TokenType.True:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\tcase TokenType.False:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\tcase TokenType.LParen: {\n\t\t\t\t\tthis._advance();\n\t\t\t\t\tconst expr = this._expr();\n\t\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\t\treturn expr?.negate();\n\t\t\t\t}\n\t\t\t\tcase TokenType.Str:\n\t\t\t\t\tthis._advance();\n\t\t\t\t\treturn ContextKeyNotExpr.create(peek.lexeme);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n\t\t\t}\n\t\t}\n\t\treturn this._primary();\n\t}\n\n\tprivate _primary(): ContextKeyExpression | undefined {\n\n\t\tconst peek = this._peek();\n\t\tswitch (peek.type) {\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.true();\n\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn ContextKeyExpr.false();\n\n\t\t\tcase TokenType.LParen: {\n\t\t\t\tthis._advance();\n\t\t\t\tconst expr = this._expr();\n\t\t\t\tthis._consume(TokenType.RParen, errorClosingParenthesis);\n\t\t\t\treturn expr;\n\t\t\t}\n\n\t\t\tcase TokenType.Str: {\n\t\t\t\t// KEY\n\t\t\t\tconst key = peek.lexeme;\n\t\t\t\tthis._advance();\n\n\t\t\t\t// =~ regex\n\t\t\t\tif (this._matchOne(TokenType.RegexOp)) {\n\n\t\t\t\t\t// @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n\t\t\t\t\tconst expr = this._peek();\n\n\t\t\t\t\tif (!this._config.regexParsingWithErrorRecovery) {\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\tif (expr.type !== TokenType.RegexStr) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst regexLexeme = expr.lexeme;\n\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regexp);\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (expr.type) {\n\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\tcase TokenType.Error: { // also handle an ErrorToken in case of smth such as /(/file)/\n\t\t\t\t\t\t\tconst lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n\t\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\t\tlet followingToken = this._peek();\n\t\t\t\t\t\t\tlet parenBalance = 0;\n\t\t\t\t\t\t\tfor (let i = 0; i < expr.lexeme.length; i++) {\n\t\t\t\t\t\t\t\tif (expr.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twhile (!this._isAtEnd() && followingToken.type !== TokenType.And && followingToken.type !== TokenType.Or) {\n\t\t\t\t\t\t\t\tswitch (followingToken.type) {\n\t\t\t\t\t\t\t\t\tcase TokenType.LParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RParen:\n\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase TokenType.RegexStr:\n\t\t\t\t\t\t\t\t\tcase TokenType.QuotedStr:\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < followingToken.lexeme.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\tif (followingToken.lexeme.charCodeAt(i) === CharCode.OpenParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance++;\n\t\t\t\t\t\t\t\t\t\t\t} else if (expr.lexeme.charCodeAt(i) === CharCode.CloseParen) {\n\t\t\t\t\t\t\t\t\t\t\t\tparenBalance--;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (parenBalance < 0) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlexemeReconstruction.push(Scanner.getLexeme(followingToken));\n\t\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t\tfollowingToken = this._peek();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst regexLexeme = lexemeReconstruction.join('');\n\t\t\t\t\t\t\tconst closingSlashIndex = regexLexeme.lastIndexOf('/');\n\t\t\t\t\t\t\tconst flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n\t\t\t\t\t\t\tlet regexp: RegExp | null;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tregexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ContextKeyExpr.regex(key, regexp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcase TokenType.QuotedStr: {\n\t\t\t\t\t\t\tconst serializedValue = expr.lexeme;\n\t\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\t\t// replicate old regex parsing behavior\n\n\t\t\t\t\t\t\tlet regex: RegExp | null = null;\n\n\t\t\t\t\t\t\tif (!isFalsyOrWhitespace(serializedValue)) {\n\t\t\t\t\t\t\t\tconst start = serializedValue.indexOf('/');\n\t\t\t\t\t\t\t\tconst end = serializedValue.lastIndexOf('/');\n\t\t\t\t\t\t\t\tif (start !== end && start >= 0) {\n\n\t\t\t\t\t\t\t\t\tconst value = serializedValue.slice(start + 1, end);\n\t\t\t\t\t\t\t\t\tconst caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tregex = new RegExp(value, caseIgnoreFlag);\n\t\t\t\t\t\t\t\t\t} catch (_e) {\n\t\t\t\t\t\t\t\t\t\tthrow this._errExpectedButGot(`REGEX`, expr);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (regex === null) {\n\t\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', expr);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ContextKeyRegexExpr.create(key, regex);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow this._errExpectedButGot('REGEX', this._peek());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// [ 'not' 'in' value ]\n\t\t\t\tif (this._matchOne(TokenType.Not)) {\n\t\t\t\t\tthis._consume(TokenType.In, errorNoInAfterNot);\n\t\t\t\t\tconst right = this._value();\n\t\t\t\t\treturn ContextKeyExpr.notIn(key, right);\n\t\t\t\t}\n\n\t\t\t\t// [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n\t\t\t\tconst maybeOp = this._peek().type;\n\t\t\t\tswitch (maybeOp) {\n\t\t\t\t\tcase TokenType.Eq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.equals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcase TokenType.NotEq: {\n\t\t\t\t\t\tthis._advance();\n\n\t\t\t\t\t\tconst right = this._value();\n\t\t\t\t\t\tif (this._previous().type === TokenType.QuotedStr) { // same as above with \"foo != 'true'\"\n\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (right) {\n\t\t\t\t\t\t\tcase 'true':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.not(key);\n\t\t\t\t\t\t\tcase 'false':\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn ContextKeyExpr.notEquals(key, right);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n\t\t\t\t\t// consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n\t\t\t\t\tcase TokenType.Lt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.LtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeySmallerEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.Gt:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.GtEq:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyGreaterEqualsExpr.create(key, this._value());\n\n\t\t\t\t\tcase TokenType.In:\n\t\t\t\t\t\tthis._advance();\n\t\t\t\t\t\treturn ContextKeyExpr.in(key, this._value());\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn ContextKeyExpr.has(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcase TokenType.EOF:\n\t\t\t\tthis._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n\t\t\t\tthrow Parser._parseError;\n\n\t\t\tdefault:\n\t\t\t\tthrow this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n\n\t\t}\n\t}\n\n\tprivate _value(): string {\n\t\tconst token = this._peek();\n\t\tswitch (token.type) {\n\t\t\tcase TokenType.Str:\n\t\t\tcase TokenType.QuotedStr:\n\t\t\t\tthis._advance();\n\t\t\t\treturn token.lexeme;\n\t\t\tcase TokenType.True:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'true';\n\t\t\tcase TokenType.False:\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'false';\n\t\t\tcase TokenType.In: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n\t\t\t\tthis._advance();\n\t\t\t\treturn 'in';\n\t\t\tdefault:\n\t\t\t\t// this allows \"when\": \"foo == \" which's used by existing extensions\n\t\t\t\t// we do not call `_advance` on purpose - we don't want to eat unintended tokens\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate _flagsGYRe = /g|y/g;\n\tprivate _removeFlagsGY(flags: string): string {\n\t\treturn flags.replaceAll(this._flagsGYRe, '');\n\t}\n\n\t// careful: this can throw if current token is the initial one (ie index = 0)\n\tprivate _previous() {\n\t\treturn this._tokens[this._current - 1];\n\t}\n\n\tprivate _matchOne(token: TokenType) {\n\t\tif (this._check(token)) {\n\t\t\tthis._advance();\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _advance() {\n\t\tif (!this._isAtEnd()) {\n\t\t\tthis._current++;\n\t\t}\n\t\treturn this._previous();\n\t}\n\n\tprivate _consume(type: TokenType, message: string) {\n\t\tif (this._check(type)) {\n\t\t\treturn this._advance();\n\t\t}\n\n\t\tthrow this._errExpectedButGot(message, this._peek());\n\t}\n\n\tprivate _errExpectedButGot(expected: string, got: Token, additionalInfo?: string) {\n\t\tconst message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n\t\tconst offset = got.offset;\n\t\tconst lexeme = Scanner.getLexeme(got);\n\t\tthis._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n\t\treturn Parser._parseError;\n\t}\n\n\tprivate _check(type: TokenType) {\n\t\treturn this._peek().type === type;\n\t}\n\n\tprivate _peek() {\n\t\treturn this._tokens[this._current];\n\t}\n\n\tprivate _isAtEnd() {\n\t\treturn this._peek().type === TokenType.EOF;\n\t}\n}\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static notIn(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null, true);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tprivate static _parser = new Parser({ regexParsingWithErrorRecovery: false });\n\tpublic static deserialize(serialized: string | null | undefined): ContextKeyExpression | undefined {\n\t\tif (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst expr = this._parser.parse(serialized);\n\t\treturn expr;\n\t}\n\n}\n\n\nexport function validateWhenClauses(whenClauses: string[]): any {\n\n\tconst parser = new Parser({ regexParsingWithErrorRecovery: false }); // we run with no recovery to guide users to use correct regexes\n\n\treturn whenClauses.map(whenClause => {\n\t\tparser.parse(whenClause);\n\n\t\tif (parser.lexingErrors.length > 0) {\n\t\t\treturn parser.lexingErrors.map((se: LexingError) => ({\n\t\t\t\terrorMessage: se.additionalInfo ?\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinterWithHint', \"Unexpected token. Hint: {0}\", se.additionalInfo) :\n\t\t\t\t\tlocalize('contextkey.scanner.errorForLinter', \"Unexpected token.\"),\n\t\t\t\toffset: se.offset,\n\t\t\t\tlength: se.lexeme.length,\n\t\t\t}));\n\t\t} else if (parser.parsingErrors.length > 0) {\n\t\t\treturn parser.parsingErrors.map((pe: ParsingError) => ({\n\t\t\t\terrorMessage: pe.additionalInfo ? `${pe.message}. ${pe.additionalInfo}` : pe.message,\n\t\t\t\toffset: pe.offset,\n\t\t\t\tlength: pe.lexeme.length,\n\t\t\t}));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn source.includes(item as any);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate readonly _negated: ContextKeyInExpr;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t\tthis._negated = ContextKeyInExpr.create(key, valueKey);\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._negated.cmp(other._negated);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._negated.equals(other._negated);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._negated.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} not in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._negated.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._negated;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.flags}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!(${this._actual.serialize()})`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve false AND expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A && !A case\n\t\t\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// resolve true OR expressions\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (expr[i].negate().equals(expr[j])) {\n\t\t\t\t\t\t// A || !A case\n\t\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (const expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null, false)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, false)!);\n\t\t\t}\n\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T extends ContextKeyValue> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string; description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport type ContextKeyValue = null | undefined | boolean | number | string\n\t| Array<null | undefined | boolean | number | string>\n\t| Record<string, null | undefined | boolean | number | string>;\n\nexport interface IContext {\n\tgetValue<T extends ContextKeyValue = ContextKeyValue>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T extends ContextKeyValue = ContextKeyValue> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n\tallKeysContainedIn(keys: IReadableSet<string>): boolean;\n}\n\nexport type IScopedContextKeyService = IContextKeyService & IDisposable;\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T extends ContextKeyValue>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IScopedContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (p.type === ContextKeyExprType.False || q.type === ContextKeyExprType.True) {\n\t\t// false implies anything\n\t\t// anything implies true\n\t\treturn true;\n\t}\n\n\tif (p.type === ContextKeyExprType.Or) {\n\t\tif (q.type === ContextKeyExprType.Or) {\n\t\t\t// `a || b || c` can only imply something like `a || b || c || d`\n\t\t\treturn allElementsIncluded(p.expr, q.expr);\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (q.type === ContextKeyExprType.Or) {\n\t\tfor (const element of q.expr) {\n\t\t\tif (implies(p, element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tif (p.type === ContextKeyExprType.And) {\n\t\tif (q.type === ContextKeyExprType.And) {\n\t\t\t// `a && b && c` implies `a && c`\n\t\t\treturn allElementsIncluded(q.expr, p.expr);\n\t\t}\n\t\tfor (const element of p.expr) {\n\t\t\tif (implies(element, q)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn p.equals(q);\n}\n\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p: ContextKeyExpression[], q: ContextKeyExpression[]): boolean {\n\tlet pIndex = 0;\n\tlet qIndex = 0;\n\twhile (pIndex < p.length && qIndex < q.length) {\n\t\tconst cmp = p[pIndex].cmp(q[qIndex]);\n\n\t\tif (cmp < 0) {\n\t\t\t// an element from `p` is missing from `q`\n\t\t\treturn false;\n\t\t} else if (cmp === 0) {\n\t\t\tpIndex++;\n\t\t\tqIndex++;\n\t\t} else {\n\t\t\tqIndex++;\n\t\t}\n\t}\n\treturn (pIndex === p.length);\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\treadonly ctor: new () => T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors.js';\nimport { BrandedService, ServiceIdentifier } from './instantiation.js';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport const enum InstantiationType {\n\t/**\n\t * Instantiate this service as soon as a consumer depends on it. _Note_ that this\n\t * is more costly as some upfront work is done that is likely not needed\n\t */\n\tEager = 0,\n\n\t/**\n\t * Instantiate this service as soon as a consumer uses it. This is the _better_\n\t * way of registering a service.\n\t */\n\tDelayed = 1\n}\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation: InstantiationType): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean | InstantiationType): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], Boolean(supportsDelayedInstantiation));\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, decodeBase64, encodeBase64 } from '../../../../base/common/buffer.js';\nimport { ResourceMap } from '../../../../base/common/map.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { InstantiationType, registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\n\nexport const INotebookDocumentService = createDecorator<INotebookDocumentService>('notebookDocumentService');\n\nexport interface INotebookDocument {\n\treadonly uri: URI;\n\tgetCellIndex(cellUri: URI): number | undefined;\n}\n\nconst _lengths = ['W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f'];\nconst _padRegexp = new RegExp(`^[${_lengths.join('')}]+`);\nconst _radix = 7;\nexport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\tif (cell.scheme !== Schemas.vscodeNotebookCell) {\n\t\treturn undefined;\n\t}\n\n\tconst idx = cell.fragment.indexOf('s');\n\tif (idx < 0) {\n\t\treturn undefined;\n\t}\n\n\tconst handle = parseInt(cell.fragment.substring(0, idx).replace(_padRegexp, ''), _radix);\n\tconst _scheme = decodeBase64(cell.fragment.substring(idx + 1)).toString();\n\n\tif (isNaN(handle)) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\thandle,\n\t\tnotebook: cell.with({ scheme: _scheme, fragment: null })\n\t};\n}\n\nexport function generate(notebook: URI, handle: number): URI {\n\n\tconst s = handle.toString(_radix);\n\tconst p = s.length < _lengths.length ? _lengths[s.length - 1] : 'z';\n\n\tconst fragment = `${p}${s}s${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\treturn notebook.with({ scheme: Schemas.vscodeNotebookCell, fragment });\n}\n\nexport function parseMetadataUri(metadata: URI): URI | undefined {\n\tif (metadata.scheme !== Schemas.vscodeNotebookMetadata) {\n\t\treturn undefined;\n\t}\n\n\tconst _scheme = decodeBase64(metadata.fragment).toString();\n\n\treturn metadata.with({ scheme: _scheme, fragment: null });\n}\n\nexport function generateMetadataUri(notebook: URI): URI {\n\tconst fragment = `${encodeBase64(VSBuffer.fromString(notebook.scheme), true, true)}`;\n\treturn notebook.with({ scheme: Schemas.vscodeNotebookMetadata, fragment });\n}\n\nexport interface INotebookDocumentService {\n\treadonly _serviceBrand: undefined;\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined;\n\taddNotebookDocument(document: INotebookDocument): void;\n\tremoveNotebookDocument(document: INotebookDocument): void;\n}\n\nexport class NotebookDocumentWorkbenchService implements INotebookDocumentService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _documents = new ResourceMap<INotebookDocument>();\n\n\tgetNotebook(uri: URI): INotebookDocument | undefined {\n\t\tif (uri.scheme === Schemas.vscodeNotebookCell) {\n\t\t\tconst cellUri = parse(uri);\n\t\t\tif (cellUri) {\n\t\t\t\tconst document = this._documents.get(cellUri.notebook);\n\t\t\t\tif (document) {\n\t\t\t\t\treturn document;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._documents.get(uri);\n\t}\n\n\taddNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.set(document.uri, document);\n\t}\n\n\tremoveNotebookDocument(document: INotebookDocument) {\n\t\tthis._documents.delete(document.uri);\n\t}\n\n}\n\nregisterSingleton(INotebookDocumentService, NotebookDocumentWorkbenchService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../../base/common/buffer.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IDiffResult } from '../../../../base/common/diff/diff.js';\nimport { Event } from '../../../../base/common/event.js';\nimport * as glob from '../../../../base/common/glob.js';\nimport { IMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { basename } from '../../../../base/common/path.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { ISplice } from '../../../../base/common/sequence.js';\nimport { ThemeColor } from '../../../../base/common/themables.js';\nimport { URI, UriComponents } from '../../../../base/common/uri.js';\nimport { Range } from '../../../../editor/common/core/range.js';\nimport { ILineChange } from '../../../../editor/common/diff/legacyLinesDiffComputer.js';\nimport * as editorCommon from '../../../../editor/common/editorCommon.js';\nimport { Command, WorkspaceEditMetadata } from '../../../../editor/common/languages.js';\nimport { IReadonlyTextBuffer } from '../../../../editor/common/model.js';\nimport { IAccessibilityInformation } from '../../../../platform/accessibility/common/accessibility.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';\nimport { IFileReadLimits } from '../../../../platform/files/common/files.js';\nimport { UndoRedoGroup } from '../../../../platform/undoRedo/common/undoRedo.js';\nimport { IRevertOptions, ISaveOptions, IUntypedEditorInput } from '../../../common/editor.js';\nimport { NotebookTextModel } from './model/notebookTextModel.js';\nimport { ICellExecutionError } from './notebookExecutionStateService.js';\nimport { INotebookTextModelLike } from './notebookKernelService.js';\nimport { ICellRange } from './notebookRange.js';\nimport { RegisteredEditorPriority } from '../../../services/editor/common/editorResolverService.js';\nimport { generateMetadataUri, generate as generateUri, parseMetadataUri, parse as parseUri } from '../../../services/notebook/common/notebookDocumentService.js';\nimport { IWorkingCopyBackupMeta, IWorkingCopySaveEvent } from '../../../services/workingCopy/common/workingCopy.js';\n\nexport const NOTEBOOK_EDITOR_ID = 'workbench.editor.notebook';\nexport const NOTEBOOK_DIFF_EDITOR_ID = 'workbench.editor.notebookTextDiffEditor';\nexport const NOTEBOOK_MULTI_DIFF_EDITOR_ID = 'workbench.editor.notebookMultiTextDiffEditor';\nexport const INTERACTIVE_WINDOW_EDITOR_ID = 'workbench.editor.interactive';\nexport const REPL_EDITOR_ID = 'workbench.editor.repl';\n\nexport const EXECUTE_REPL_COMMAND_ID = 'replNotebook.input.execute';\n\nexport enum CellKind {\n\tMarkup = 1,\n\tCode = 2\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\tMimes.latex,\n\tMimes.markdown,\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER: readonly string[] = [\n\tMimes.latex,\n\tMimes.markdown,\n\t'application/json',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n\tMimes.text,\n];\n\n/**\n * A mapping of extension IDs who contain renderers, to notebook ids who they\n * should be treated as the same in the renderer selection logic. This is used\n * to prefer the 1st party Jupyter renderers even though they're in a separate\n * extension, for instance. See #136247.\n */\nexport const RENDERER_EQUIVALENT_EXTENSIONS: ReadonlyMap<string, ReadonlySet<string>> = new Map([\n\t['ms-toolsai.jupyter', new Set(['jupyter-notebook', 'interactive'])],\n\t['ms-toolsai.jupyter-renderers', new Set(['jupyter-notebook', 'interactive'])],\n]);\n\nexport const RENDERER_NOT_AVAILABLE = '_notAvailable';\n\nexport type ContributedNotebookRendererEntrypoint = string | { readonly extends: string; readonly path: string };\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport type NotebookDocumentMetadata = Record<string, unknown>;\n\nexport enum NotebookCellExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\nexport enum NotebookExecutionState {\n\tUnconfirmed = 1,\n\tPending = 2,\n\tExecuting = 3\n}\n\nexport interface INotebookCellPreviousExecutionResult {\n\texecutionOrder?: number;\n\tsuccess?: boolean;\n\tduration?: number;\n}\n\nexport interface NotebookCellMetadata {\n\t/**\n\t * custom metadata\n\t */\n\t[key: string]: unknown;\n}\n\nexport interface NotebookCellInternalMetadata {\n\texecutionId?: string;\n\texecutionOrder?: number;\n\tlastRunSuccess?: boolean;\n\trunStartTime?: number;\n\trunStartTimeAdjustment?: number;\n\trunEndTime?: number;\n\trenderDuration?: { [key: string]: number };\n\terror?: ICellExecutionError;\n}\n\nexport interface NotebookCellCollapseState {\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n}\n\nexport interface NotebookCellDefaultCollapseConfig {\n\tcodeCell?: NotebookCellCollapseState;\n\tmarkupCell?: NotebookCellCollapseState;\n}\n\nexport type InteractiveWindowCollapseCodeCells = 'always' | 'never' | 'fromEditor';\n\nexport type TransientCellMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type CellContentMetadata = { readonly [K in keyof NotebookCellMetadata]?: boolean };\nexport type TransientDocumentMetadata = { readonly [K in keyof NotebookDocumentMetadata]?: boolean };\n\nexport interface TransientOptions {\n\treadonly transientOutputs: boolean;\n\treadonly transientCellMetadata: TransientCellMetadata;\n\treadonly transientDocumentMetadata: TransientDocumentMetadata;\n\treadonly cellContentMetadata: CellContentMetadata;\n}\n\n/** Note: enum values are used for sorting */\nexport const enum NotebookRendererMatch {\n\t/** Renderer has a hard dependency on an available kernel */\n\tWithHardKernelDependency = 0,\n\t/** Renderer works better with an available kernel */\n\tWithOptionalKernelDependency = 1,\n\t/** Renderer is kernel-agnostic */\n\tPure = 2,\n\t/** Renderer is for a different mimeType or has a hard dependency which is unsatisfied */\n\tNever = 3,\n}\n\n/**\n * Renderer messaging requirement. While this allows for 'optional' messaging,\n * VS Code effectively treats it the same as true right now. \"Partial\n * activation\" of extensions is a very tricky problem, which could allow\n * solving this. But for now, optional is mostly only honored for aznb.\n */\nexport const enum RendererMessagingSpec {\n\tAlways = 'always',\n\tNever = 'never',\n\tOptional = 'optional',\n}\n\nexport type NotebookRendererEntrypoint = { readonly extends: string | undefined; readonly path: URI };\n\nexport interface INotebookRendererInfo {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly entrypoint: NotebookRendererEntrypoint;\n\treadonly extensionLocation: URI;\n\treadonly extensionId: ExtensionIdentifier;\n\treadonly messaging: RendererMessagingSpec;\n\n\treadonly mimeTypes: readonly string[];\n\n\treadonly isBuiltin: boolean;\n\n\tmatchesWithoutKernel(mimeType: string): NotebookRendererMatch;\n\tmatches(mimeType: string, kernelProvides: ReadonlyArray<string>): NotebookRendererMatch;\n}\n\nexport interface INotebookStaticPreloadInfo {\n\treadonly type: string;\n\treadonly entrypoint: URI;\n\treadonly extensionLocation: URI;\n\treadonly localResourceRoots: readonly URI[];\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n\tisTrusted: boolean;\n}\n\nexport interface IOutputItemDto {\n\treadonly mime: string;\n\treadonly data: VSBuffer;\n}\n\nexport interface IOutputDto {\n\toutputs: IOutputItemDto[];\n\toutputId: string;\n\tmetadata?: Record<string, any>;\n}\n\nexport interface ICellOutput {\n\treadonly versionId: number;\n\toutputs: IOutputItemDto[];\n\tmetadata?: Record<string, any>;\n\toutputId: string;\n\t/**\n\t * Alternative output id that's reused when the output is updated.\n\t */\n\talternativeOutputId: string;\n\tonDidChangeData: Event<void>;\n\treplaceData(items: IOutputDto): void;\n\tappendData(items: IOutputItemDto[]): void;\n\tappendedSinceVersion(versionId: number, mime: string): VSBuffer | undefined;\n\tasDto(): IOutputDto;\n\tbumpVersion(): void;\n\tdispose(): void;\n}\n\nexport interface CellInternalMetadataChangedEvent {\n\treadonly lastRunSuccessChanged?: boolean;\n}\n\nexport interface INotebookDocumentMetadataTextModel {\n\t/**\n\t * Notebook Metadata Uri.\n\t */\n\treadonly uri: URI;\n\t/**\n\t * Triggered when the Notebook Metadata changes.\n\t */\n\treadonly onDidChange: Event<void>;\n\treadonly metadata: Readonly<NotebookDocumentMetadata>;\n\treadonly textBuffer: IReadonlyTextBuffer;\n\t/**\n\t * Text representation of the Notebook Metadata\n\t */\n\tgetValue(): string;\n\tgetHash(): string;\n}\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: ICellOutput[];\n\tmetadata: NotebookCellMetadata;\n\tinternalMetadata: NotebookCellInternalMetadata;\n\tgetHashValue(): number;\n\ttextBuffer: IReadonlyTextBuffer;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice>;\n\tonDidChangeOutputItems?: Event<void>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n\tonDidChangeInternalMetadata: Event<CellInternalMetadataChangedEvent>;\n}\n\nexport interface INotebookTextModel extends INotebookTextModelLike {\n\treadonly notebookType: string;\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata;\n\treadonly transientOptions: TransientOptions;\n\treadonly uri: URI;\n\treadonly versionId: number;\n\treadonly length: number;\n\treadonly cells: readonly ICell[];\n\treset(cells: ICellDto2[], metadata: NotebookDocumentMetadata, transientOptions: TransientOptions): void;\n\tapplyEdits(rawEdits: ICellEditOperation[], synchronous: boolean, beginSelectionState: ISelectionState | undefined, endSelectionsComputer: () => ISelectionState | undefined, undoRedoGroup: UndoRedoGroup | undefined, computeUndoRedo?: boolean): boolean;\n\tonDidChangeContent: Event<NotebookTextModelChangedEvent>;\n\tonWillDispose: Event<void>;\n}\n\nexport type NotebookCellTextModelSplice<T> = [\n\tstart: number,\n\tdeleteCount: number,\n\tnewItems: T[]\n];\n\nexport type NotebookCellOutputsSplice = {\n\tstart: number /* start */;\n\tdeleteCount: number /* delete count */;\n\tnewOutputs: ICellOutput[];\n};\n\nexport interface IMainCellDto {\n\thandle: number;\n\turl: string;\n\tsource: string[];\n\teol: string;\n\tversionId: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n}\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tChangeCellLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tOutputItem = 9,\n\tChangeCellContent = 10,\n\tChangeDocumentMetadata = 11,\n\tChangeCellInternalMetadata = 12,\n\tChangeCellMime = 13,\n\tUnknown = 100\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n\treadonly index: number;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IOutputDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookOutputItemChangedEvent {\n\treadonly kind: NotebookCellsChangeType.OutputItem;\n\treadonly index: number;\n\treadonly outputId: string;\n\treadonly outputItems: IOutputItemDto[];\n\treadonly append: boolean;\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMimeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMime;\n\treadonly index: number;\n\treadonly mime: string | undefined;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata;\n}\n\nexport interface NotebookCellsChangeInternalMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellInternalMetadata;\n\treadonly index: number;\n\treadonly internalMetadata: NotebookCellInternalMetadata;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookOutputItemChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMimeEvent | NotebookCellsChangeMetadataEvent | NotebookCellsChangeInternalMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean };\n\nexport enum SelectionStateType {\n\tHandle = 0,\n\tIndex = 1\n}\n\nexport interface ISelectionHandleState {\n\tkind: SelectionStateType.Handle;\n\tprimary: number | null;\n\tselections: number[];\n}\n\nexport interface ISelectionIndexState {\n\tkind: SelectionStateType.Index;\n\tfocus: ICellRange;\n\tselections: ICellRange[];\n}\n\nexport type ISelectionState = ISelectionHandleState | ISelectionIndexState;\n\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean | undefined;\n\treadonly endSelectionState: ISelectionState | undefined;\n};\n\nexport type NotebookTextModelWillAddRemoveEvent = {\n\treadonly rawEvent: NotebookCellsModelChangedEvent<ICell>;\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tMove = 6,\n\tOutputItems = 7,\n\tPartialMetadata = 8,\n\tPartialInternalMetadata = 9,\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tmime: string | undefined;\n\tcellKind: CellKind;\n\toutputs: IOutputDto[];\n\tmetadata?: NotebookCellMetadata;\n\tinternalMetadata?: NotebookCellInternalMetadata;\n\tcollapseState?: NotebookCellCollapseState;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputEditByHandle {\n\teditType: CellEditType.Output;\n\thandle: number;\n\toutputs: IOutputDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellOutputItemEdit {\n\teditType: CellEditType.OutputItems;\n\toutputId: string;\n\titems: IOutputItemDto[];\n\tappend?: boolean;\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n// These types are nullable because we need to use 'null' on the EH side so it is JSON-stringified\nexport type NullablePartialNotebookCellMetadata = {\n\t[Key in keyof Partial<NotebookCellMetadata>]: NotebookCellMetadata[Key] | null\n};\n\nexport interface ICellPartialMetadataEdit {\n\teditType: CellEditType.PartialMetadata;\n\tindex: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport interface ICellPartialMetadataEditByHandle {\n\teditType: CellEditType.PartialMetadata;\n\thandle: number;\n\tmetadata: NullablePartialNotebookCellMetadata;\n}\n\nexport type NullablePartialNotebookCellInternalMetadata = {\n\t[Key in keyof Partial<NotebookCellInternalMetadata>]: NotebookCellInternalMetadata[Key] | null\n};\nexport interface ICellPartialInternalMetadataEdit {\n\teditType: CellEditType.PartialInternalMetadata;\n\tindex: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellPartialInternalMetadataEditByHandle {\n\teditType: CellEditType.PartialInternalMetadata;\n\thandle: number;\n\tinternalMetadata: NullablePartialNotebookCellInternalMetadata;\n}\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport type IImmediateCellEditOperation = ICellOutputEditByHandle | ICellPartialMetadataEditByHandle | ICellOutputItemEdit | ICellPartialInternalMetadataEdit | ICellPartialInternalMetadataEditByHandle | ICellPartialMetadataEdit;\nexport type ICellEditOperation = IImmediateCellEditOperation | ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellPartialMetadataEdit | ICellPartialInternalMetadataEdit | IDocumentMetadataEdit | ICellMoveEdit | ICellOutputItemEdit | ICellLanguageEdit;\n\n\nexport interface IWorkspaceNotebookCellEdit {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface IWorkspaceNotebookCellEditDto {\n\tmetadata?: WorkspaceEditMetadata;\n\tresource: URI;\n\tnotebookVersionId: number | undefined;\n\tcellEdit: ICellPartialMetadataEdit | IDocumentMetadataEdit | ICellReplaceEdit;\n}\n\nexport interface NotebookData {\n\treadonly cells: ICellDto2[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\n\nexport interface INotebookContributionData {\n\textension?: ExtensionIdentifier;\n\tproviderDisplayName: string;\n\tdisplayName: string;\n\tfilenamePattern: (string | glob.IRelativePattern | INotebookExclusiveDocumentFilter)[];\n\tpriority?: RegisteredEditorPriority;\n}\n\nexport namespace NotebookMetadataUri {\n\texport const scheme = Schemas.vscodeNotebookMetadata;\n\texport function generate(notebook: URI): URI {\n\t\treturn generateMetadataUri(notebook);\n\t}\n\texport function parse(metadata: URI): URI | undefined {\n\t\treturn parseMetadataUri(metadata);\n\t}\n}\n\nexport namespace CellUri {\n\texport const scheme = Schemas.vscodeNotebookCell;\n\texport function generate(notebook: URI, handle: number): URI {\n\t\treturn generateUri(notebook, handle);\n\t}\n\n\texport function parse(cell: URI): { notebook: URI; handle: number } | undefined {\n\t\treturn parseUri(cell);\n\t}\n\n\texport function generateCellOutputUri(notebook: URI, outputId?: string) {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscodeNotebookCellOutput,\n\t\t\tfragment: `op${outputId ?? ''},${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parseCellOutputUri(uri: URI): { notebook: URI; outputId?: string } | undefined {\n\t\tif (uri.scheme !== Schemas.vscodeNotebookCellOutput) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst match = /^op([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?\\,(.*)$/i.exec(uri.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst outputId = (match[1] && match[1] !== '') ? match[1] : undefined;\n\t\tconst scheme = match[2];\n\t\treturn {\n\t\t\toutputId,\n\t\t\tnotebook: uri.with({\n\t\t\t\tscheme: scheme || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n\n\texport function generateCellPropertyUri(notebook: URI, handle: number, scheme: string): URI {\n\t\treturn CellUri.generate(notebook, handle).with({ scheme: scheme });\n\t}\n\n\texport function parseCellPropertyUri(uri: URI, propertyScheme: string) {\n\t\tif (uri.scheme !== propertyScheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn CellUri.parse(uri.with({ scheme: scheme }));\n\t}\n}\n\nconst normalizeSlashes = (str: string) => isWindows ? str.replace(/\\//g, '\\\\') : str;\n\ninterface IMimeTypeWithMatcher {\n\tpattern: string;\n\tmatches: glob.ParsedPattern;\n}\n\nexport class MimeTypeDisplayOrder {\n\tprivate readonly order: IMimeTypeWithMatcher[];\n\n\tconstructor(\n\t\tinitialValue: readonly string[] = [],\n\t\tprivate readonly defaultOrder = NOTEBOOK_DISPLAY_ORDER,\n\t) {\n\t\tthis.order = [...new Set(initialValue)].map(pattern => ({\n\t\t\tpattern,\n\t\t\tmatches: glob.parse(normalizeSlashes(pattern))\n\t\t}));\n\t}\n\n\t/**\n\t * Returns a sorted array of the input mimetypes.\n\t */\n\tpublic sort(mimetypes: Iterable<string>): string[] {\n\t\tconst remaining = new Map(Iterable.map(mimetypes, m => [m, normalizeSlashes(m)]));\n\t\tlet sorted: string[] = [];\n\n\t\tfor (const { matches } of this.order) {\n\t\t\tfor (const [original, normalized] of remaining) {\n\t\t\t\tif (matches(normalized)) {\n\t\t\t\t\tsorted.push(original);\n\t\t\t\t\tremaining.delete(original);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (remaining.size) {\n\t\t\tsorted = sorted.concat([...remaining.keys()].sort(\n\t\t\t\t(a, b) => this.defaultOrder.indexOf(a) - this.defaultOrder.indexOf(b),\n\t\t\t));\n\t\t}\n\n\t\treturn sorted;\n\t}\n\n\t/**\n\t * Records that the user selected the given mimetype over the other\n\t * possible mimetypes, prioritizing it for future reference.\n\t */\n\tpublic prioritize(chosenMimetype: string, otherMimetypes: readonly string[]) {\n\t\tconst chosenIndex = this.findIndex(chosenMimetype);\n\t\tif (chosenIndex === -1) {\n\t\t\t// always first, nothing more to do\n\t\t\tthis.order.unshift({ pattern: chosenMimetype, matches: glob.parse(normalizeSlashes(chosenMimetype)) });\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the other mimetypes that are before the chosenMimetype. Then, move\n\t\t// them after it, retaining order.\n\t\tconst uniqueIndicies = new Set(otherMimetypes.map(m => this.findIndex(m, chosenIndex)));\n\t\tuniqueIndicies.delete(-1);\n\t\tconst otherIndices = Array.from(uniqueIndicies).sort();\n\t\tthis.order.splice(chosenIndex + 1, 0, ...otherIndices.map(i => this.order[i]));\n\n\t\tfor (let oi = otherIndices.length - 1; oi >= 0; oi--) {\n\t\t\tthis.order.splice(otherIndices[oi], 1);\n\t\t}\n\t}\n\n\t/**\n\t * Gets an array of in-order mimetype preferences.\n\t */\n\tpublic toArray() {\n\t\treturn this.order.map(o => o.pattern);\n\t}\n\n\tprivate findIndex(mimeType: string, maxIndex = this.order.length) {\n\t\tconst normalized = normalizeSlashes(mimeType);\n\t\tfor (let i = 0; i < maxIndex; i++) {\n\t\t\tif (this.order[i].matches(normalized)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\treadonly toInsert: T[];\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\nexport const NOTEBOOK_EDITOR_CURSOR_LINE_BOUNDARY = new RawContextKey<'none' | 'start' | 'end' | 'both'>('notebookEditorCursorAtLineBoundary', 'none');\n\nexport interface INotebookLoadOptions {\n\t/**\n\t * Go to disk bypassing any cache of the model if any.\n\t */\n\tforceReadFromFile?: boolean;\n\t/**\n\t * If provided, the size of the file will be checked against the limits\n\t * and an error will be thrown if any limit is exceeded.\n\t */\n\treadonly limits?: IFileReadLimits;\n}\n\nexport type NotebookEditorModelCreationOptions = {\n\tlimits?: IFileReadLimits;\n\tscratchpad?: boolean;\n\tviewType?: string;\n};\n\nexport interface IResolvedNotebookEditorModel extends INotebookEditorModel {\n\tnotebook: NotebookTextModel;\n}\n\nexport interface INotebookEditorModel extends IDisposable {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly onDidSave: Event<IWorkingCopySaveEvent>;\n\treadonly onDidChangeOrphaned: Event<void>;\n\treadonly onDidChangeReadonly: Event<void>;\n\treadonly onDidRevertUntitled: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: INotebookTextModel | undefined;\n\treadonly hasErrorState: boolean;\n\tisResolved(): boolean;\n\tisDirty(): boolean;\n\tisModified(): boolean;\n\tisReadonly(): boolean | IMarkdownString;\n\tisOrphaned(): boolean;\n\thasAssociatedFilePath(): boolean;\n\tload(options?: INotebookLoadOptions): Promise<IResolvedNotebookEditorModel>;\n\tsave(options?: ISaveOptions): Promise<boolean>;\n\tsaveAs(target: URI): Promise<IUntypedEditorInput | undefined>;\n\trevert(options?: IRevertOptions): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IDisposable {\n\toriginal: IResolvedNotebookEditorModel;\n\tmodified: IResolvedNotebookEditorModel;\n}\n\nexport interface NotebookDocumentBackupData extends IWorkingCopyBackupMeta {\n\treadonly viewType: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookFindOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean;\n\twordSeparators?: string;\n\tincludeMarkupInput?: boolean;\n\tincludeMarkupPreview?: boolean;\n\tincludeCodeInput?: boolean;\n\tincludeOutput?: boolean;\n\tfindScope?: INotebookFindScope;\n}\n\nexport interface INotebookFindScope {\n\tfindScopeType: NotebookFindScopeType;\n\tselectedCellRanges?: ICellRange[];\n\tselectedTextRanges?: Range[];\n}\n\nexport enum NotebookFindScopeType {\n\tCells = 'cells',\n\tText = 'text',\n\tNone = 'none'\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tconst filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tconst excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookCellStatusBarItemProvider {\n\tviewType: string;\n\tonDidChangeStatusBarItems?: Event<void>;\n\tprovideCellStatusBarItems(uri: URI, index: number, token: CancellationToken): Promise<INotebookCellStatusBarItemList | undefined>;\n}\n\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult;\n\tmetadataChanged: boolean;\n\tlinesDiff?: { originalCellhandle: number; modifiedCellhandle: number; lineChanges: ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarItem {\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly color?: string | ThemeColor;\n\treadonly backgroundColor?: string | ThemeColor;\n\treadonly tooltip?: string | IMarkdownString;\n\treadonly command?: string | Command;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly opacity?: string;\n\treadonly onlyShowWhenActive?: boolean;\n}\n\nexport interface INotebookCellStatusBarItemList {\n\titems: INotebookCellStatusBarItem[];\n\tdispose?(): void;\n}\n\nexport type ShowCellStatusBarType = 'hidden' | 'visible' | 'visibleAfterExecute';\nexport const NotebookSetting = {\n\tdisplayOrder: 'notebook.displayOrder',\n\tcellToolbarLocation: 'notebook.cellToolbarLocation',\n\tcellToolbarVisibility: 'notebook.cellToolbarVisibility',\n\tshowCellStatusBar: 'notebook.showCellStatusBar',\n\ttextDiffEditorPreview: 'notebook.diff.enablePreview',\n\tdiffOverviewRuler: 'notebook.diff.overviewRuler',\n\texperimentalInsertToolbarAlignment: 'notebook.experimental.insertToolbarAlignment',\n\tcompactView: 'notebook.compactView',\n\tfocusIndicator: 'notebook.cellFocusIndicator',\n\tinsertToolbarLocation: 'notebook.insertToolbarLocation',\n\tglobalToolbar: 'notebook.globalToolbar',\n\tstickyScrollEnabled: 'notebook.stickyScroll.enabled',\n\tstickyScrollMode: 'notebook.stickyScroll.mode',\n\tundoRedoPerCell: 'notebook.undoRedoPerCell',\n\tconsolidatedOutputButton: 'notebook.consolidatedOutputButton',\n\tshowFoldingControls: 'notebook.showFoldingControls',\n\tdragAndDropEnabled: 'notebook.dragAndDropEnabled',\n\tcellEditorOptionsCustomizations: 'notebook.editorOptionsCustomizations',\n\tconsolidatedRunButton: 'notebook.consolidatedRunButton',\n\topenGettingStarted: 'notebook.experimental.openGettingStarted',\n\tglobalToolbarShowLabel: 'notebook.globalToolbarShowLabel',\n\tmarkupFontSize: 'notebook.markup.fontSize',\n\tmarkdownLineHeight: 'notebook.markdown.lineHeight',\n\tinteractiveWindowCollapseCodeCells: 'interactiveWindow.collapseCellInputCode',\n\toutputScrollingDeprecated: 'notebook.experimental.outputScrolling',\n\toutputScrolling: 'notebook.output.scrolling',\n\ttextOutputLineLimit: 'notebook.output.textLineLimit',\n\tLinkifyOutputFilePaths: 'notebook.output.linkifyFilePaths',\n\tminimalErrorRendering: 'notebook.output.minimalErrorRendering',\n\tformatOnSave: 'notebook.formatOnSave.enabled',\n\tinsertFinalNewline: 'notebook.insertFinalNewline',\n\tdefaultFormatter: 'notebook.defaultFormatter',\n\tformatOnCellExecution: 'notebook.formatOnCellExecution',\n\tcodeActionsOnSave: 'notebook.codeActionsOnSave',\n\toutputWordWrap: 'notebook.output.wordWrap',\n\toutputLineHeightDeprecated: 'notebook.outputLineHeight',\n\toutputLineHeight: 'notebook.output.lineHeight',\n\toutputFontSizeDeprecated: 'notebook.outputFontSize',\n\toutputFontSize: 'notebook.output.fontSize',\n\toutputFontFamilyDeprecated: 'notebook.outputFontFamily',\n\toutputFontFamily: 'notebook.output.fontFamily',\n\tfindFilters: 'notebook.find.filters',\n\tlogging: 'notebook.logging',\n\tconfirmDeleteRunningCell: 'notebook.confirmDeleteRunningCell',\n\tremoteSaving: 'notebook.experimental.remoteSave',\n\tgotoSymbolsAllSymbols: 'notebook.gotoSymbols.showAllSymbols',\n\toutlineShowMarkdownHeadersOnly: 'notebook.outline.showMarkdownHeadersOnly',\n\toutlineShowCodeCells: 'notebook.outline.showCodeCells',\n\toutlineShowCodeCellSymbols: 'notebook.outline.showCodeCellSymbols',\n\tbreadcrumbsShowCodeCells: 'notebook.breadcrumbs.showCodeCells',\n\tscrollToRevealCell: 'notebook.scrolling.revealNextCellOnExecute',\n\tcellChat: 'notebook.experimental.cellChat',\n\tcellGenerate: 'notebook.experimental.generate',\n\tnotebookVariablesView: 'notebook.variablesView',\n\tInteractiveWindowPromptToSave: 'interactiveWindow.promptToSaveOnClose',\n\tcellFailureDiagnostics: 'notebook.cellFailureDiagnostics',\n\toutputBackupSizeLimit: 'notebook.backup.sizeLimit',\n\tmultiCursor: 'notebook.multiCursor.enabled',\n} as const;\n\nexport const enum CellStatusbarAlignment {\n\tLeft = 1,\n\tRight = 2\n}\n\nexport class NotebookWorkingCopyTypeIdentifier {\n\n\tprivate static _prefix = 'notebook/';\n\n\tstatic create(notebookType: string, viewType?: string): string {\n\t\treturn `${NotebookWorkingCopyTypeIdentifier._prefix}${notebookType}/${viewType ?? notebookType}`;\n\t}\n\n\tstatic parse(candidate: string): { notebookType: string; viewType: string } | undefined {\n\t\tif (candidate.startsWith(NotebookWorkingCopyTypeIdentifier._prefix)) {\n\t\t\tconst split = candidate.substring(NotebookWorkingCopyTypeIdentifier._prefix.length).split('/');\n\t\t\tif (split.length === 2) {\n\t\t\t\treturn { notebookType: split[0], viewType: split[1] };\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nexport interface NotebookExtensionDescription {\n\treadonly id: ExtensionIdentifier;\n\treadonly location: UriComponents | undefined;\n}\n\n/**\n * Whether the provided mime type is a text stream like `stdout`, `stderr`.\n */\nexport function isTextStreamMime(mimeType: string) {\n\treturn ['application/vnd.code.notebook.stdout', 'application/vnd.code.notebook.stderr'].includes(mimeType);\n}\n\n\nconst textDecoder = new TextDecoder();\n\n/**\n * Given a stream of individual stdout outputs, this function will return the compressed lines, escaping some of the common terminal escape codes.\n * E.g. some terminal escape codes would result in the previous line getting cleared, such if we had 3 lines and\n * last line contained such a code, then the result string would be just the first two lines.\n * @returns a single VSBuffer with the concatenated and compressed data, and whether any compression was done.\n */\nexport function compressOutputItemStreams(outputs: Uint8Array[]) {\n\tconst buffers: Uint8Array[] = [];\n\tlet startAppending = false;\n\n\t// Pick the first set of outputs with the same mime type.\n\tfor (const output of outputs) {\n\t\tif ((buffers.length === 0 || startAppending)) {\n\t\t\tbuffers.push(output);\n\t\t\tstartAppending = true;\n\t\t}\n\t}\n\n\tlet didCompression = compressStreamBuffer(buffers);\n\tconst concatenated = VSBuffer.concat(buffers.map(buffer => VSBuffer.wrap(buffer)));\n\tconst data = formatStreamText(concatenated);\n\tdidCompression = didCompression || data.byteLength !== concatenated.byteLength;\n\treturn { data, didCompression };\n}\n\nexport const MOVE_CURSOR_1_LINE_COMMAND = `${String.fromCharCode(27)}[A`;\nconst MOVE_CURSOR_1_LINE_COMMAND_BYTES = MOVE_CURSOR_1_LINE_COMMAND.split('').map(c => c.charCodeAt(0));\nconst LINE_FEED = 10;\nfunction compressStreamBuffer(streams: Uint8Array[]) {\n\tlet didCompress = false;\n\tstreams.forEach((stream, index) => {\n\t\tif (index === 0 || stream.length < MOVE_CURSOR_1_LINE_COMMAND.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousStream = streams[index - 1];\n\n\t\t// Remove the previous line if required.\n\t\tconst command = stream.subarray(0, MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\tif (command[0] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[0] && command[1] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[1] && command[2] === MOVE_CURSOR_1_LINE_COMMAND_BYTES[2]) {\n\t\t\tconst lastIndexOfLineFeed = previousStream.lastIndexOf(LINE_FEED);\n\t\t\tif (lastIndexOfLineFeed === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdidCompress = true;\n\t\t\tstreams[index - 1] = previousStream.subarray(0, lastIndexOfLineFeed);\n\t\t\tstreams[index] = stream.subarray(MOVE_CURSOR_1_LINE_COMMAND.length);\n\t\t}\n\t});\n\treturn didCompress;\n}\n\n\n\n/**\n * Took this from jupyter/notebook\n * https://github.com/jupyter/notebook/blob/b8b66332e2023e83d2ee04f83d8814f567e01a4e/notebook/static/base/js/utils.js\n * Remove characters that are overridden by backspace characters\n */\nfunction fixBackspace(txt: string) {\n\tlet tmp = txt;\n\tdo {\n\t\ttxt = tmp;\n\t\t// Cancel out anything-but-newline followed by backspace\n\t\ttmp = txt.replace(/[^\\n]\\x08/gm, '');\n\t} while (tmp.length < txt.length);\n\treturn txt;\n}\n\n/**\n * Remove chunks that should be overridden by the effect of carriage return characters\n * From https://github.com/jupyter/notebook/blob/master/notebook/static/base/js/utils.js\n */\nfunction fixCarriageReturn(txt: string) {\n\ttxt = txt.replace(/\\r+\\n/gm, '\\n'); // \\r followed by \\n --> newline\n\twhile (txt.search(/\\r[^$]/g) > -1) {\n\t\tconst base = txt.match(/^(.*)\\r+/m)![1];\n\t\tlet insert = txt.match(/\\r+(.*)$/m)![1];\n\t\tinsert = insert + base.slice(insert.length, base.length);\n\t\ttxt = txt.replace(/\\r+.*$/m, '\\r').replace(/^.*\\r/m, insert);\n\t}\n\treturn txt;\n}\n\nconst BACKSPACE_CHARACTER = '\\b'.charCodeAt(0);\nconst CARRIAGE_RETURN_CHARACTER = '\\r'.charCodeAt(0);\nfunction formatStreamText(buffer: VSBuffer): VSBuffer {\n\t// We have special handling for backspace and carriage return characters.\n\t// Don't unnecessary decode the bytes if we don't need to perform any processing.\n\tif (!buffer.buffer.includes(BACKSPACE_CHARACTER) && !buffer.buffer.includes(CARRIAGE_RETURN_CHARACTER)) {\n\t\treturn buffer;\n\t}\n\t// Do the same thing jupyter is doing\n\treturn VSBuffer.fromString(fixCarriageReturn(fixBackspace(textDecoder.decode(buffer.buffer))));\n}\n\nexport interface INotebookKernelSourceAction {\n\treadonly label: string;\n\treadonly description?: string;\n\treadonly detail?: string;\n\treadonly command?: string | Command;\n\treadonly documentation?: UriComponents | string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\n\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\treadonly word: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords: string = ''): RegExp {\n\tlet source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n\tfor (const sep of USUAL_WORD_SEPARATORS) {\n\t\tif (allowInWords.indexOf(sep) >= 0) {\n\t\t\tcontinue;\n\t\t}\n\t\tsource += '\\\\' + sep;\n\t}\n\tsource += '\\\\s]+)';\n\treturn new RegExp(source, 'g');\n}\n\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\n\nexport function ensureValidWordDefinition(wordDefinition?: RegExp | null): RegExp {\n\tlet result: RegExp = DEFAULT_WORD_REGEXP;\n\n\tif (wordDefinition && (wordDefinition instanceof RegExp)) {\n\t\tif (!wordDefinition.global) {\n\t\t\tlet flags = 'g';\n\t\t\tif (wordDefinition.ignoreCase) {\n\t\t\t\tflags += 'i';\n\t\t\t}\n\t\t\tif (wordDefinition.multiline) {\n\t\t\t\tflags += 'm';\n\t\t\t}\n\t\t\tif (wordDefinition.unicode) {\n\t\t\t\tflags += 'u';\n\t\t\t}\n\t\t\tresult = new RegExp(wordDefinition.source, flags);\n\t\t} else {\n\t\t\tresult = wordDefinition;\n\t\t}\n\t}\n\n\tresult.lastIndex = 0;\n\n\treturn result;\n}\n\n\nexport interface IGetWordAtTextConfig {\n\tmaxLen: number;\n\twindowSize: number;\n\ttimeBudget: number;\n}\n\n\nconst _defaultConfig = new LinkedList<IGetWordAtTextConfig>();\n_defaultConfig.unshift({\n\tmaxLen: 1000,\n\twindowSize: 15,\n\ttimeBudget: 150\n});\n\nexport function setDefaultGetWordAtTextConfig(value: IGetWordAtTextConfig) {\n\tconst rm = _defaultConfig.unshift(value);\n\treturn toDisposable(rm);\n}\n\nexport function getWordAtText(column: number, wordDefinition: RegExp, text: string, textOffset: number, config?: IGetWordAtTextConfig): IWordAtPosition | null {\n\t// Ensure the regex has the 'g' flag, otherwise this will loop forever\n\twordDefinition = ensureValidWordDefinition(wordDefinition);\n\n\tif (!config) {\n\t\tconfig = Iterable.first(_defaultConfig)!;\n\t}\n\n\tif (text.length > config.maxLen) {\n\t\t// don't throw strings that long at the regexp\n\t\t// but use a sub-string in which a word must occur\n\t\tlet start = column - config.maxLen / 2;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t} else {\n\t\t\ttextOffset += start;\n\t\t}\n\t\ttext = text.substring(start, column + config.maxLen / 2);\n\t\treturn getWordAtText(column, wordDefinition, text, textOffset, config);\n\t}\n\n\tconst t1 = Date.now();\n\tconst pos = column - 1 - textOffset;\n\n\tlet prevRegexIndex = -1;\n\tlet match: RegExpExecArray | null = null;\n\n\tfor (let i = 1; ; i++) {\n\t\t// check time budget\n\t\tif (Date.now() - t1 >= config.timeBudget) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// reset the index at which the regexp should start matching, also know where it\n\t\t// should stop so that subsequent search don't repeat previous searches\n\t\tconst regexIndex = pos - config.windowSize * i;\n\t\twordDefinition.lastIndex = Math.max(0, regexIndex);\n\t\tconst thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n\n\t\tif (!thisMatch && match) {\n\t\t\t// stop: we have something\n\t\t\tbreak;\n\t\t}\n\n\t\tmatch = thisMatch;\n\n\t\t// stop: searched at start\n\t\tif (regexIndex <= 0) {\n\t\t\tbreak;\n\t\t}\n\t\tprevRegexIndex = regexIndex;\n\t}\n\n\tif (match) {\n\t\tconst result = {\n\t\t\tword: match[0],\n\t\t\tstartColumn: textOffset + 1 + match.index,\n\t\t\tendColumn: textOffset + 1 + match.index + match[0].length\n\t\t};\n\t\twordDefinition.lastIndex = 0;\n\t\treturn result;\n\t}\n\n\treturn null;\n}\n\nfunction _findRegexMatchEnclosingPosition(wordDefinition: RegExp, text: string, pos: number, stopPos: number): RegExpExecArray | null {\n\tlet match: RegExpExecArray | null;\n\twhile (match = wordDefinition.exec(text)) {\n\t\tconst matchIndex = match.index || 0;\n\t\tif (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n\t\t\treturn match;\n\t\t} else if (stopPos > 0 && matchIndex > stopPos) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\n\nexport class PrefixSumComputer {\n\n\t/**\n\t * values[i] is the value at index i\n\t */\n\tprivate values: Uint32Array;\n\n\t/**\n\t * prefixSum[i] = SUM(heights[j]), 0 <= j <= i\n\t */\n\tprivate prefixSum: Uint32Array;\n\n\t/**\n\t * prefixSum[i], 0 <= i <= prefixSumValidIndex can be trusted\n\t */\n\tprivate readonly prefixSumValidIndex: Int32Array;\n\n\tconstructor(values: Uint32Array) {\n\t\tthis.values = values;\n\t\tthis.prefixSum = new Uint32Array(values.length);\n\t\tthis.prefixSumValidIndex = new Int32Array(1);\n\t\tthis.prefixSumValidIndex[0] = -1;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this.values.length;\n\t}\n\n\tpublic insertValues(insertIndex: number, insertValues: Uint32Array): boolean {\n\t\tinsertIndex = toUint32(insertIndex);\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\t\tconst insertValuesLen = insertValues.length;\n\n\t\tif (insertValuesLen === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length + insertValuesLen);\n\t\tthis.values.set(oldValues.subarray(0, insertIndex), 0);\n\t\tthis.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n\t\tthis.values.set(insertValues, insertIndex);\n\n\t\tif (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = insertIndex - 1;\n\t\t}\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic setValue(index: number, value: number): boolean {\n\t\tindex = toUint32(index);\n\t\tvalue = toUint32(value);\n\n\t\tif (this.values[index] === value) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.values[index] = value;\n\t\tif (index - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = index - 1;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic removeValues(startIndex: number, count: number): boolean {\n\t\tstartIndex = toUint32(startIndex);\n\t\tcount = toUint32(count);\n\n\t\tconst oldValues = this.values;\n\t\tconst oldPrefixSum = this.prefixSum;\n\n\t\tif (startIndex >= oldValues.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst maxCount = oldValues.length - startIndex;\n\t\tif (count >= maxCount) {\n\t\t\tcount = maxCount;\n\t\t}\n\n\t\tif (count === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.values = new Uint32Array(oldValues.length - count);\n\t\tthis.values.set(oldValues.subarray(0, startIndex), 0);\n\t\tthis.values.set(oldValues.subarray(startIndex + count), startIndex);\n\n\t\tthis.prefixSum = new Uint32Array(this.values.length);\n\t\tif (startIndex - 1 < this.prefixSumValidIndex[0]) {\n\t\t\tthis.prefixSumValidIndex[0] = startIndex - 1;\n\t\t}\n\t\tif (this.prefixSumValidIndex[0] >= 0) {\n\t\t\tthis.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getTotalSum(): number {\n\t\tif (this.values.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._getPrefixSum(this.values.length - 1);\n\t}\n\n\t/**\n\t * Returns the sum of the first `index + 1` many items.\n\t * @returns `SUM(0 <= j <= index, values[j])`.\n\t */\n\tpublic getPrefixSum(index: number): number {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tindex = toUint32(index);\n\t\treturn this._getPrefixSum(index);\n\t}\n\n\tprivate _getPrefixSum(index: number): number {\n\t\tif (index <= this.prefixSumValidIndex[0]) {\n\t\t\treturn this.prefixSum[index];\n\t\t}\n\n\t\tlet startIndex = this.prefixSumValidIndex[0] + 1;\n\t\tif (startIndex === 0) {\n\t\t\tthis.prefixSum[0] = this.values[0];\n\t\t\tstartIndex++;\n\t\t}\n\n\t\tif (index >= this.values.length) {\n\t\t\tindex = this.values.length - 1;\n\t\t}\n\n\t\tfor (let i = startIndex; i <= index; i++) {\n\t\t\tthis.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n\t\t}\n\t\tthis.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n\t\treturn this.prefixSum[index];\n\t}\n\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tsum = Math.floor(sum);\n\n\t\t// Compute all sums (to get a fully valid prefixSum)\n\t\tthis.getTotalSum();\n\n\t\tlet low = 0;\n\t\tlet high = this.values.length - 1;\n\t\tlet mid = 0;\n\t\tlet midStop = 0;\n\t\tlet midStart = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\n\t\t\tmidStop = this.prefixSum[mid];\n\t\t\tmidStart = midStop - this.values[mid];\n\n\t\t\tif (sum < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (sum >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn new PrefixSumIndexOfResult(mid, sum - midStart);\n\t}\n}\n\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n\tprivate _values: number[];\n\tprivate _isValid: boolean;\n\tprivate _validEndIndex: number;\n\n\t/**\n\t * _prefixSum[i] = SUM(values[j]), 0 <= j <= i\n\t */\n\tprivate _prefixSum: number[];\n\n\t/**\n\t * _indexBySum[sum] = idx => _prefixSum[idx - 1] <= sum < _prefixSum[idx]\n\t*/\n\tprivate _indexBySum: number[];\n\n\tconstructor(values: number[]) {\n\t\tthis._values = values;\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = -1;\n\t\tthis._prefixSum = [];\n\t\tthis._indexBySum = [];\n\t}\n\n\t/**\n\t * @returns SUM(0 <= j < values.length, values[j])\n\t */\n\tpublic getTotalSum(): number {\n\t\tthis._ensureValid();\n\t\treturn this._indexBySum.length;\n\t}\n\n\t/**\n\t * Returns the sum of the first `count` many items.\n\t * @returns `SUM(0 <= j < count, values[j])`.\n\t */\n\tpublic getPrefixSum(count: number): number {\n\t\tthis._ensureValid();\n\t\tif (count === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._prefixSum[count - 1];\n\t}\n\n\t/**\n\t * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n\t */\n\tpublic getIndexOf(sum: number): PrefixSumIndexOfResult {\n\t\tthis._ensureValid();\n\t\tconst idx = this._indexBySum[sum];\n\t\tconst viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n\t\treturn new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n\t}\n\n\tpublic removeValues(start: number, deleteCount: number): void {\n\t\tthis._values.splice(start, deleteCount);\n\t\tthis._invalidate(start);\n\t}\n\n\tpublic insertValues(insertIndex: number, insertArr: number[]): void {\n\t\tthis._values = arrayInsert(this._values, insertIndex, insertArr);\n\t\tthis._invalidate(insertIndex);\n\t}\n\n\tprivate _invalidate(index: number): void {\n\t\tthis._isValid = false;\n\t\tthis._validEndIndex = Math.min(this._validEndIndex, index - 1);\n\t}\n\n\tprivate _ensureValid(): void {\n\t\tif (this._isValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n\t\t\tconst value = this._values[i];\n\t\t\tconst sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n\n\t\t\tthis._prefixSum[i] = sumAbove + value;\n\t\t\tfor (let j = 0; j < value; j++) {\n\t\t\t\tthis._indexBySum[sumAbove + j] = i;\n\t\t\t}\n\t\t}\n\n\t\t// trim things\n\t\tthis._prefixSum.length = this._values.length;\n\t\tthis._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n\n\t\t// mark as valid\n\t\tthis._isValid = true;\n\t\tthis._validEndIndex = this._values.length - 1;\n\t}\n\n\tpublic setValue(index: number, value: number): void {\n\t\tif (this._values[index] === value) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._values[index] = value;\n\t\tthis._invalidate(index);\n\t}\n}\n\n\nexport class PrefixSumIndexOfResult {\n\t_prefixSumIndexOfResultBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly index: number,\n\t\tpublic readonly remainder: number\n\t) {\n\t\tthis.index = index;\n\t\tthis.remainder = remainder;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { splitLines } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { IRange } from '../core/range.js';\nimport { IModelContentChange } from '../textModelEvents.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\n\nexport interface IModelChangedEvent {\n\t/**\n\t * The actual changes.\n\t */\n\treadonly changes: IModelContentChange[];\n\t/**\n\t * The (new) end-of-line character.\n\t */\n\treadonly eol: string;\n\t/**\n\t * The new version id the model has transitioned to.\n\t */\n\treadonly versionId: number;\n\t/**\n\t * Flag that indicates that this event was generated while undoing.\n\t */\n\treadonly isUndoing: boolean;\n\t/**\n\t * Flag that indicates that this event was generated while redoing.\n\t */\n\treadonly isRedoing: boolean;\n}\n\nexport interface IMirrorTextModel {\n\treadonly version: number;\n}\n\nexport class MirrorTextModel implements IMirrorTextModel {\n\n\tprotected _uri: URI;\n\tprotected _lines: string[];\n\tprotected _eol: string;\n\tprotected _versionId: number;\n\tprotected _lineStarts: PrefixSumComputer | null;\n\tprivate _cachedTextValue: string | null;\n\n\tconstructor(uri: URI, lines: string[], eol: string, versionId: number) {\n\t\tthis._uri = uri;\n\t\tthis._lines = lines;\n\t\tthis._eol = eol;\n\t\tthis._versionId = versionId;\n\t\tthis._lineStarts = null;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tdispose(): void {\n\t\tthis._lines.length = 0;\n\t}\n\n\tget version(): number {\n\t\treturn this._versionId;\n\t}\n\n\tgetText(): string {\n\t\tif (this._cachedTextValue === null) {\n\t\t\tthis._cachedTextValue = this._lines.join(this._eol);\n\t\t}\n\t\treturn this._cachedTextValue;\n\t}\n\n\tonEvents(e: IModelChangedEvent): void {\n\t\tif (e.eol && e.eol !== this._eol) {\n\t\t\tthis._eol = e.eol;\n\t\t\tthis._lineStarts = null;\n\t\t}\n\n\t\t// Update my lines\n\t\tconst changes = e.changes;\n\t\tfor (const change of changes) {\n\t\t\tthis._acceptDeleteRange(change.range);\n\t\t\tthis._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n\t\t}\n\n\t\tthis._versionId = e.versionId;\n\t\tthis._cachedTextValue = null;\n\t}\n\n\tprotected _ensureLineStarts(): void {\n\t\tif (!this._lineStarts) {\n\t\t\tconst eolLength = this._eol.length;\n\t\t\tconst linesLength = this._lines.length;\n\t\t\tconst lineStartValues = new Uint32Array(linesLength);\n\t\t\tfor (let i = 0; i < linesLength; i++) {\n\t\t\t\tlineStartValues[i] = this._lines[i].length + eolLength;\n\t\t\t}\n\t\t\tthis._lineStarts = new PrefixSumComputer(lineStartValues);\n\t\t}\n\t}\n\n\t/**\n\t * All changes to a line's text go through this method\n\t */\n\tprivate _setLineText(lineIndex: number, newValue: string): void {\n\t\tthis._lines[lineIndex] = newValue;\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n\t\t}\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Delete text on the affected line\n\t\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t\t+ this._lines[range.startLineNumber - 1].substring(range.endColumn - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._setLineText(range.startLineNumber - 1,\n\t\t\tthis._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n\t\t\t+ this._lines[range.endLineNumber - 1].substring(range.endColumn - 1)\n\t\t);\n\n\t\t// Delete middle lines\n\t\tthis._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, insertText: string): void {\n\t\tif (insertText.length === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\t\tconst insertLines = splitLines(insertText);\n\t\tif (insertLines.length === 1) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t\t+ insertLines[0]\n\t\t\t\t+ this._lines[position.lineNumber - 1].substring(position.column - 1)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\t// Append overflowing text from first line to the end of text to insert\n\t\tinsertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n\n\t\t// Delete overflowing text from first line and insert text on first line\n\t\tthis._setLineText(position.lineNumber - 1,\n\t\t\tthis._lines[position.lineNumber - 1].substring(0, position.column - 1)\n\t\t\t+ insertLines[0]\n\t\t);\n\n\t\t// Insert new lines & store lengths\n\t\tconst newLengths = new Uint32Array(insertLines.length - 1);\n\t\tfor (let i = 1; i < insertLines.length; i++) {\n\t\t\tthis._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n\t\t\tnewLengths[i - 1] = insertLines[i].length + this._eol.length;\n\t\t}\n\n\t\tif (this._lineStarts) {\n\t\t\t// update prefix sum\n\t\t\tthis._lineStarts.insertValues(position.lineNumber, newLengths);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IWorkerClient, IWorkerServer } from '../../../../base/common/worker/simpleWorker.js';\nimport { IPosition, Position } from '../../core/position.js';\nimport { IRange, Range } from '../../core/range.js';\nimport { ensureValidWordDefinition, getWordAtText, IWordAtPosition } from '../../core/wordHelper.js';\nimport { IDocumentColorComputerTarget } from '../../languages/defaultDocumentColorsComputer.js';\nimport { ILinkComputerTarget } from '../../languages/linkComputer.js';\nimport { MirrorTextModel as BaseMirrorModel, IModelChangedEvent } from '../../model/mirrorTextModel.js';\nimport { IMirrorModel, IWordRange } from '../editorSimpleWorker.js';\nimport { IModelService } from '../model.js';\nimport { IRawModelData, IWorkerTextModelSyncChannelServer } from './textModelSync.protocol.js';\n\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nexport const STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n\nexport const WORKER_TEXT_MODEL_SYNC_CHANNEL = 'workerTextModelSync';\n\nexport class WorkerTextModelSyncClient extends Disposable {\n\n\tpublic static create(workerClient: IWorkerClient<any>, modelService: IModelService): WorkerTextModelSyncClient {\n\t\treturn new WorkerTextModelSyncClient(\n\t\t\tworkerClient.getChannel<IWorkerTextModelSyncChannelServer>(WORKER_TEXT_MODEL_SYNC_CHANNEL),\n\t\t\tmodelService\n\t\t);\n\t}\n\n\tprivate readonly _proxy: IWorkerTextModelSyncChannelServer;\n\tprivate readonly _modelService: IModelService;\n\tprivate _syncedModels: { [modelUrl: string]: IDisposable } = Object.create(null);\n\tprivate _syncedModelsLastUsedTime: { [modelUrl: string]: number } = Object.create(null);\n\n\tconstructor(proxy: IWorkerTextModelSyncChannelServer, modelService: IModelService, keepIdleModels: boolean = false) {\n\t\tsuper();\n\t\tthis._proxy = proxy;\n\t\tthis._modelService = modelService;\n\n\t\tif (!keepIdleModels) {\n\t\t\tconst timer = new IntervalTimer();\n\t\t\ttimer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n\t\t\tthis._register(timer);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tfor (const modelUrl in this._syncedModels) {\n\t\t\tdispose(this._syncedModels[modelUrl]);\n\t\t}\n\t\tthis._syncedModels = Object.create(null);\n\t\tthis._syncedModelsLastUsedTime = Object.create(null);\n\t\tsuper.dispose();\n\t}\n\n\tpublic ensureSyncedResources(resources: URI[], forceLargeModels: boolean = false): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst resourceStr = resource.toString();\n\n\t\t\tif (!this._syncedModels[resourceStr]) {\n\t\t\t\tthis._beginModelSync(resource, forceLargeModels);\n\t\t\t}\n\t\t\tif (this._syncedModels[resourceStr]) {\n\t\t\t\tthis._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _checkStopModelSync(): void {\n\t\tconst currentTime = (new Date()).getTime();\n\n\t\tconst toRemove: string[] = [];\n\t\tfor (const modelUrl in this._syncedModelsLastUsedTime) {\n\t\t\tconst elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n\t\t\tif (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n\t\t\t\ttoRemove.push(modelUrl);\n\t\t\t}\n\t\t}\n\n\t\tfor (const e of toRemove) {\n\t\t\tthis._stopModelSync(e);\n\t\t}\n\t}\n\n\tprivate _beginModelSync(resource: URI, forceLargeModels: boolean): void {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tif (!forceLargeModels && model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelUrl = resource.toString();\n\n\t\tthis._proxy.$acceptNewModel({\n\t\t\turl: model.uri.toString(),\n\t\t\tlines: model.getLinesContent(),\n\t\t\tEOL: model.getEOL(),\n\t\t\tversionId: model.getVersionId()\n\t\t});\n\n\t\tconst toDispose = new DisposableStore();\n\t\ttoDispose.add(model.onDidChangeContent((e) => {\n\t\t\tthis._proxy.$acceptModelChanged(modelUrl.toString(), e);\n\t\t}));\n\t\ttoDispose.add(model.onWillDispose(() => {\n\t\t\tthis._stopModelSync(modelUrl);\n\t\t}));\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._proxy.$acceptRemovedModel(modelUrl);\n\t\t}));\n\n\t\tthis._syncedModels[modelUrl] = toDispose;\n\t}\n\n\tprivate _stopModelSync(modelUrl: string): void {\n\t\tconst toDispose = this._syncedModels[modelUrl];\n\t\tdelete this._syncedModels[modelUrl];\n\t\tdelete this._syncedModelsLastUsedTime[modelUrl];\n\t\tdispose(toDispose);\n\t}\n}\n\nexport class WorkerTextModelSyncServer implements IWorkerTextModelSyncChannelServer {\n\n\tprivate readonly _models: { [uri: string]: MirrorModel };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic bindToServer(workerServer: IWorkerServer): void {\n\t\tworkerServer.setChannel(WORKER_TEXT_MODEL_SYNC_CHANNEL, this);\n\t}\n\n\tpublic getModel(uri: string): ICommonModel | undefined {\n\t\treturn this._models[uri];\n\t}\n\n\tpublic getModels(): ICommonModel[] {\n\t\tconst all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\t$acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\t$acceptModelChanged(uri: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._models[uri];\n\t\tmodel.onEvents(e);\n\t}\n\n\t$acceptRemovedModel(uri: string): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[uri];\n\t}\n}\n\nexport class MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic findMatches(regex: RegExp): RegExpMatchArray[] {\n\t\tconst matches = [];\n\t\tfor (let i = 0; i < this._lines.length; i++) {\n\t\t\tconst line = this._lines[i];\n\t\t\tconst offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n\t\t\tconst iteratorOverMatches = line.matchAll(regex);\n\t\t\tfor (const match of iteratorOverMatches) {\n\t\t\t\tif (match.index || match.index === 0) {\n\t\t\t\t\tmatch.index = match.index + offsetToAdd;\n\t\t\t\t}\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition {\n\t\tconst wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n\t\tif (!wordAtPosition) {\n\t\t\treturn {\n\t\t\t\tword: '',\n\t\t\t\tstartColumn: position.column,\n\t\t\t\tendColumn: position.column\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tword: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n\t\t\tstartColumn: wordAtPosition.startColumn,\n\t\t\tendColumn: position.column\n\t\t};\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tconst content = this._lines[lineNumber - 1];\n\t\tconst ranges = this._wordenize(content, wordDefinition);\n\t\tconst words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tconst lineEnding = this._eol;\n\t\tconst startLineIndex = range.startLineNumber - 1;\n\t\tconst endLineIndex = range.endLineNumber - 1;\n\t\tconst resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tconst maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\nexport interface ICommonModel extends ILinkComputerTarget, IDocumentColorComputerTarget, IMirrorModel {\n\turi: URI;\n\tversion: number;\n\teol: string;\n\tgetValue(): string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetWordUntilPosition(position: IPosition, wordDefinition: RegExp): IWordAtPosition;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n\tfindMatches(regex: RegExp): RegExpMatchArray[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ISequence, LcsDiff } from '../../../../../base/common/diff/diff.js';\nimport { doHash, numberHash } from '../../../../../base/common/hash.js';\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../../base/common/uri.js';\nimport { IRequestHandler, IWorkerServer } from '../../../../../base/common/worker/simpleWorker.js';\nimport { PieceTreeTextBufferBuilder } from '../../../../../editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.js';\nimport { CellKind, IMainCellDto, INotebookDiffResult, IOutputDto, NotebookCellInternalMetadata, NotebookCellMetadata, NotebookCellsChangedEventDto, NotebookCellsChangeType, NotebookCellTextModelSplice, NotebookDocumentMetadata, TransientDocumentMetadata } from '../notebookCommon.js';\nimport { Range } from '../../../../../editor/common/core/range.js';\nimport { SearchParams } from '../../../../../editor/common/model/textModelSearch.js';\nimport { MirrorModel } from '../../../../../editor/common/services/textModelSync/textModelSync.impl.js';\nimport { DefaultEndOfLine } from '../../../../../editor/common/model.js';\nimport { IModelChangedEvent } from '../../../../../editor/common/model/mirrorTextModel.js';\nimport { filter } from '../../../../../base/common/objects.js';\n\nclass MirrorCell {\n\tprivate readonly textModel: MirrorModel;\n\tprivate _hash?: Promise<number>;\n\tpublic get eol() {\n\t\treturn this._eol === '\\r\\n' ? DefaultEndOfLine.CRLF : DefaultEndOfLine.LF;\n\t}\n\tconstructor(\n\t\tpublic readonly handle: number,\n\t\turi: URI,\n\t\tsource: string[],\n\t\tprivate readonly _eol: string,\n\t\tversionId: number,\n\t\tpublic language: string,\n\t\tpublic cellKind: CellKind,\n\t\tpublic outputs: IOutputDto[],\n\t\tpublic metadata?: NotebookCellMetadata,\n\t\tpublic internalMetadata?: NotebookCellInternalMetadata,\n\n\t) {\n\t\tthis.textModel = new MirrorModel(uri, source, _eol, versionId);\n\t}\n\n\tonEvents(e: IModelChangedEvent) {\n\t\tthis.textModel.onEvents(e);\n\t\tthis._hash = undefined;\n\t}\n\tgetValue(): string {\n\t\treturn this.textModel.getValue();\n\t}\n\n\tasync getComparisonValue(): Promise<number> {\n\t\treturn this._hash ??= this._getHash();\n\t}\n\n\tprivate async _getHash() {\n\t\tlet hashValue = numberHash(104579, 0);\n\n\t\thashValue = doHash(this.language, hashValue);\n\t\thashValue = doHash(this.getValue(), hashValue);\n\t\thashValue = doHash(this.metadata, hashValue);\n\t\thashValue = doHash(this.internalMetadata, hashValue);\n\t\tfor (const op of this.outputs) {\n\t\t\thashValue = doHash(op.metadata, hashValue);\n\t\t\tfor (const output of op.outputs) {\n\t\t\t\thashValue = doHash(output.mime, hashValue);\n\t\t\t}\n\t\t}\n\n\t\t// note: hash has not updated within the Promise.all since we must retain order\n\t\tconst digests = await Promise.all(this.outputs.flatMap(op =>\n\t\t\top.outputs.map(o => crypto.subtle.digest('sha-1', o.data.buffer))\n\t\t));\n\t\tfor (const digest of digests) {\n\t\t\thashValue = numberHash(new Int32Array(digest)[0], hashValue);\n\t\t}\n\n\n\t\treturn hashValue;\n\t}\n}\n\nclass MirrorNotebookDocument {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic cells: MirrorCell[],\n\t\tpublic metadata: NotebookDocumentMetadata,\n\t\tpublic transientDocumentMetadata: TransientDocumentMetadata,\n\t) {\n\t}\n\n\tacceptModelChanged(event: NotebookCellsChangedEventDto) {\n\t\t// note that the cell content change is not applied to the MirrorCell\n\t\t// but it's fine as if a cell content is modified after the first diff, its position will not change any more\n\t\t// TODO@rebornix, but it might lead to interesting bugs in the future.\n\t\tevent.rawEvents.forEach(e => {\n\t\t\tif (e.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(e.changes);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Move) {\n\t\t\t\tconst cells = this.cells.splice(e.index, 1);\n\t\t\t\tthis.cells.splice(e.newIdx, 0, ...cells);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Output) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.outputs = e.outputs;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellLanguage) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.language = e.language;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.metadata = e.metadata;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellInternalMetadata) {\n\t\t\t\tthis._assertIndex(e.index);\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.internalMetadata = e.internalMetadata;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeDocumentMetadata) {\n\t\t\t\tthis.metadata = e.metadata;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _assertIndex(index: number): void {\n\t\tif (index < 0 || index >= this.cells.length) {\n\t\t\tthrow new Error(`Illegal index ${index}. Cells length: ${this.cells.length}`);\n\t\t}\n\t}\n\n\t_spliceNotebookCells(splices: NotebookCellTextModelSplice<IMainCellDto>[]) {\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\t\t\t\treturn new MirrorCell(\n\t\t\t\t\tcell.handle,\n\t\t\t\t\tURI.parse(cell.url),\n\t\t\t\t\tcell.source,\n\t\t\t\t\tcell.eol,\n\t\t\t\t\tcell.versionId,\n\t\t\t\t\tcell.language,\n\t\t\t\t\tcell.cellKind,\n\t\t\t\t\tcell.outputs,\n\t\t\t\t\tcell.metadata,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n}\n\nclass CellSequence implements ISequence {\n\n\tstatic async create(textModel: MirrorNotebookDocument) {\n\t\tconst hashValue = new Int32Array(textModel.cells.length);\n\t\tawait Promise.all(textModel.cells.map(async (c, i) => {\n\t\t\thashValue[i] = await c.getComparisonValue();\n\t\t}));\n\t\treturn new CellSequence(hashValue);\n\t}\n\n\tconstructor(readonly hashValue: Int32Array) { }\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\treturn this.hashValue;\n\t}\n}\n\nexport class NotebookEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorNotebookDocument };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\tdispose(): void {\n\t}\n\n\tpublic $acceptNewModel(uri: string, metadata: NotebookDocumentMetadata, transientDocumentMetadata: TransientDocumentMetadata, cells: IMainCellDto[]): void {\n\t\tthis._models[uri] = new MirrorNotebookDocument(URI.parse(uri), cells.map(dto => new MirrorCell(\n\t\t\tdto.handle,\n\t\t\tURI.parse(dto.url),\n\t\t\tdto.source,\n\t\t\tdto.eol,\n\t\t\tdto.versionId,\n\t\t\tdto.language,\n\t\t\tdto.cellKind,\n\t\t\tdto.outputs,\n\t\t\tdto.metadata\n\t\t)), metadata, transientDocumentMetadata);\n\t}\n\n\tpublic $acceptModelChanged(strURL: string, event: NotebookCellsChangedEventDto) {\n\t\tconst model = this._models[strURL];\n\t\tmodel?.acceptModelChanged(event);\n\t}\n\n\tpublic $acceptCellModelChanged(strURL: string, handle: number, event: IModelChangedEvent) {\n\t\tconst model = this._models[strURL];\n\t\tmodel.cells.find(cell => cell.handle === handle)?.onEvents(event);\n\t}\n\n\tpublic $acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tasync $computeDiff(originalUrl: string, modifiedUrl: string): Promise<INotebookDiffResult> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\n\t\tconst [originalSeq, modifiedSeq] = await Promise.all([\n\t\t\tCellSequence.create(original),\n\t\t\tCellSequence.create(modified),\n\t\t]);\n\n\t\tconst diff = new LcsDiff(originalSeq, modifiedSeq);\n\t\tconst diffResult = diff.ComputeDiff(false);\n\n\t\t/* let cellLineChanges: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: ILineChange[] }[] = [];\n\n\t\tdiffResult.changes.forEach(change => {\n\t\t\tif (change.modifiedLength === 0) {\n\t\t\t\t// deletion ...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (change.originalLength === 0) {\n\t\t\t\t// insertion\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = Math.min(change.modifiedLength, change.originalLength); i < len; i++) {\n\t\t\t\tlet originalIndex = change.originalStart + i;\n\t\t\t\tlet modifiedIndex = change.modifiedStart + i;\n\n\t\t\t\tconst originalCell = original.cells[originalIndex];\n\t\t\t\tconst modifiedCell = modified.cells[modifiedIndex];\n\n\t\t\t\tif (originalCell.getValue() !== modifiedCell.getValue()) {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} content change`);\n\t\t\t\t\tconst originalLines = originalCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst modifiedLines = modifiedCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\t\t\t\tshouldComputeCharChanges: true,\n\t\t\t\t\t\tshouldPostProcessCharChanges: true,\n\t\t\t\t\t\tshouldIgnoreTrimWhitespace: false,\n\t\t\t\t\t\tshouldMakePrettyDiff: true,\n\t\t\t\t\t\tmaxComputationTime: 5000\n\t\t\t\t\t});\n\n\t\t\t\t\tconst lineChanges = diffComputer.computeDiff().changes;\n\n\t\t\t\t\tcellLineChanges.push({\n\t\t\t\t\t\toriginalCellhandle: originalCell.handle,\n\t\t\t\t\t\tmodifiedCellhandle: modifiedCell.handle,\n\t\t\t\t\t\tlineChanges\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log(lineDecorations);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} metadata change`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n */\n\t\tconst originalMetadata = filter(original.metadata, key => !original.transientDocumentMetadata[key]);\n\t\tconst modifiedMetadata = filter(modified.metadata, key => !modified.transientDocumentMetadata[key]);\n\t\treturn {\n\t\t\tmetadataChanged: JSON.stringify(originalMetadata) !== JSON.stringify(modifiedMetadata),\n\t\t\tcellsDiff: diffResult,\n\t\t\t// linesDiff: cellLineChanges\n\t\t};\n\t}\n\n\t$canPromptRecommendation(modelUrl: string): boolean {\n\t\tconst model = this._getModel(modelUrl);\n\t\tconst cells = model.cells;\n\n\t\tfor (let i = 0; i < cells.length; i++) {\n\t\t\tconst cell = cells[i];\n\t\t\tif (cell.cellKind === CellKind.Markup) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (cell.language !== 'python') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst searchParams = new SearchParams('import\\\\s*pandas|from\\\\s*pandas', true, false, null);\n\t\t\tconst searchData = searchParams.parseSearchRequest();\n\n\t\t\tif (!searchData) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\t\tbuilder.acceptChunk(cell.getValue());\n\t\t\tconst bufferFactory = builder.finish(true);\n\t\t\tconst textBuffer = bufferFactory.create(cell.eol).textBuffer;\n\n\t\t\tconst lineCount = textBuffer.getLineCount();\n\t\t\tconst maxLineCount = Math.min(lineCount, 20);\n\t\t\tconst range = new Range(1, 1, maxLineCount, textBuffer.getLineLength(maxLineCount) + 1);\n\t\t\tconst cellMatches = textBuffer.findMatchesLineByLine(range, searchData, true, 1);\n\t\t\tif (cellMatches.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _getModel(uri: string): MirrorNotebookDocument {\n\t\treturn this._models[uri];\n\t}\n}\n\n/**\n * Defines the worker entry point. Must be exported and named `create`.\n * @skipMangle\n */\nexport function create(workerServer: IWorkerServer): IRequestHandler {\n\treturn new NotebookEditorSimpleWorker();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { bootstrapSimpleWorker } from '../../../../../base/common/worker/simpleWorkerBootstrap.js';\nimport { create } from './notebookSimpleWorker.js';\n\nbootstrapSimpleWorker(create);\n"],"mappings":"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","names":["$bb","$ub","listener","newUnexpectedErrorHandler","$cb","$gb","$kb","$ib","error","name","message","stack","canceledName","$lb","$ob","_$ub","msg","err","result","$a","data","groupFn","element","key","target","$e","values","b","_a","value","entry","callbackfn","thisArg","$Qc","fn","fnDidRunCallback","_this","didCall","$4","array","predicate","startIdx","endIdxEx","j","k","$8","_$8","e","item","idx","CompareResult","isLessThan","isLessThanOrEqual","isGreaterThan","isNeitherLessOrGreaterThan","$9b","selector","comparator","a","$$b","$cc","_$cc","_callback","iterate","handler","cb","mapFn","first","ResourceMapEntry","uri","isEntries","arg","$Ec","_$Ec","resource","toKey","clb","_","$Fc","entriesOrKey","_b","_value","Touch","$Gc","_c","touch","state","current","map","iterator","newSize","currentSize","next","previous","Cache","limit","ratio","$Hc","$Lc","Iterable","is","thing","_empty","empty","single","wrap","iterableOrElement","from","iterable","reverse","i","isEmpty","some","find","filter","index","flatMap","concat","iterables","reduce","reducer","initialValue","slice","arr","to","consume","atMost","consumed","asyncToArray","TRACK_DISPOSABLES","disposableTracker","$Rc","_$Rc","d","val","child","parent","x","disposable","cache","cacheValue","rootParentCache","v","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","info","leakingObjsSet","o","l","getStackTracePath","leaking","removePrefix","linesToRemove","regexp","lines","p","stackTraceStarts","stackTracePath","stackTraceFormattedLines","line","prevStarts","continuations","cont","set","$Sc","tracker","__is_disposable_tracked__","$3c","$Tc","$Uc","setParentOfDisposable","setParentOfDisposables","children","$Xc","errors","$Zc","disposables","$1c","self","$2c","_$2c","Node","_Node","$cd","node","atTheEnd","newNode","oldLast","oldFirst","didRemove","res","anchor","hasPerformanceNow","$se","_$se","highResolution","_enableListenerGCedWarning","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","_addLeakageTraceLogic","options","origListenerDidAdd","Stacktrace","count","defer","event","debounce","once","thisArgs","didFire","onceIf","condition","snapshot","forEach","each","signal","any","events","addAndReturnDisposable","merge","initial","output","emitter","$ye","store","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","handle","numDebouncedCalls","doFire","cur","_output","accumulate","last","latch","equals","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","chain","sythensize","cs","ChainableSynthesis","HaltChainable","step","fromNodeEventEmitter","eventName","id","args","onFirstListenerAdd","onLastListenerRemove","fromDOMEventEmitter","toPromise","resolve","fromPromise","promise","forward","runAndSubscribe","EmitterObserver","_observable","_change","fromObservable","obs","fromObservableLight","observable","didChange","observer","$ue","_$ue","listenerCount","elapsed","_globalLeakWarningThreshold","LeakageMonitor","_LeakageMonitor","threshold","topStack","topCount","$we","_Stacktrace","$xe","UniqueContainer","compactionThreshold","forEachListener","listeners","_listenerFinalizers","leaks","heldValue","callback","tuple","contained","removeMonitor","EventDeliveryQueuePrivate","match","adjustDeliveryQueue","n","errorHandler","dq","end","$f","$g","isPseudo","_format","rest","localize","lookupMessage","fallback","$j","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_locale","_language","_platformLocale","_translationsConfigFile","_userAgent","$globalThis","nodeProcess","isElectronProcess","isElectronRenderer","rawNlsConfig","nlsConfig","Platform","_platform","$l","$m","$n","$p","$r","$s","$t","$y","$z","Language","isDefaultVariant","isDefault","$D","$E","pending","len","candidate","lastId","myId","OperatingSystem","$H","$I","$J","$K","$L","shortcutEvent","context","CancellationToken","isCancellationToken","MutableToken","$of","t","$pf","arg1","arg2","$rf","$uf","str","$zf","$If","searchString","isRegex","modifiers","$Kf","$Mf","chCode","$Of","startIndex","$Rf","$Sf","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","$Uf","$Wf","diff","code","$Xf","$Yf","$Zf","candidateLength","$3f","charCode","$4f","$5f","highSurrogate","lowSurrogate","$6f","offset","nextCharCode","CONTAINS_RTL","makeContainsRtl","$ag","IS_BASIC_ASCII","$bg","$cg","$dg","$kg","$lg","GraphemeBreakType","GraphemeBreakTree","_GraphemeBreakTree","getGraphemeBreakRawData","codePoint","nodeCount","nodeIndex","CodePoint","$vg","_$vg","locales","arrayToMap","mergeMaps","map1","map2","intersectMaps","filteredLocales","languageSpecificMap","locale","commonMap","f","$wg","_$wg","safeProcess","vscodeGlobal","sandboxProcess","cwd","env","$hc","$ic","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","type","validateObject","pathObject","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","formatExt","ext","sep","dir","base","$jc","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","firstPart","tail","paths","joined","needsReplace","slashCount","firstLen","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","length","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","suffix","start","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","ret","posixCwd","$kc","trailingSeparator","hasRoot","$lc","$mc","$nc","$oc","$pc","$qc","$rc","$sc","$tc","$uc","$vc","$xc","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","scheme","_referenceResolution","_slash","_regexp","URI","_URI","schemeOrData","authority","query","fragment","$Ac","change","Uri","percentDecode","components","strict","pathFragment","newPath","skipEncoding","_asFormatted","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","Schemas","$$g","RemoteAuthoritiesImpl","schema","delegate","product","serverBasePath","$ah","host","port","connectionToken","$_g","basePath","$fh","FileAccessImpl","_FileAccessImpl","resourcePath","uriOrModule","moduleIdToUrl","rootUriOrPath","modulePath","$gh","COI","coiHeaders","coiSearchParamName","getHeadersFromQuery","url","params","addSearchParam","urlOrSearch","coop","coep","DEFAULT_CHANNEL","INITIALIZE","MessageType","RequestMessage","vsWorker","req","channel","method","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","workerId","reject","sendMessageBarrier","propertyIsDynamicEvent","propertyIsEvent","myArgs","replyMessage","reply","requestMessage","transfer","$h1","postMessage","requestHandlerFactory","requestHandler","inst","loaderConfig","moduleId","module","initialized","initialize","factory","simpleWorker","workerServer","$k3","_e","$zD","originalStart","originalLength","modifiedStart","modifiedLength","hasBuffer","indexOfTable","textEncoder","textDecoder","$zi","_$zi","byteLength","source","buffers","totalLength","$Di","$Ei","$Fi","$Gi","$Hi","$Ii","subarray","$Ai","haystack","needle","needleLen","haystackLen","table","$Bi","$Ci","destination","$Si","encoded","building","remainder","bufi","append","unpadded","base64Alphabet","base64UrlSafeAlphabet","$Ti","padded","urlSafe","dictionary","c","$Vi","obj","hashVal","$Wi","arrayHash","objectHash","$Xi","booleanHash","initialHashVal","s","SHA1Constant","leftRotate","bits","totalBits","delta","mask","toHexString","bufferOrValue","bitsize","$Zi","_$Zi","strLen","buff","buffLen","leftoverHighSurrogate","ml","bigBlock32","temp","Debug","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","LocalConstants","DiffChangeHelper","originalIndex","modifiedIndex","$CD","_$CD","originalSequence","modifiedSequence","continueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","sequence","elements","hashes","newIndex","originalElement","modifiedElement","index1","index2","pretty","originalEnd","modifiedEnd","quitEarlyArr","changes","midOriginalArr","midModifiedArr","midOriginal","midModified","leftChanges","rightChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","tempOriginalIndex","matchLengthOfLongest","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","prevChange","bestDelta","bestScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","originalScore","modifiedScore","left","right","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","$vD","_$vD","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","aLineNumber","bLineNumber","aColumn","bColumn","$wD","_$wD","startLineNumber","startColumn","endLineNumber","endColumn","range","position","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","lineCount","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","$Nv","OverviewRulerLane","GlyphMarginLane","MinimapPosition","MinimapSectionHeaderStyle","InjectedTextCursorStops","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","$5F","matches","TrackedRangeStickiness","PositionAffinity","ModelConstants","$8F","regex","wordSeparators","simpleSearch","$9F","reverseEdits","trimAutoWhitespaceLineNumbers","$DI","piece","color","$EI","$FI","$GI","NodeColor","calculateSize","calculateLF","resetSentinel","$HI","tree","y","$II","$JI","z","yWasRed","$MI","newSizeLeft","newLFLeft","lf_delta","$LI","w","$KI","lineFeedCntDelta","Constants","$sf","$tf","$4D","_$4D","_defaultValue","defaultValue","asciiMap","Boolean","WordCharacterClass","$6D","intlSegmenterLocales","segment","lineContent","segments","wordClassifierCache","$7D","$NI","matchCase","multiline","$OI","canUseSimpleSearch","nextChCode","$PI","rawMatches","captureMatches","leftIsWordBounday","text","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","rightIsWordBounday","charAfter","lastCharInMatch","$RI","$SI","searchRegex","lastIndex","m","AverageBufferSize","createUintArray","r","LineStarts","lineStarts","cr","lf","crlf","isBasicASCII","$TI","readonly","rLength","chr","$UI","$VI","bufferIndex","lineFeedCnt","$WI","PieceTreeSnapshot","BOM","PieceTreeSearchCache","nodePos","nodePosition","hasInvalidVal","tmp","newArr","$XI","chunks","eol","eolNormalized","lastNode","averageBufferSize","min","max","tempChunk","tempChunkLen","newEOL","startPosition","endPosition","leftLen","accumualtedValInCurrentIndex","lfCnt","originalOffset","lineStartOffset","startOffset","linesLength","currentLine","danglingCR","pieceLength","pieceStartLine","pieceEndLine","pieceStartOffset","matchingNode","targetOffset","targetEnd","searcher","startCursor","endCursor","searchData","limitResultCount","resultLen","startOffsetInBuffer","searchText","offsetInBuffer","retStartColumn","retEndColumn","searchRange","currentNode","lineBreakCnt","nextLineStartOffset","deltaOffset","searchStringLen","lastMatchIndex","nodeStartOffset","insertPosInBuffer","nodesToDel","newRightPiece","newStart","previousPos","newPieces","tmpNode","pieces","cnt","startNode","endNode","startSplitPosInBuffer","endSplitPosInBuffer","secondNode","prev","nPiece","low","high","mid","midStop","midStart","endOffset","previousCharOffset","cursor","nodes","lastChar","splitText","endIndex","endPos","newPiece","prevAccumulatedValue","accumulatedValue","originalLineNumber","lineCnt","realLineCnt","expectedLineStartIndex","originalLFCnt","originalEndOffset","newEnd","newEndOffset","newLineFeedCnt","size_delta","newLength","originalStartOffset","newStartOffset","originalStartPos","originalEndPos","oldLength","oldLFCnt","hitCRLF","prevStartOffset","oldLineFeedCnt","prevAccumualtedValue","newOffset","nextNode","prevNewLength","prevNewLFCnt","leftRet","prevNode","StringEOL","$fE","eolCount","firstLineLength","lastLineStart","_utf16LE_TextDecoder","getUTF16LE_TextDecoder","$ZD","view","compatDecodeUTF16LE","escapeNewLine","$2D","_$2D","oldPosition","oldText","newPosition","newText","dest","$YI","_$YI","containsRTL","containsUnusualLineTerminators","preserveBOM","lineEnding","eolOffsetCompensation","desiredEOL","actualEOL","fromLineNumber","toLineNumber","fromOffset","toOffset","rawOperations","recordTrimAutoWhitespace","computeUndoEdits","mightContainRTL","mightContainUnusualLineTerminators","mightContainNonBasicASCII","canReduceOperations","operations","op","validatedRange","textMightContainNonBasicASCII","validText","lastLineLength","strEOL","bufferEOL","hasTouchingRanges","rangeEnd","nextRangeStart","reverseRanges","newTrimAutoWhitespaceCandidates","reverseRange","currentLineContent","reverseOperations","reverseRangeDeltaOffset","bufferText","reverseRangeOffset","contentChanges","prevContent","forceMoveMarkers","firstEditRange","lastEditRange","entireEditRange","lastEndLineNumber","lastEndColumn","operation","contentChangeRange","resultRange","prevOpEndLineNumber","prevOpEndColumn","prevOp","PieceTreeTextBufferFactory","g","h","defaultEOL","totalEOLCount","totalCRCount","newLineStart","textBuffer","lengthLimit","$ZI","chunk","allowEmptyStrings","normalizeEOL","lastChunk","newLineStarts","$Qg","$Rg","osPath","$Sg","$Tg","firstLetter","$Yg","$Xg","parentCandidate","ignoreCase","sepOffset","char0","$hh","$ih","uri1","uri2","ignoreFragment","$yh","$qh","dirname","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","fsp","$zh","isRootSep","$jh","$kh","$lh","$mh","$nh","$oh","$ph","$rh","$sh","$th","$uh","$vh","$wh","$xh","$Ah","$Bh","DataUri","parseMetaData","dataUri","metadata","property","mime","$te","$9h","$0h","_targetWindow","runner","timeout","disposed","targetWindow","DeferredOutcome","Promises","settled","promises","firstError","withAsyncBody","bodyFn","AsyncIterableSourceState","$gi","_$gi","items","writer","executor","onReturn","filterFn","CACHE","$QC","TokenType","hintDidYouMean","meant","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","$5m","_$5m","token","ch","isTripleEq","additional","lexeme","errToken","keyword","inEscape","inCharacterClass","_util","getServiceDependencies","ctor","$Sk","$Tk","storeServiceDependency","serviceId","CONSTANT_VALUES","hasOwnProperty","ContextKeyExprType","defaultConfig","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","$7m","_$7m","input","expr","peek","additionalInfo","$8m","$$m","$_m","$fn","regexLexeme","closingSlashIndex","flags","$kn","lexemeReconstruction","followingToken","parenBalance","serializedValue","caseIgnoreFlag","$in","$jn","$gn","$hn","got","$an","$bn","$en","$cn","$dn","$mn","$nn","serialized","cmp","_$$m","mapFnc","_$_m","_$an","negated","constantValue","cmp1","_$bn","cmp2","trueValue","_$cn","valueKey","_$dn","_$en","falseValue","_$fn","withFloatOrStr","_$gn","_$hn","_$in","_$jn","_$kn","thisSource","otherSource","$ln","_$ln","eliminateConstantsInArray","newExpr","_$mn","_expr","extraRedundantCheck","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","_$nn","hasFalse","LEFT","RIGHT","all","getTerminals","$on","_$on","metaOrHide","$pn","key1","key2","value1","value2","$Qk","staticArguments","supportsDelayedInstantiation","_registry","InstantiationType","$KC","ctorOrDescriptor","$CR","_lengths","_padRegexp","_radix","$DR","cell","_scheme","$ER","notebook","$FR","$GR","$HR","cellUri","document","CellKind","$OR","$PR","NotebookRunState","NotebookCellExecutionState","NotebookExecutionState","NotebookRendererMatch","RendererMessagingSpec","NotebookCellsChangeType","SelectionStateType","CellEditType","NotebookMetadataUri","generate","parse","CellUri","generateCellOutputUri","outputId","parseCellOutputUri","generateCellPropertyUri","parseCellPropertyUri","propertyScheme","$UR","$VR","NotebookEditorPriority","NotebookFindScopeType","CellStatusbarAlignment","$ZR","_$ZR","notebookType","viewType","$3R","MOVE_CURSOR_1_LINE_COMMAND_BYTES","BACKSPACE_CHARACTER","CARRIAGE_RETURN_CHARACTER","$5C","createWordRegExp","allowInWords","$6C","$7C","wordDefinition","_defaultConfig","$9C","textOffset","config","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","stopPos","matchIndex","$aG","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","maxCount","sum","$cG","$dG","versionId","eolLength","lineStartValues","lineIndex","newValue","insertText","insertLines","newLengths","$K9","$O9","offsetToAdd","iteratorOverMatches","wordAtText","wordAtPosition","wordenize","lineText","wordRangesIdx","wordRanges","content","ranges","words","startLineIndex","endLineIndex","resultLines","lineLength","hasChanged","maxCharacter","MirrorCell","language","cellKind","outputs","internalMetadata","hashValue","digests","digest","MirrorNotebookDocument","cells","transientDocumentMetadata","splices","splice","newCells","CellSequence","_CellSequence","textModel","$eZb","dto","strURL","originalUrl","modifiedUrl","original","modified","originalSeq","modifiedSeq","diffResult","originalMetadata","modifiedMetadata","modelUrl","builder","maxLineCount","create"],"file":"notebookSimpleWorkerMain.js"}